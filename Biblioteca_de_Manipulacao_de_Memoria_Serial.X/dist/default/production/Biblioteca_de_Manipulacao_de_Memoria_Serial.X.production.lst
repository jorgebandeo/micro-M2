

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue May 21 17:51:13 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35   000000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4520 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70   000000                     _SSPSTAT	set	4039
    71   000000                     _SSPADD	set	4040
    72   000000                     _SSPCON2bits	set	4037
    73   000000                     _SSPSTATbits	set	4039
    74   000000                     _TRISC	set	3988
    75   000000                     _TRISCbits	set	3988
    76   000000                     _RCSTAbits	set	4011
    77   000000                     _TXSTAbits	set	4012
    78   000000                     _SPBRG	set	4015
    79   000000                     _BAUDCONbits	set	4024
    80   000000                     _SPBRGH	set	4016
    81   000000                     _SSPCON2	set	4037
    82   000000                     _SSPCON1	set	4038
    83   000000                     _TXREG	set	4013
    84   000000                     _SSPBUF	set	4041
    85                           
    86                           	psect	mediumconst
    87   006E94                     __pmediumconst:
    88                           	callstack 0
    89   006E94  00                 	db	0
    90   006E95                     STR_4:
    91   006E95  45                 	db	69	;'E'
    92   006E96  72                 	db	114	;'r'
    93   006E97  72                 	db	114	;'r'
    94   006E98  6F                 	db	111	;'o'
    95   006E99  3A                 	db	58	;':'
    96   006E9A  20                 	db	32
    97   006E9B  54                 	db	84	;'T'
    98   006E9C  65                 	db	101	;'e'
    99   006E9D  6E                 	db	110	;'n'
   100   006E9E  74                 	db	116	;'t'
   101   006E9F  61                 	db	97	;'a'
   102   006EA0  74                 	db	116	;'t'
   103   006EA1  69                 	db	105	;'i'
   104   006EA2  76                 	db	118	;'v'
   105   006EA3  61                 	db	97	;'a'
   106   006EA4  20                 	db	32
   107   006EA5  64                 	db	100	;'d'
   108   006EA6  65                 	db	101	;'e'
   109   006EA7  20                 	db	32
   110   006EA8  65                 	db	101	;'e'
   111   006EA9  73                 	db	115	;'s'
   112   006EAA  63                 	db	99	;'c'
   113   006EAB  72                 	db	114	;'r'
   114   006EAC  65                 	db	101	;'e'
   115   006EAD  76                 	db	118	;'v'
   116   006EAE  65                 	db	101	;'e'
   117   006EAF  72                 	db	114	;'r'
   118   006EB0  20                 	db	32
   119   006EB1  61                 	db	97	;'a'
   120   006EB2  6C                 	db	108	;'l'
   121   006EB3  65                 	db	101	;'e'
   122   006EB4  6D                 	db	109	;'m'
   123   006EB5  20                 	db	32
   124   006EB6  64                 	db	100	;'d'
   125   006EB7  61                 	db	97	;'a'
   126   006EB8  20                 	db	32
   127   006EB9  63                 	db	99	;'c'
   128   006EBA  61                 	db	97	;'a'
   129   006EBB  70                 	db	112	;'p'
   130   006EBC  61                 	db	97	;'a'
   131   006EBD  63                 	db	99	;'c'
   132   006EBE  69                 	db	105	;'i'
   133   006EBF  64                 	db	100	;'d'
   134   006EC0  61                 	db	97	;'a'
   135   006EC1  64                 	db	100	;'d'
   136   006EC2  65                 	db	101	;'e'
   137   006EC3  20                 	db	32
   138   006EC4  64                 	db	100	;'d'
   139   006EC5  61                 	db	97	;'a'
   140   006EC6  20                 	db	32
   141   006EC7  6D                 	db	109	;'m'
   142   006EC8  65                 	db	101	;'e'
   143   006EC9  6D                 	db	109	;'m'
   144   006ECA  6F                 	db	111	;'o'
   145   006ECB  72                 	db	114	;'r'
   146   006ECC  69                 	db	105	;'i'
   147   006ECD  61                 	db	97	;'a'
   148   006ECE  0D                 	db	13
   149   006ECF  0A                 	db	10
   150   006ED0  00                 	db	0
   151   006ED1                     STR_3:
   152   006ED1  45                 	db	69	;'E'
   153   006ED2  72                 	db	114	;'r'
   154   006ED3  72                 	db	114	;'r'
   155   006ED4  6F                 	db	111	;'o'
   156   006ED5  3A                 	db	58	;':'
   157   006ED6  20                 	db	32
   158   006ED7  54                 	db	84	;'T'
   159   006ED8  65                 	db	101	;'e'
   160   006ED9  6E                 	db	110	;'n'
   161   006EDA  74                 	db	116	;'t'
   162   006EDB  61                 	db	97	;'a'
   163   006EDC  74                 	db	116	;'t'
   164   006EDD  69                 	db	105	;'i'
   165   006EDE  76                 	db	118	;'v'
   166   006EDF  61                 	db	97	;'a'
   167   006EE0  20                 	db	32
   168   006EE1  64                 	db	100	;'d'
   169   006EE2  65                 	db	101	;'e'
   170   006EE3  20                 	db	32
   171   006EE4  6C                 	db	108	;'l'
   172   006EE5  65                 	db	101	;'e'
   173   006EE6  72                 	db	114	;'r'
   174   006EE7  20                 	db	32
   175   006EE8  61                 	db	97	;'a'
   176   006EE9  6C                 	db	108	;'l'
   177   006EEA  65                 	db	101	;'e'
   178   006EEB  6D                 	db	109	;'m'
   179   006EEC  20                 	db	32
   180   006EED  64                 	db	100	;'d'
   181   006EEE  61                 	db	97	;'a'
   182   006EEF  20                 	db	32
   183   006EF0  63                 	db	99	;'c'
   184   006EF1  61                 	db	97	;'a'
   185   006EF2  70                 	db	112	;'p'
   186   006EF3  61                 	db	97	;'a'
   187   006EF4  63                 	db	99	;'c'
   188   006EF5  69                 	db	105	;'i'
   189   006EF6  64                 	db	100	;'d'
   190   006EF7  61                 	db	97	;'a'
   191   006EF8  64                 	db	100	;'d'
   192   006EF9  65                 	db	101	;'e'
   193   006EFA  20                 	db	32
   194   006EFB  64                 	db	100	;'d'
   195   006EFC  61                 	db	97	;'a'
   196   006EFD  20                 	db	32
   197   006EFE  6D                 	db	109	;'m'
   198   006EFF  65                 	db	101	;'e'
   199   006F00  6D                 	db	109	;'m'
   200   006F01  6F                 	db	111	;'o'
   201   006F02  72                 	db	114	;'r'
   202   006F03  69                 	db	105	;'i'
   203   006F04  61                 	db	97	;'a'
   204   006F05  0D                 	db	13
   205   006F06  0A                 	db	10
   206   006F07  00                 	db	0
   207   006F08                     STR_6:
   208   006F08  45                 	db	69	;'E'
   209   006F09  72                 	db	114	;'r'
   210   006F0A  72                 	db	114	;'r'
   211   006F0B  6F                 	db	111	;'o'
   212   006F0C  3A                 	db	58	;':'
   213   006F0D  20                 	db	32
   214   006F0E  50                 	db	80	;'P'
   215   006F0F  6F                 	db	111	;'o'
   216   006F10  6E                 	db	110	;'n'
   217   006F11  74                 	db	116	;'t'
   218   006F12  65                 	db	101	;'e'
   219   006F13  69                 	db	105	;'i'
   220   006F14  72                 	db	114	;'r'
   221   006F15  6F                 	db	111	;'o'
   222   006F16  20                 	db	32
   223   006F17  66                 	db	102	;'f'
   224   006F18  6F                 	db	111	;'o'
   225   006F19  72                 	db	114	;'r'
   226   006F1A  61                 	db	97	;'a'
   227   006F1B  20                 	db	32
   228   006F1C  64                 	db	100	;'d'
   229   006F1D  6F                 	db	111	;'o'
   230   006F1E  73                 	db	115	;'s'
   231   006F1F  20                 	db	32
   232   006F20  6C                 	db	108	;'l'
   233   006F21  69                 	db	105	;'i'
   234   006F22  6D                 	db	109	;'m'
   235   006F23  69                 	db	105	;'i'
   236   006F24  74                 	db	116	;'t'
   237   006F25  65                 	db	101	;'e'
   238   006F26  73                 	db	115	;'s'
   239   006F27  20                 	db	32
   240   006F28  64                 	db	100	;'d'
   241   006F29  61                 	db	97	;'a'
   242   006F2A  20                 	db	32
   243   006F2B  6D                 	db	109	;'m'
   244   006F2C  65                 	db	101	;'e'
   245   006F2D  6D                 	db	109	;'m'
   246   006F2E  6F                 	db	111	;'o'
   247   006F2F  72                 	db	114	;'r'
   248   006F30  69                 	db	105	;'i'
   249   006F31  61                 	db	97	;'a'
   250   006F32  0D                 	db	13
   251   006F33  0A                 	db	10
   252   006F34  00                 	db	0
   253   006F35                     STR_10:
   254   006F35  53                 	db	83	;'S'
   255   006F36  75                 	db	117	;'u'
   256   006F37  63                 	db	99	;'c'
   257   006F38  65                 	db	101	;'e'
   258   006F39  73                 	db	115	;'s'
   259   006F3A  73                 	db	115	;'s'
   260   006F3B  6F                 	db	111	;'o'
   261   006F3C  20                 	db	32
   262   006F3D  6E                 	db	110	;'n'
   263   006F3E  6F                 	db	111	;'o'
   264   006F3F  20                 	db	32
   265   006F40  72                 	db	114	;'r'
   266   006F41  65                 	db	101	;'e'
   267   006F42  70                 	db	112	;'p'
   268   006F43  6F                 	db	111	;'o'
   269   006F44  73                 	db	115	;'s'
   270   006F45  69                 	db	105	;'i'
   271   006F46  63                 	db	99	;'c'
   272   006F47  69                 	db	105	;'i'
   273   006F48  6F                 	db	111	;'o'
   274   006F49  6E                 	db	110	;'n'
   275   006F4A  61                 	db	97	;'a'
   276   006F4B  6D                 	db	109	;'m'
   277   006F4C  65                 	db	101	;'e'
   278   006F4D  6E                 	db	110	;'n'
   279   006F4E  74                 	db	116	;'t'
   280   006F4F  6F                 	db	111	;'o'
   281   006F50  20                 	db	32
   282   006F51  64                 	db	100	;'d'
   283   006F52  6F                 	db	111	;'o'
   284   006F53  20                 	db	32
   285   006F54  70                 	db	112	;'p'
   286   006F55  6F                 	db	111	;'o'
   287   006F56  6E                 	db	110	;'n'
   288   006F57  74                 	db	116	;'t'
   289   006F58  65                 	db	101	;'e'
   290   006F59  69                 	db	105	;'i'
   291   006F5A  72                 	db	114	;'r'
   292   006F5B  6F                 	db	111	;'o'
   293   006F5C  0D                 	db	13
   294   006F5D  0A                 	db	10
   295   006F5E  00                 	db	0
   296   006F5F                     STR_1:
   297   006F5F  45                 	db	69	;'E'
   298   006F60  6E                 	db	110	;'n'
   299   006F61  64                 	db	100	;'d'
   300   006F62  65                 	db	101	;'e'
   301   006F63  72                 	db	114	;'r'
   302   006F64  65                 	db	101	;'e'
   303   006F65  63                 	db	99	;'c'
   304   006F66  6F                 	db	111	;'o'
   305   006F67  20                 	db	32
   306   006F68  61                 	db	97	;'a'
   307   006F69  74                 	db	116	;'t'
   308   006F6A  75                 	db	117	;'u'
   309   006F6B  61                 	db	97	;'a'
   310   006F6C  6C                 	db	108	;'l'
   311   006F6D  3A                 	db	58	;':'
   312   006F6E  20                 	db	32
   313   006F6F  25                 	db	37
   314   006F70  75                 	db	117	;'u'
   315   006F71  2C                 	db	44
   316   006F72  20                 	db	32
   317   006F73  4C                 	db	76	;'L'
   318   006F74  65                 	db	101	;'e'
   319   006F75  69                 	db	105	;'i'
   320   006F76  74                 	db	116	;'t'
   321   006F77  75                 	db	117	;'u'
   322   006F78  72                 	db	114	;'r'
   323   006F79  61                 	db	97	;'a'
   324   006F7A  20                 	db	32
   325   006F7B  5B                 	db	91	;'['
   326   006F7C  25                 	db	37
   327   006F7D  75                 	db	117	;'u'
   328   006F7E  5D                 	db	93	;']'
   329   006F7F  20                 	db	32
   330   006F80  3D                 	db	61	;'='
   331   006F81  20                 	db	32
   332   006F82  25                 	db	37
   333   006F83  75                 	db	117	;'u'
   334   006F84  20                 	db	32
   335   006F85  0D                 	db	13
   336   006F86  0A                 	db	10
   337   006F87  00                 	db	0
   338   006F88                     STR_7:
   339   006F88  53                 	db	83	;'S'
   340   006F89  65                 	db	101	;'e'
   341   006F8A  65                 	db	101	;'e'
   342   006F8B  6B                 	db	107	;'k'
   343   006F8C  3A                 	db	58	;':'
   344   006F8D  20                 	db	32
   345   006F8E  50                 	db	80	;'P'
   346   006F8F  6F                 	db	111	;'o'
   347   006F90  73                 	db	115	;'s'
   348   006F91  69                 	db	105	;'i'
   349   006F92  63                 	db	99	;'c'
   350   006F93  61                 	db	97	;'a'
   351   006F94  6F                 	db	111	;'o'
   352   006F95  20                 	db	32
   353   006F96  61                 	db	97	;'a'
   354   006F97  6C                 	db	108	;'l'
   355   006F98  74                 	db	116	;'t'
   356   006F99  65                 	db	101	;'e'
   357   006F9A  72                 	db	114	;'r'
   358   006F9B  61                 	db	97	;'a'
   359   006F9C  64                 	db	100	;'d'
   360   006F9D  61                 	db	97	;'a'
   361   006F9E  20                 	db	32
   362   006F9F  70                 	db	112	;'p'
   363   006FA0  61                 	db	97	;'a'
   364   006FA1  72                 	db	114	;'r'
   365   006FA2  61                 	db	97	;'a'
   366   006FA3  20                 	db	32
   367   006FA4  25                 	db	37
   368   006FA5  75                 	db	117	;'u'
   369   006FA6  0D                 	db	13
   370   006FA7  0A                 	db	10
   371   006FA8  00                 	db	0
   372   006FA9                     STR_11:
   373   006FA9  53                 	db	83	;'S'
   374   006FAA  75                 	db	117	;'u'
   375   006FAB  63                 	db	99	;'c'
   376   006FAC  65                 	db	101	;'e'
   377   006FAD  73                 	db	115	;'s'
   378   006FAE  73                 	db	115	;'s'
   379   006FAF  6F                 	db	111	;'o'
   380   006FB0  20                 	db	32
   381   006FB1  6E                 	db	110	;'n'
   382   006FB2  61                 	db	97	;'a'
   383   006FB3  20                 	db	32
   384   006FB4  6C                 	db	108	;'l'
   385   006FB5  65                 	db	101	;'e'
   386   006FB6  69                 	db	105	;'i'
   387   006FB7  74                 	db	116	;'t'
   388   006FB8  75                 	db	117	;'u'
   389   006FB9  72                 	db	114	;'r'
   390   006FBA  61                 	db	97	;'a'
   391   006FBB  3A                 	db	58	;':'
   392   006FBC  20                 	db	32
   393   006FBD  25                 	db	37
   394   006FBE  73                 	db	115	;'s'
   395   006FBF  0D                 	db	13
   396   006FC0  0A                 	db	10
   397   006FC1  00                 	db	0
   398   006FC2                     STR_9:
   399   006FC2  53                 	db	83	;'S'
   400   006FC3  75                 	db	117	;'u'
   401   006FC4  63                 	db	99	;'c'
   402   006FC5  65                 	db	101	;'e'
   403   006FC6  73                 	db	115	;'s'
   404   006FC7  73                 	db	115	;'s'
   405   006FC8  6F                 	db	111	;'o'
   406   006FC9  20                 	db	32
   407   006FCA  6E                 	db	110	;'n'
   408   006FCB  61                 	db	97	;'a'
   409   006FCC  20                 	db	32
   410   006FCD  65                 	db	101	;'e'
   411   006FCE  73                 	db	115	;'s'
   412   006FCF  63                 	db	99	;'c'
   413   006FD0  72                 	db	114	;'r'
   414   006FD1  69                 	db	105	;'i'
   415   006FD2  74                 	db	116	;'t'
   416   006FD3  61                 	db	97	;'a'
   417   006FD4  3A                 	db	58	;':'
   418   006FD5  20                 	db	32
   419   006FD6  25                 	db	37
   420   006FD7  73                 	db	115	;'s'
   421   006FD8  0D                 	db	13
   422   006FD9  0A                 	db	10
   423   006FDA  00                 	db	0
   424   006FDB                     STR_5:
   425   006FDB  45                 	db	69	;'E'
   426   006FDC  72                 	db	114	;'r'
   427   006FDD  72                 	db	114	;'r'
   428   006FDE  6F                 	db	111	;'o'
   429   006FDF  3A                 	db	58	;':'
   430   006FE0  20                 	db	32
   431   006FE1  4F                 	db	79	;'O'
   432   006FE2  72                 	db	114	;'r'
   433   006FE3  69                 	db	105	;'i'
   434   006FE4  67                 	db	103	;'g'
   435   006FE5  65                 	db	101	;'e'
   436   006FE6  6D                 	db	109	;'m'
   437   006FE7  20                 	db	32
   438   006FE8  69                 	db	105	;'i'
   439   006FE9  6E                 	db	110	;'n'
   440   006FEA  76                 	db	118	;'v'
   441   006FEB  61                 	db	97	;'a'
   442   006FEC  6C                 	db	108	;'l'
   443   006FED  69                 	db	105	;'i'
   444   006FEE  64                 	db	100	;'d'
   445   006FEF  61                 	db	97	;'a'
   446   006FF0  0D                 	db	13
   447   006FF1  0A                 	db	10
   448   006FF2  00                 	db	0
   449   006FF3                     STR_8:
   450   006FF3  68                 	db	104	;'h'
   451   006FF4  6F                 	db	111	;'o'
   452   006FF5  6C                 	db	108	;'l'
   453   006FF6  61                 	db	97	;'a'
   454   006FF7  20                 	db	32
   455   006FF8  6D                 	db	109	;'m'
   456   006FF9  75                 	db	117	;'u'
   457   006FFA  6E                 	db	110	;'n'
   458   006FFB  61                 	db	97	;'a'
   459   006FFC  64                 	db	100	;'d'
   460   006FFD  6F                 	db	111	;'o'
   461   006FFE  00                 	db	0
   462   006FFF  00                 	db	0	; dummy byte at the end
   463   000000                     
   464                           ; #config settings
   465                           
   466                           	psect	cinit
   467   00659A                     __pcinit:
   468                           	callstack 0
   469   00659A                     start_initialization:
   470                           	callstack 0
   471   00659A                     __initialization:
   472                           	callstack 0
   473                           
   474                           ; Clear objects allocated to COMRAM (39 bytes)
   475   00659A  EE00  F049         	lfsr	0,__pbssCOMRAM
   476   00659E  0E27               	movlw	39
   477   0065A0                     clear_0:
   478   0065A0  6AEE               	clrf	postinc0,c
   479   0065A2  06E8               	decf	wreg,f,c
   480   0065A4  E1FD               	bnz	clear_0
   481   0065A6                     end_of_initialization:
   482                           	callstack 0
   483   0065A6                     __end_of__initialization:
   484                           	callstack 0
   485   0065A6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   486   0065A8  6EF8               	movwf	tblptru,c
   487   0065AA  0100               	movlb	0
   488   0065AC  EF58  F034         	goto	_main	;jump to C main() function
   489                           
   490                           	psect	bssCOMRAM
   491   000049                     __pbssCOMRAM:
   492                           	callstack 0
   493   000049                     _dbuf:
   494                           	callstack 0
   495   000049                     	ds	32
   496   000069                     _width:
   497                           	callstack 0
   498   000069                     	ds	2
   499   00006B                     _prec:
   500                           	callstack 0
   501   00006B                     	ds	2
   502   00006D                     _current_pointer:
   503                           	callstack 0
   504   00006D                     	ds	2
   505   00006F                     _flags:
   506                           	callstack 0
   507   00006F                     	ds	1
   508                           
   509                           	psect	cstackCOMRAM
   510   000001                     __pcstackCOMRAM:
   511                           	callstack 0
   512   000001                     ?___lwdiv:
   513                           	callstack 0
   514   000001                     ?___lwmod:
   515                           	callstack 0
   516   000001                     putch@byte:
   517                           	callstack 0
   518   000001                     I2C_TRANSMITE@DADO_I2C:
   519                           	callstack 0
   520   000001                     I2C_RECEBE@x:
   521                           	callstack 0
   522   000001                     ___lwdiv@dividend:
   523                           	callstack 0
   524   000001                     ___lwmod@dividend:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x0
   528   000001                     	ds	1
   529   000002                     fputc@c:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x1
   533   000002                     	ds	1
   534   000003                     ___lwdiv@divisor:
   535                           	callstack 0
   536   000003                     ___lwmod@divisor:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x2
   540   000003                     	ds	1
   541   000004                     fputc@fp:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x3
   545   000004                     	ds	1
   546   000005                     ___lwmod@counter:
   547                           	callstack 0
   548   000005                     ___lwdiv@quotient:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x4
   552   000005                     	ds	1
   553   000006                     ??_fputc:
   554                           
   555                           ; 1 bytes @ 0x5
   556   000006                     	ds	1
   557   000007                     ___lwdiv@counter:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x6
   561   000007                     	ds	4
   562   00000B                     vfpfcnvrt@fp:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0xA
   566   00000B                     	ds	2
   567   00000D                     vfpfcnvrt@fmt:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0xC
   571   00000D                     	ds	1
   572   00000E                     vfpfcnvrt@ap:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0xD
   576   00000E                     	ds	1
   577   00000F                     ??_vfpfcnvrt:
   578                           
   579                           ; 1 bytes @ 0xE
   580   00000F                     	ds	2
   581   000011                     vfpfcnvrt@done:
   582                           	callstack 0
   583                           
   584                           ; 1 bytes @ 0x10
   585   000011                     	ds	1
   586   000012                     vfpfcnvrt@cp_1064:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x11
   590   000012                     	ds	2
   591   000014                     vfpfcnvrt@cp:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x13
   595   000014                     	ds	2
   596   000016                     vfpfcnvrt@convarg:
   597                           	callstack 0
   598                           
   599                           ; 4 bytes @ 0x15
   600   000016                     	ds	4
   601   00001A                     vfpfcnvrt@c:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x19
   605   00001A                     	ds	1
   606   00001B                     ?_vfprintf:
   607                           	callstack 0
   608   00001B                     vfprintf@fp:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x1A
   612   00001B                     	ds	2
   613   00001D                     vfprintf@fmt:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x1C
   617   00001D                     	ds	2
   618   00001F                     vfprintf@ap:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x1E
   622   00001F                     	ds	1
   623   000020                     vfprintf@cfmt:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x1F
   627   000020                     	ds	2
   628   000022                     ?_printf:
   629                           	callstack 0
   630   000022                     printf@fmt:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x21
   634   000022                     	ds	8
   635   00002A                     printf@ap:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0x29
   639   00002A                     	ds	1
   640   00002B                     i2c_write@address:
   641                           	callstack 0
   642   00002B                     i2c_read@address:
   643                           	callstack 0
   644   00002B                     serial_memory_seek@offset:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x2A
   648   00002B                     	ds	2
   649   00002D                     i2c_read@data:
   650                           	callstack 0
   651   00002D                     serial_memory_seek@origin:
   652                           	callstack 0
   653   00002D                     i2c_write@data:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x2C
   657   00002D                     	ds	1
   658   00002E                     i2c_read@length:
   659                           	callstack 0
   660   00002E                     serial_memory_seek@new_pointer:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x2D
   664   00002E                     	ds	1
   665   00002F                     i2c_write@length:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x2E
   669   00002F                     	ds	1
   670   000030                     ??_i2c_read:
   671                           
   672                           ; 1 bytes @ 0x2F
   673   000030                     	ds	1
   674   000031                     ??_i2c_write:
   675                           
   676                           ; 1 bytes @ 0x30
   677   000031                     	ds	1
   678   000032                     i2c_read@i:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x31
   682   000032                     	ds	1
   683   000033                     i2c_write@i:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x32
   687   000033                     	ds	1
   688   000034                     serial_memory_read@buffer:
   689                           	callstack 0
   690                           
   691                           ; 1 bytes @ 0x33
   692   000034                     	ds	1
   693   000035                     serial_memory_read@num_bytes:
   694                           	callstack 0
   695   000035                     serial_memory_write@data:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x34
   699   000035                     	ds	2
   700   000037                     serial_memory_write@num_bytes:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x36
   704   000037                     	ds	2
   705   000039                     ??_serial_memory_write:
   706                           
   707                           ; 1 bytes @ 0x38
   708   000039                     	ds	2
   709   00003B                     main@read_buffer:
   710                           	callstack 0
   711                           
   712                           ; 12 bytes @ 0x3A
   713   00003B                     	ds	12
   714   000047                     main@message:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x46
   718   000047                     	ds	2
   719                           
   720 ;;
   721 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   722 ;;
   723 ;; *************** function _main *****************
   724 ;; Defined at:
   725 ;;		line 153 in file "main.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;		None
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  read_buffer    12   58[COMRAM] unsigned char [12]
   730 ;;  message         2   70[COMRAM] PTR const unsigned char 
   731 ;;		 -> STR_8(12), 
   732 ;; Return value:  Size  Location     Type
   733 ;;                  2   87[None  ] int 
   734 ;; Registers used:
   735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   741 ;;      Params:         0       0       0       0       0       0       0
   742 ;;      Locals:        14       0       0       0       0       0       0
   743 ;;      Temps:          0       0       0       0       0       0       0
   744 ;;      Totals:        14       0       0       0       0       0       0
   745 ;;Total ram usage:       14 bytes
   746 ;; Hardware stack levels required when called: 7
   747 ;; This function calls:
   748 ;;		_I2C_INICIA
   749 ;;		_initUART
   750 ;;		_printf
   751 ;;		_serial_memory_read
   752 ;;		_serial_memory_seek
   753 ;;		_serial_memory_write
   754 ;; This function is called by:
   755 ;;		Startup code after reset
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           	psect	text0
   760   0068B0                     __ptext0:
   761                           	callstack 0
   762   0068B0                     _main:
   763                           	callstack 24
   764   0068B0                     
   765                           ;main.c: 154:     if (serial_memory_write((const uint8_t *)message, 12) == 0) {
   766   0068B0  ECD8  F032         	call	_initUART	;wreg free
   767                           
   768                           ;main.c: 155:         printf("Sucesso na escrita: %s\r\n", message);
   769   0068B4  EC8B  F032         	call	_I2C_INICIA	;wreg free
   770   0068B8                     
   771                           ;main.c: 157: 
   772   0068B8  0EF3               	movlw	low STR_8
   773   0068BA  6E47               	movwf	main@message^0,c
   774   0068BC  0E6F               	movlw	high STR_8
   775   0068BE  6E48               	movwf	(main@message+1)^0,c
   776   0068C0                     
   777                           ;main.c: 159:     if (serial_memory_seek(0, 0) == 0) {;main.c: 162: 
   778   0068C0  C047  F035         	movff	main@message,serial_memory_write@data
   779   0068C4  C048  F036         	movff	main@message+1,serial_memory_write@data+1
   780   0068C8  0E00               	movlw	0
   781   0068CA  6E38               	movwf	(serial_memory_write@num_bytes+1)^0,c
   782   0068CC  0E0C               	movlw	12
   783   0068CE  6E37               	movwf	serial_memory_write@num_bytes^0,c
   784   0068D0  EC72  F033         	call	_serial_memory_write	;wreg free
   785   0068D4  0900               	iorlw	0
   786   0068D6  A4D8               	btfss	status,2,c
   787   0068D8  EF70  F034         	goto	u801
   788   0068DC  EF72  F034         	goto	u800
   789   0068E0                     u801:
   790   0068E0  EF7C  F034         	goto	l88
   791   0068E4                     u800:
   792   0068E4                     
   793                           ;main.c: 163: 
   794   0068E4  0EC2               	movlw	low STR_9
   795   0068E6  6E22               	movwf	printf@fmt^0,c
   796   0068E8  0E6F               	movlw	high STR_9
   797   0068EA  6E23               	movwf	(printf@fmt+1)^0,c
   798   0068EC  C047  F024         	movff	main@message,?_printf+2
   799   0068F0  C048  F025         	movff	main@message+1,?_printf+3
   800   0068F4  ECE5  F032         	call	_printf	;wreg free
   801   0068F8                     l88:
   802                           
   803                           ;main.c: 167: 
   804   0068F8  0E00               	movlw	0
   805   0068FA  6E2C               	movwf	(serial_memory_seek@offset+1)^0,c
   806   0068FC  0E00               	movlw	0
   807   0068FE  6E2B               	movwf	serial_memory_seek@offset^0,c
   808   006900  0E00               	movlw	0
   809   006902  6E2D               	movwf	serial_memory_seek@origin^0,c
   810   006904  EC07  F034         	call	_serial_memory_seek	;wreg free
   811   006908  0900               	iorlw	0
   812   00690A  A4D8               	btfss	status,2,c
   813   00690C  EF8A  F034         	goto	u811
   814   006910  EF8C  F034         	goto	u810
   815   006914                     u811:
   816   006914  EF92  F034         	goto	l89
   817   006918                     u810:
   818   006918                     
   819                           ;main.c: 168: 
   820   006918  0E35               	movlw	low STR_10
   821   00691A  6E22               	movwf	printf@fmt^0,c
   822   00691C  0E6F               	movlw	high STR_10
   823   00691E  6E23               	movwf	(printf@fmt+1)^0,c
   824   006920  ECE5  F032         	call	_printf	;wreg free
   825   006924                     l89:
   826                           
   827                           ;main.c: 172: 
   828   006924  0E3B               	movlw	low main@read_buffer
   829   006926  6E34               	movwf	serial_memory_read@buffer^0,c
   830   006928  0E00               	movlw	0
   831   00692A  6E36               	movwf	(serial_memory_read@num_bytes+1)^0,c
   832   00692C  0E0C               	movlw	12
   833   00692E  6E35               	movwf	serial_memory_read@num_bytes^0,c
   834   006930  EC06  F033         	call	_serial_memory_read	;wreg free
   835   006934  0900               	iorlw	0
   836   006936  A4D8               	btfss	status,2,c
   837   006938  EFA0  F034         	goto	u821
   838   00693C  EFA2  F034         	goto	u820
   839   006940                     u821:
   840   006940  EFAB  F034         	goto	l91
   841   006944                     u820:
   842   006944                     
   843                           ;main.c: 173:     return 0;
   844   006944  0EA9               	movlw	low STR_11
   845   006946  6E22               	movwf	printf@fmt^0,c
   846   006948  0E6F               	movlw	high STR_11
   847   00694A  6E23               	movwf	(printf@fmt+1)^0,c
   848   00694C  0E3B               	movlw	low main@read_buffer
   849   00694E  6E24               	movwf	(?_printf+2)^0,c
   850   006950  6A25               	clrf	(?_printf+3)^0,c
   851   006952  ECE5  F032         	call	_printf	;wreg free
   852   006956                     l91:
   853   006956  EFAB  F034         	goto	l91
   854   00695A  EF00  F000         	goto	start
   855   00695E                     __end_of_main:
   856                           	callstack 0
   857                           
   858 ;; *************** function _serial_memory_write *****************
   859 ;; Defined at:
   860 ;;		line 98 in file "main.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;  data            2   52[COMRAM] PTR const unsigned char 
   863 ;;		 -> STR_8(12), 
   864 ;;  num_bytes       2   54[COMRAM] unsigned short 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      unsigned char 
   869 ;; Registers used:
   870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   876 ;;      Params:         4       0       0       0       0       0       0
   877 ;;      Locals:         0       0       0       0       0       0       0
   878 ;;      Temps:          2       0       0       0       0       0       0
   879 ;;      Totals:         6       0       0       0       0       0       0
   880 ;;Total ram usage:        6 bytes
   881 ;; Hardware stack levels used: 1
   882 ;; Hardware stack levels required when called: 6
   883 ;; This function calls:
   884 ;;		_i2c_write
   885 ;;		_printf
   886 ;; This function is called by:
   887 ;;		_main
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           	psect	text1
   892   0066E4                     __ptext1:
   893                           	callstack 0
   894   0066E4                     _serial_memory_write:
   895                           	callstack 24
   896   0066E4                     
   897                           ;main.c: 99:     return 0;
   898   0066E4  5037               	movf	serial_memory_write@num_bytes^0,w,c
   899   0066E6  246D               	addwf	_current_pointer^0,w,c
   900   0066E8  6E39               	movwf	??_serial_memory_write^0,c
   901   0066EA  5038               	movf	(serial_memory_write@num_bytes+1)^0,w,c
   902   0066EC  206E               	addwfc	(_current_pointer+1)^0,w,c
   903   0066EE  6E3A               	movwf	(??_serial_memory_write+1)^0,c
   904   0066F0  0439               	decf	??_serial_memory_write^0,w,c
   905   0066F2  0E80               	movlw	128
   906   0066F4  583A               	subwfb	(??_serial_memory_write+1)^0,w,c
   907   0066F6  A0D8               	btfss	status,0,c
   908   0066F8  EF80  F033         	goto	u781
   909   0066FC  EF82  F033         	goto	u780
   910   006700                     u781:
   911   006700  EF8B  F033         	goto	l1527
   912   006704                     u780:
   913   006704                     
   914                           ;main.c: 100: }
   915   006704  0E95               	movlw	low STR_4
   916   006706  6E22               	movwf	printf@fmt^0,c
   917   006708  0E6E               	movlw	high STR_4
   918   00670A  6E23               	movwf	(printf@fmt+1)^0,c
   919   00670C  ECE5  F032         	call	_printf	;wreg free
   920   006710                     
   921                           ;main.c: 101: 
   922   006710  0EFF               	movlw	255
   923   006712  EF9A  F033         	goto	l67
   924   006716                     l1527:
   925                           
   926                           ;main.c: 104: 
   927   006716  C06D  F02B         	movff	_current_pointer,i2c_write@address
   928   00671A  C06E  F02C         	movff	_current_pointer+1,i2c_write@address+1
   929   00671E  C035  F02D         	movff	serial_memory_write@data,i2c_write@data
   930   006722  C036  F02E         	movff	serial_memory_write@data+1,i2c_write@data+1
   931   006726  C037  F02F         	movff	serial_memory_write@num_bytes,i2c_write@length
   932   00672A  C038  F030         	movff	serial_memory_write@num_bytes+1,i2c_write@length+1
   933   00672E  ECAF  F034         	call	_i2c_write	;wreg free
   934   006732                     
   935                           ;main.c: 107: 
   936   006732  0E00               	movlw	0
   937   006734                     l67:
   938   006734  0012               	return		;funcret
   939   006736                     __end_of_serial_memory_write:
   940                           	callstack 0
   941                           
   942 ;; *************** function _i2c_write *****************
   943 ;; Defined at:
   944 ;;		line 42 in file "main.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;  address         2   42[COMRAM] unsigned short 
   947 ;;  data            2   44[COMRAM] PTR const unsigned char 
   948 ;;		 -> STR_8(12), 
   949 ;;  length          2   46[COMRAM] unsigned short 
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  i               2   50[COMRAM] unsigned short 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   961 ;;      Params:         6       0       0       0       0       0       0
   962 ;;      Locals:         2       0       0       0       0       0       0
   963 ;;      Temps:          2       0       0       0       0       0       0
   964 ;;      Totals:        10       0       0       0       0       0       0
   965 ;;Total ram usage:       10 bytes
   966 ;; Hardware stack levels used: 1
   967 ;; Hardware stack levels required when called: 5
   968 ;; This function calls:
   969 ;;		_I2C_START
   970 ;;		_I2C_STOP
   971 ;;		_I2C_TRANSMITE
   972 ;;		_printf
   973 ;; This function is called by:
   974 ;;		_serial_memory_write
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           	psect	text2
   979   00695E                     __ptext2:
   980                           	callstack 0
   981   00695E                     _i2c_write:
   982                           	callstack 24
   983   00695E                     
   984                           ;main.c: 45:         _delay((unsigned long)((20)*(16000000/4000.0)));
   985   00695E  0E00               	movlw	0
   986   006960  6E34               	movwf	(i2c_write@i+1)^0,c
   987   006962  0E00               	movlw	0
   988   006964  6E33               	movwf	i2c_write@i^0,c
   989   006966  EFFC  F034         	goto	l1475
   990   00696A                     l1455:
   991                           
   992                           ;main.c: 46:         address = 2 + address;
   993   00696A  EC9C  F032         	call	_I2C_START	;wreg free
   994   00696E                     
   995                           ;main.c: 47: 
   996   00696E  0EA0               	movlw	160
   997   006970  ECF4  F032         	call	_I2C_TRANSMITE
   998   006974                     
   999                           ;main.c: 48:     }
  1000   006974  502C               	movf	(i2c_write@address+1)^0,w,c
  1001   006976  ECF4  F032         	call	_I2C_TRANSMITE
  1002   00697A                     
  1003                           ;main.c: 49: 
  1004   00697A  502B               	movf	i2c_write@address^0,w,c
  1005   00697C  ECF4  F032         	call	_I2C_TRANSMITE
  1006   006980                     
  1007                           ;main.c: 50: }
  1008   006980  5033               	movf	i2c_write@i^0,w,c
  1009   006982  242D               	addwf	i2c_write@data^0,w,c
  1010   006984  6E31               	movwf	??_i2c_write^0,c
  1011   006986  5034               	movf	(i2c_write@i+1)^0,w,c
  1012   006988  202E               	addwfc	(i2c_write@data+1)^0,w,c
  1013   00698A  6E32               	movwf	(??_i2c_write+1)^0,c
  1014   00698C  C031  FFF6         	movff	??_i2c_write,tblptrl
  1015   006990  C032  FFF7         	movff	??_i2c_write+1,tblptrh
  1016   006994                     	if	0	;tblptru may be non-zero
  1017   006994                     	endif
  1018   006994                     	if	0	;tblptru may be non-zero
  1019   006994                     	endif
  1020   006994  0008               	tblrd		*
  1021   006996  50F5               	movf	tablat,w,c
  1022   006998  ECF4  F032         	call	_I2C_TRANSMITE
  1023   00699C                     
  1024                           ;main.c: 51: 
  1025   00699C  0E5F               	movlw	low STR_1
  1026   00699E  6E22               	movwf	printf@fmt^0,c
  1027   0069A0  0E6F               	movlw	high STR_1
  1028   0069A2  6E23               	movwf	(printf@fmt+1)^0,c
  1029   0069A4  C02B  F024         	movff	i2c_write@address,?_printf+2
  1030   0069A8  C02C  F025         	movff	i2c_write@address+1,?_printf+3
  1031   0069AC  C033  F026         	movff	i2c_write@i,?_printf+4
  1032   0069B0  C034  F027         	movff	i2c_write@i+1,?_printf+5
  1033   0069B4  5033               	movf	i2c_write@i^0,w,c
  1034   0069B6  242D               	addwf	i2c_write@data^0,w,c
  1035   0069B8  6E31               	movwf	??_i2c_write^0,c
  1036   0069BA  5034               	movf	(i2c_write@i+1)^0,w,c
  1037   0069BC  202E               	addwfc	(i2c_write@data+1)^0,w,c
  1038   0069BE  6E32               	movwf	(??_i2c_write+1)^0,c
  1039   0069C0  C031  FFF6         	movff	??_i2c_write,tblptrl
  1040   0069C4  C032  FFF7         	movff	??_i2c_write+1,tblptrh
  1041   0069C8                     	if	0	;tblptru may be non-zero
  1042   0069C8                     	endif
  1043   0069C8                     	if	0	;tblptru may be non-zero
  1044   0069C8                     	endif
  1045   0069C8  0008               	tblrd		*
  1046   0069CA  50F5               	movf	tablat,w,c
  1047   0069CC  6E28               	movwf	(?_printf+6)^0,c
  1048   0069CE  6A29               	clrf	(?_printf+7)^0,c
  1049   0069D0  ECE5  F032         	call	_printf	;wreg free
  1050   0069D4                     
  1051                           ;main.c: 52: 
  1052   0069D4  ECA5  F032         	call	_I2C_STOP	;wreg free
  1053   0069D8                     
  1054                           ;main.c: 53: void i2c_read(uint16_t address, uint8_t *data, uint16_t length) {
  1055   0069D8  0E68               	movlw	104
  1056   0069DA  6E31               	movwf	??_i2c_write^0,c
  1057   0069DC  0EE4               	movlw	228
  1058   0069DE                     u837:
  1059   0069DE  2EE8               	decfsz	wreg,f,c
  1060   0069E0  D7FE               	bra	u837
  1061   0069E2  2E31               	decfsz	??_i2c_write^0,f,c
  1062   0069E4  D7FC               	bra	u837
  1063   0069E6  D000               	nop2	
  1064   0069E8                     
  1065                           ;main.c: 54:     for (uint16_t i = 0; i < length; i++) {
  1066   0069E8  0E02               	movlw	2
  1067   0069EA  242B               	addwf	i2c_write@address^0,w,c
  1068   0069EC  6E2B               	movwf	i2c_write@address^0,c
  1069   0069EE  0E00               	movlw	0
  1070   0069F0  202C               	addwfc	(i2c_write@address+1)^0,w,c
  1071   0069F2  6E2C               	movwf	(i2c_write@address+1)^0,c
  1072   0069F4                     
  1073                           ;main.c: 56:         I2C_TRANSMITE(0xA0);
  1074   0069F4  4A33               	infsnz	i2c_write@i^0,f,c
  1075   0069F6  2A34               	incf	(i2c_write@i+1)^0,f,c
  1076   0069F8                     l1475:
  1077   0069F8  502F               	movf	i2c_write@length^0,w,c
  1078   0069FA  5C33               	subwf	i2c_write@i^0,w,c
  1079   0069FC  5030               	movf	(i2c_write@length+1)^0,w,c
  1080   0069FE  5834               	subwfb	(i2c_write@i+1)^0,w,c
  1081   006A00  A0D8               	btfss	status,0,c
  1082   006A02  EF05  F035         	goto	u741
  1083   006A06  EF07  F035         	goto	u740
  1084   006A0A                     u741:
  1085   006A0A  EFB5  F034         	goto	l1455
  1086   006A0E                     u740:
  1087   006A0E  0012               	return		;funcret
  1088   006A10                     __end_of_i2c_write:
  1089                           	callstack 0
  1090                           
  1091 ;; *************** function _serial_memory_seek *****************
  1092 ;; Defined at:
  1093 ;;		line 116 in file "main.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;  offset          2   42[COMRAM] short 
  1096 ;;  origin          1   44[COMRAM] unsigned char 
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;  new_pointer     2   45[COMRAM] unsigned short 
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      unsigned char 
  1101 ;; Registers used:
  1102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1108 ;;      Params:         3       0       0       0       0       0       0
  1109 ;;      Locals:         2       0       0       0       0       0       0
  1110 ;;      Temps:          0       0       0       0       0       0       0
  1111 ;;      Totals:         5       0       0       0       0       0       0
  1112 ;;Total ram usage:        5 bytes
  1113 ;; Hardware stack levels used: 1
  1114 ;; Hardware stack levels required when called: 5
  1115 ;; This function calls:
  1116 ;;		_printf
  1117 ;; This function is called by:
  1118 ;;		_main
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           	psect	text3
  1123   00680E                     __ptext3:
  1124                           	callstack 0
  1125   00680E                     _serial_memory_seek:
  1126                           	callstack 25
  1127   00680E                     
  1128                           ;main.c: 117:             break;;main.c: 119:             new_pointer = (uint16_t)(32768
      +                          ) + (uint16_t)(offset);
  1129   00680E  EF28  F034         	goto	l1547
  1130   006812                     l71:
  1131                           
  1132                           ;main.c: 121:         default:
  1133   006812  C02B  F02E         	movff	serial_memory_seek@offset,serial_memory_seek@new_pointer
  1134   006816  C02C  F02F         	movff	serial_memory_seek@offset+1,serial_memory_seek@new_pointer+1
  1135                           
  1136                           ;main.c: 122:             printf("Erro: Origem invalida\r\n");
  1137   00681A  EF37  F034         	goto	l1549
  1138   00681E                     l1535:
  1139                           
  1140                           ;main.c: 124:     }
  1141   00681E  506D               	movf	_current_pointer^0,w,c
  1142   006820  242B               	addwf	serial_memory_seek@offset^0,w,c
  1143   006822  6E2E               	movwf	serial_memory_seek@new_pointer^0,c
  1144   006824  506E               	movf	(_current_pointer+1)^0,w,c
  1145   006826  202C               	addwfc	(serial_memory_seek@offset+1)^0,w,c
  1146   006828  6E2F               	movwf	(serial_memory_seek@new_pointer+1)^0,c
  1147                           
  1148                           ;main.c: 125: 
  1149   00682A  EF37  F034         	goto	l1549
  1150   00682E                     l1537:
  1151                           
  1152                           ;main.c: 127:         printf("Erro: Ponteiro fora dos limites da memoria\r\n");
  1153   00682E  0E00               	movlw	0
  1154   006830  242B               	addwf	serial_memory_seek@offset^0,w,c
  1155   006832  6E2E               	movwf	serial_memory_seek@new_pointer^0,c
  1156   006834  0E80               	movlw	128
  1157   006836  202C               	addwfc	(serial_memory_seek@offset+1)^0,w,c
  1158   006838  6E2F               	movwf	(serial_memory_seek@new_pointer+1)^0,c
  1159                           
  1160                           ;main.c: 128:         return (uint8_t)-1;
  1161   00683A  EF37  F034         	goto	l1549
  1162   00683E                     l1539:
  1163                           
  1164                           ;main.c: 130: 
  1165   00683E  0EDB               	movlw	low STR_5
  1166   006840  6E22               	movwf	printf@fmt^0,c
  1167   006842  0E6F               	movlw	high STR_5
  1168   006844  6E23               	movwf	(printf@fmt+1)^0,c
  1169   006846  ECE5  F032         	call	_printf	;wreg free
  1170   00684A                     l1541:
  1171                           
  1172                           ;main.c: 131:     printf("Seek: Posicao alterada para %u\r\n", new_pointer);
  1173   00684A  0EFF               	movlw	255
  1174   00684C  EF57  F034         	goto	l76
  1175   006850                     l1547:
  1176   006850  502D               	movf	serial_memory_seek@origin^0,w,c
  1177                           
  1178                           ; Switch size 1, requested type "simple"
  1179                           ; Number of cases is 3, Range of values is 0 to 2
  1180                           ; switch strategies available:
  1181                           ; Name         Instructions Cycles
  1182                           ; simple_byte           10     6 (average)
  1183                           ;	Chosen strategy is simple_byte
  1184   006852  0A00               	xorlw	0	; case 0
  1185   006854  B4D8               	btfsc	status,2,c
  1186   006856  EF09  F034         	goto	l71
  1187   00685A  0A01               	xorlw	1	; case 1
  1188   00685C  B4D8               	btfsc	status,2,c
  1189   00685E  EF0F  F034         	goto	l1535
  1190   006862  0A03               	xorlw	3	; case 2
  1191   006864  B4D8               	btfsc	status,2,c
  1192   006866  EF17  F034         	goto	l1537
  1193   00686A  EF1F  F034         	goto	l1539
  1194   00686E                     l1549:
  1195                           
  1196                           ;main.c: 134: }
  1197   00686E  0E80               	movlw	128
  1198   006870  5C2F               	subwf	(serial_memory_seek@new_pointer+1)^0,w,c
  1199   006872  A0D8               	btfss	status,0,c
  1200   006874  EF3E  F034         	goto	u791
  1201   006878  EF40  F034         	goto	u790
  1202   00687C                     u791:
  1203   00687C  EF48  F034         	goto	l1557
  1204   006880                     u790:
  1205   006880                     
  1206                           ;main.c: 135: int count_characters(const char *message) {
  1207   006880  0E08               	movlw	low STR_6
  1208   006882  6E22               	movwf	printf@fmt^0,c
  1209   006884  0E6F               	movlw	high STR_6
  1210   006886  6E23               	movwf	(printf@fmt+1)^0,c
  1211   006888  ECE5  F032         	call	_printf	;wreg free
  1212   00688C  EF25  F034         	goto	l1541
  1213   006890                     l1557:
  1214                           
  1215                           ;main.c: 139:     for (int i = 0; message[i] != '\0'; ++i) {
  1216   006890  0E88               	movlw	low STR_7
  1217   006892  6E22               	movwf	printf@fmt^0,c
  1218   006894  0E6F               	movlw	high STR_7
  1219   006896  6E23               	movwf	(printf@fmt+1)^0,c
  1220   006898  C02E  F024         	movff	serial_memory_seek@new_pointer,?_printf+2
  1221   00689C  C02F  F025         	movff	serial_memory_seek@new_pointer+1,?_printf+3
  1222   0068A0  ECE5  F032         	call	_printf	;wreg free
  1223   0068A4                     
  1224                           ;main.c: 140:         count++;
  1225   0068A4  C02E  F06D         	movff	serial_memory_seek@new_pointer,_current_pointer
  1226   0068A8  C02F  F06E         	movff	serial_memory_seek@new_pointer+1,_current_pointer+1
  1227   0068AC                     
  1228                           ;main.c: 141:     }
  1229   0068AC  0E00               	movlw	0
  1230   0068AE                     l76:
  1231   0068AE  0012               	return		;funcret
  1232   0068B0                     __end_of_serial_memory_seek:
  1233                           	callstack 0
  1234                           
  1235 ;; *************** function _serial_memory_read *****************
  1236 ;; Defined at:
  1237 ;;		line 82 in file "main.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  buffer          1   51[COMRAM] PTR unsigned char 
  1240 ;;		 -> main@read_buffer(12), 
  1241 ;;  num_bytes       2   52[COMRAM] unsigned short 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      unsigned char 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1253 ;;      Params:         3       0       0       0       0       0       0
  1254 ;;      Locals:         0       0       0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0       0       0
  1256 ;;      Totals:         3       0       0       0       0       0       0
  1257 ;;Total ram usage:        3 bytes
  1258 ;; Hardware stack levels used: 1
  1259 ;; Hardware stack levels required when called: 6
  1260 ;; This function calls:
  1261 ;;		_i2c_read
  1262 ;;		_printf
  1263 ;; This function is called by:
  1264 ;;		_main
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text4
  1269   00660C                     __ptext4:
  1270                           	callstack 0
  1271   00660C                     _serial_memory_read:
  1272                           	callstack 24
  1273   00660C                     
  1274                           ;main.c: 86:     return 0;
  1275   00660C  5035               	movf	serial_memory_read@num_bytes^0,w,c
  1276   00660E  1036               	iorwf	(serial_memory_read@num_bytes+1)^0,w,c
  1277   006610  A4D8               	btfss	status,2,c
  1278   006612  EF0D  F033         	goto	u771
  1279   006616  EF0F  F033         	goto	u770
  1280   00661A                     u771:
  1281   00661A  EF18  F033         	goto	l1513
  1282   00661E                     u770:
  1283   00661E                     
  1284                           ;main.c: 87: }
  1285   00661E  0ED1               	movlw	low STR_3
  1286   006620  6E22               	movwf	printf@fmt^0,c
  1287   006622  0E6E               	movlw	high STR_3
  1288   006624  6E23               	movwf	(printf@fmt+1)^0,c
  1289   006626  ECE5  F032         	call	_printf	;wreg free
  1290   00662A                     
  1291                           ;main.c: 88: 
  1292   00662A  0EFF               	movlw	255
  1293   00662C  EF25  F033         	goto	l63
  1294   006630                     l1513:
  1295                           
  1296                           ;main.c: 92:         printf("Erro: Tentativa de escrever alem da capacidade da memoria\r
      +                          \n");
  1297   006630  C06D  F02B         	movff	_current_pointer,i2c_read@address
  1298   006634  C06E  F02C         	movff	_current_pointer+1,i2c_read@address+1
  1299   006638  C034  F02D         	movff	serial_memory_read@buffer,i2c_read@data
  1300   00663C  C035  F02E         	movff	serial_memory_read@num_bytes,i2c_read@length
  1301   006640  C036  F02F         	movff	serial_memory_read@num_bytes+1,i2c_read@length+1
  1302   006644  EC08  F035         	call	_i2c_read	;wreg free
  1303   006648                     
  1304                           ;main.c: 94:     }
  1305   006648  0E00               	movlw	0
  1306   00664A                     l63:
  1307   00664A  0012               	return		;funcret
  1308   00664C                     __end_of_serial_memory_read:
  1309                           	callstack 0
  1310                           
  1311 ;; *************** function _i2c_read *****************
  1312 ;; Defined at:
  1313 ;;		line 61 in file "main.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;  address         2   42[COMRAM] unsigned short 
  1316 ;;  data            1   44[COMRAM] PTR unsigned char 
  1317 ;;		 -> main@read_buffer(12), 
  1318 ;;  length          2   45[COMRAM] unsigned short 
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;  i               2   49[COMRAM] unsigned short 
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1330 ;;      Params:         5       0       0       0       0       0       0
  1331 ;;      Locals:         2       0       0       0       0       0       0
  1332 ;;      Temps:          2       0       0       0       0       0       0
  1333 ;;      Totals:         9       0       0       0       0       0       0
  1334 ;;Total ram usage:        9 bytes
  1335 ;; Hardware stack levels used: 1
  1336 ;; Hardware stack levels required when called: 5
  1337 ;; This function calls:
  1338 ;;		_I2C_ACK
  1339 ;;		_I2C_NACK
  1340 ;;		_I2C_RECEBE
  1341 ;;		_I2C_RESTART
  1342 ;;		_I2C_START
  1343 ;;		_I2C_STOP
  1344 ;;		_I2C_TRANSMITE
  1345 ;;		_printf
  1346 ;; This function is called by:
  1347 ;;		_serial_memory_read
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           	psect	text5
  1352   006A10                     __ptext5:
  1353                           	callstack 0
  1354   006A10                     _i2c_read:
  1355                           	callstack 24
  1356   006A10                     
  1357                           ;main.c: 62:         printf("Endereco atual: %u, Leitura [%u] = %u \r\n", address, i, (u
      +                          int8_t)(data[i]));
  1358   006A10  0E00               	movlw	0
  1359   006A12  6E33               	movwf	(i2c_read@i+1)^0,c
  1360   006A14  0E00               	movlw	0
  1361   006A16  6E32               	movwf	i2c_read@i^0,c
  1362   006A18  EF5D  F035         	goto	l1503
  1363   006A1C                     l1479:
  1364                           
  1365                           ;main.c: 63:         if (i < length - 1) {
  1366   006A1C  EC9C  F032         	call	_I2C_START	;wreg free
  1367   006A20                     
  1368                           ;main.c: 64:             I2C_ACK();
  1369   006A20  0EA0               	movlw	160
  1370   006A22  ECF4  F032         	call	_I2C_TRANSMITE
  1371   006A26                     
  1372                           ;main.c: 65:         } else {
  1373   006A26  502C               	movf	(i2c_read@address+1)^0,w,c
  1374   006A28  ECF4  F032         	call	_I2C_TRANSMITE
  1375   006A2C                     
  1376                           ;main.c: 66:             I2C_NACK();
  1377   006A2C  502B               	movf	i2c_read@address^0,w,c
  1378   006A2E  ECF4  F032         	call	_I2C_TRANSMITE
  1379   006A32                     
  1380                           ;main.c: 67:         }
  1381   006A32  EC93  F032         	call	_I2C_RESTART	;wreg free
  1382                           
  1383                           ;main.c: 68:         I2C_STOP();
  1384   006A36  0EA1               	movlw	161
  1385   006A38  ECF4  F032         	call	_I2C_TRANSMITE
  1386   006A3C                     
  1387                           ;main.c: 69:         address = 2 + address;
  1388   006A3C  502D               	movf	i2c_read@data^0,w,c
  1389   006A3E  2432               	addwf	i2c_read@i^0,w,c
  1390   006A40  6ED9               	movwf	fsr2l,c
  1391   006A42  6ADA               	clrf	fsr2h,c
  1392   006A44  EC49  F033         	call	_I2C_RECEBE	;wreg free
  1393   006A48  6EDF               	movwf	indf2,c
  1394   006A4A                     
  1395                           ;main.c: 70: 
  1396   006A4A  0E5F               	movlw	low STR_1
  1397   006A4C  6E22               	movwf	printf@fmt^0,c
  1398   006A4E  0E6F               	movlw	high STR_1
  1399   006A50  6E23               	movwf	(printf@fmt+1)^0,c
  1400   006A52  C02B  F024         	movff	i2c_read@address,?_printf+2
  1401   006A56  C02C  F025         	movff	i2c_read@address+1,?_printf+3
  1402   006A5A  C032  F026         	movff	i2c_read@i,?_printf+4
  1403   006A5E  C033  F027         	movff	i2c_read@i+1,?_printf+5
  1404   006A62  502D               	movf	i2c_read@data^0,w,c
  1405   006A64  2432               	addwf	i2c_read@i^0,w,c
  1406   006A66  6ED9               	movwf	fsr2l,c
  1407   006A68  6ADA               	clrf	fsr2h,c
  1408   006A6A  50DF               	movf	indf2,w,c
  1409   006A6C  6E30               	movwf	??_i2c_read^0,c
  1410   006A6E  5030               	movf	??_i2c_read^0,w,c
  1411   006A70  6E28               	movwf	(?_printf+6)^0,c
  1412   006A72  6A29               	clrf	(?_printf+7)^0,c
  1413   006A74  ECE5  F032         	call	_printf	;wreg free
  1414   006A78                     
  1415                           ;main.c: 71:     }
  1416   006A78  0EFF               	movlw	255
  1417   006A7A  242E               	addwf	i2c_read@length^0,w,c
  1418   006A7C  6E30               	movwf	??_i2c_read^0,c
  1419   006A7E  0EFF               	movlw	255
  1420   006A80  202F               	addwfc	(i2c_read@length+1)^0,w,c
  1421   006A82  6E31               	movwf	(??_i2c_read+1)^0,c
  1422   006A84  5030               	movf	??_i2c_read^0,w,c
  1423   006A86  5C32               	subwf	i2c_read@i^0,w,c
  1424   006A88  5031               	movf	(??_i2c_read+1)^0,w,c
  1425   006A8A  5833               	subwfb	(i2c_read@i+1)^0,w,c
  1426   006A8C  B0D8               	btfsc	status,0,c
  1427   006A8E  EF4B  F035         	goto	u751
  1428   006A92  EF4D  F035         	goto	u750
  1429   006A96                     u751:
  1430   006A96  EF51  F035         	goto	l1497
  1431   006A9A                     u750:
  1432   006A9A                     
  1433                           ;main.c: 72: }
  1434   006A9A  ECAE  F032         	call	_I2C_ACK	;wreg free
  1435                           
  1436                           ;main.c: 73: 
  1437   006A9E  EF53  F035         	goto	l57
  1438   006AA2                     l1497:
  1439                           
  1440                           ;main.c: 74: uint8_t serial_memory_read(uint8_t *buffer, uint16_t num_bytes) {
  1441   006AA2  ECB8  F032         	call	_I2C_NACK	;wreg free
  1442   006AA6                     l57:
  1443                           
  1444                           ;main.c: 76: 
  1445   006AA6  ECA5  F032         	call	_I2C_STOP	;wreg free
  1446   006AAA                     
  1447                           ;main.c: 77: 
  1448   006AAA  0E02               	movlw	2
  1449   006AAC  242B               	addwf	i2c_read@address^0,w,c
  1450   006AAE  6E2B               	movwf	i2c_read@address^0,c
  1451   006AB0  0E00               	movlw	0
  1452   006AB2  202C               	addwfc	(i2c_read@address+1)^0,w,c
  1453   006AB4  6E2C               	movwf	(i2c_read@address+1)^0,c
  1454   006AB6                     
  1455                           ;main.c: 79:         printf("Erro: Tentativa de ler alem da capacidade da memoria\r\n");
  1456   006AB6  4A32               	infsnz	i2c_read@i^0,f,c
  1457   006AB8  2A33               	incf	(i2c_read@i+1)^0,f,c
  1458   006ABA                     l1503:
  1459   006ABA  502E               	movf	i2c_read@length^0,w,c
  1460   006ABC  5C32               	subwf	i2c_read@i^0,w,c
  1461   006ABE  502F               	movf	(i2c_read@length+1)^0,w,c
  1462   006AC0  5833               	subwfb	(i2c_read@i+1)^0,w,c
  1463   006AC2  A0D8               	btfss	status,0,c
  1464   006AC4  EF66  F035         	goto	u761
  1465   006AC8  EF68  F035         	goto	u760
  1466   006ACC                     u761:
  1467   006ACC  EF0E  F035         	goto	l1479
  1468   006AD0                     u760:
  1469   006AD0  0012               	return		;funcret
  1470   006AD2                     __end_of_i2c_read:
  1471                           	callstack 0
  1472                           
  1473 ;; *************** function _printf *****************
  1474 ;; Defined at:
  1475 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;  fmt             2   33[COMRAM] PTR const unsigned char 
  1478 ;;		 -> STR_11(25), STR_10(42), STR_9(25), STR_7(33), 
  1479 ;;		 -> STR_6(45), STR_5(24), STR_4(60), STR_3(55), 
  1480 ;;		 -> STR_2(41), STR_1(41), 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  ret             2    0        int 
  1483 ;;  ap              1   41[COMRAM] PTR void [1]
  1484 ;;		 -> ?_printf(2), 
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  2   33[COMRAM] int 
  1487 ;; Registers used:
  1488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1494 ;;      Params:         8       0       0       0       0       0       0
  1495 ;;      Locals:         1       0       0       0       0       0       0
  1496 ;;      Temps:          0       0       0       0       0       0       0
  1497 ;;      Totals:         9       0       0       0       0       0       0
  1498 ;;Total ram usage:        9 bytes
  1499 ;; Hardware stack levels used: 1
  1500 ;; Hardware stack levels required when called: 4
  1501 ;; This function calls:
  1502 ;;		_vfprintf
  1503 ;; This function is called by:
  1504 ;;		_i2c_write
  1505 ;;		_i2c_read
  1506 ;;		_serial_memory_read
  1507 ;;		_serial_memory_write
  1508 ;;		_serial_memory_seek
  1509 ;;		_main
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text6
  1514   0065CA                     __ptext6:
  1515                           	callstack 0
  1516   0065CA                     _printf:
  1517                           	callstack 25
  1518   0065CA  0E24               	movlw	low (?_printf+2)
  1519   0065CC  6E2A               	movwf	printf@ap^0,c
  1520   0065CE  0E00               	movlw	0
  1521   0065D0  6E1B               	movwf	vfprintf@fp^0,c
  1522   0065D2  0E00               	movlw	0
  1523   0065D4  6E1C               	movwf	(vfprintf@fp+1)^0,c
  1524   0065D6  C022  F01D         	movff	printf@fmt,vfprintf@fmt
  1525   0065DA  C023  F01E         	movff	printf@fmt+1,vfprintf@fmt+1
  1526   0065DE  0E2A               	movlw	low printf@ap
  1527   0065E0  6E1F               	movwf	vfprintf@ap^0,c
  1528   0065E2  EC26  F033         	call	_vfprintf	;wreg free
  1529   0065E6  0012               	return		;funcret
  1530   0065E8                     __end_of_printf:
  1531                           	callstack 0
  1532                           
  1533 ;; *************** function _vfprintf *****************
  1534 ;; Defined at:
  1535 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
  1538 ;;		 -> NULL(0), 
  1539 ;;  fmt             2   28[COMRAM] PTR const unsigned char 
  1540 ;;		 -> STR_11(25), STR_10(42), STR_9(25), STR_7(33), 
  1541 ;;		 -> STR_6(45), STR_5(24), STR_4(60), STR_3(55), 
  1542 ;;		 -> STR_2(41), STR_1(41), 
  1543 ;;  ap              1   30[COMRAM] PTR PTR void 
  1544 ;;		 -> printf@ap(1), 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;  cfmt            2   31[COMRAM] PTR unsigned char 
  1547 ;;		 -> STR_11(25), STR_10(42), STR_9(25), STR_7(33), 
  1548 ;;		 -> STR_6(45), STR_5(24), STR_4(60), STR_3(55), 
  1549 ;;		 -> STR_2(41), STR_1(41), 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  2   26[COMRAM] int 
  1552 ;; Registers used:
  1553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1559 ;;      Params:         5       0       0       0       0       0       0
  1560 ;;      Locals:         2       0       0       0       0       0       0
  1561 ;;      Temps:          0       0       0       0       0       0       0
  1562 ;;      Totals:         7       0       0       0       0       0       0
  1563 ;;Total ram usage:        7 bytes
  1564 ;; Hardware stack levels used: 1
  1565 ;; Hardware stack levels required when called: 3
  1566 ;; This function calls:
  1567 ;;		_vfpfcnvrt
  1568 ;; This function is called by:
  1569 ;;		_printf
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           	psect	text7
  1574   00664C                     __ptext7:
  1575                           	callstack 0
  1576   00664C                     _vfprintf:
  1577                           	callstack 25
  1578   00664C                     
  1579                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1580   00664C  C01D  F020         	movff	vfprintf@fmt,vfprintf@cfmt
  1581   006650  C01E  F021         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1582                           
  1583                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1584   006654  EF36  F033         	goto	l1441
  1585   006658                     l1439:
  1586                           
  1587                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1588   006658  C01B  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1589   00665C  C01C  F00C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1590   006660  0E20               	movlw	low vfprintf@cfmt
  1591   006662  6E0D               	movwf	vfpfcnvrt@fmt^0,c
  1592   006664  C01F  F00E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1593   006668  ECCE  F035         	call	_vfpfcnvrt	;wreg free
  1594   00666C                     l1441:
  1595                           
  1596                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1597   00666C  C020  FFF6         	movff	vfprintf@cfmt,tblptrl
  1598   006670  C021  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1599   006674                     	if	0	;tblptru may be non-zero
  1600   006674                     	endif
  1601   006674                     	if	0	;tblptru may be non-zero
  1602   006674                     	endif
  1603   006674  0008               	tblrd		*
  1604   006676  50F5               	movf	tablat,w,c
  1605   006678  0900               	iorlw	0
  1606   00667A  A4D8               	btfss	status,2,c
  1607   00667C  EF42  F033         	goto	u731
  1608   006680  EF44  F033         	goto	u730
  1609   006684                     u731:
  1610   006684  EF2C  F033         	goto	l1439
  1611   006688                     u730:
  1612   006688                     
  1613                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1614   006688  0E00               	movlw	0
  1615   00668A  6E1C               	movwf	(?_vfprintf+1)^0,c
  1616   00668C  0E00               	movlw	0
  1617   00668E  6E1B               	movwf	?_vfprintf^0,c
  1618   006690  0012               	return		;funcret
  1619   006692                     __end_of_vfprintf:
  1620                           	callstack 0
  1621                           
  1622 ;; *************** function _vfpfcnvrt *****************
  1623 ;; Defined at:
  1624 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  1627 ;;		 -> NULL(0), 
  1628 ;;  fmt             1   12[COMRAM] PTR PTR unsigned char 
  1629 ;;		 -> vfprintf@cfmt(2), 
  1630 ;;  ap              1   13[COMRAM] PTR PTR void 
  1631 ;;		 -> printf@ap(1), 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  cp              2   17[COMRAM] PTR unsigned char 
  1634 ;;		 -> ?_printf(2), main@read_buffer(12), STR_8(12), 
  1635 ;;  convarg         4   21[COMRAM] struct .
  1636 ;;  cp              2   19[COMRAM] PTR unsigned char 
  1637 ;;		 -> STR_11(25), STR_10(42), STR_9(25), STR_7(33), 
  1638 ;;		 -> STR_6(45), STR_5(24), STR_4(60), STR_3(55), 
  1639 ;;		 -> STR_2(41), STR_1(41), 
  1640 ;;  c               1   25[COMRAM] unsigned char 
  1641 ;;  done            1   16[COMRAM] _Bool 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      void 
  1644 ;; Registers used:
  1645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1651 ;;      Params:         4       0       0       0       0       0       0
  1652 ;;      Locals:        10       0       0       0       0       0       0
  1653 ;;      Temps:          2       0       0       0       0       0       0
  1654 ;;      Totals:        16       0       0       0       0       0       0
  1655 ;;Total ram usage:       16 bytes
  1656 ;; Hardware stack levels used: 1
  1657 ;; Hardware stack levels required when called: 2
  1658 ;; This function calls:
  1659 ;;		___lwdiv
  1660 ;;		___lwmod
  1661 ;;		_fputc
  1662 ;; This function is called by:
  1663 ;;		_vfprintf
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text8
  1668   006B9C                     __ptext8:
  1669                           	callstack 0
  1670   006B9C                     _vfpfcnvrt:
  1671                           	callstack 25
  1672   006B9C                     
  1673                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1674   006B9C  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1675   006B9E  6ED9               	movwf	fsr2l,c
  1676   006BA0  6ADA               	clrf	fsr2h,c
  1677   006BA2  CFDE FFF6          	movff	postinc2,tblptrl
  1678   006BA6  CFDD FFF7          	movff	postdec2,tblptrh
  1679   006BAA                     	if	0	;tblptru may be non-zero
  1680   006BAA                     	endif
  1681   006BAA                     	if	0	;tblptru may be non-zero
  1682   006BAA                     	endif
  1683   006BAA  0008               	tblrd		*
  1684   006BAC  50F5               	movf	tablat,w,c
  1685   006BAE  0A25               	xorlw	37
  1686   006BB0  A4D8               	btfss	status,2,c
  1687   006BB2  EFDD  F035         	goto	u601
  1688   006BB6  EFDF  F035         	goto	u600
  1689   006BBA                     u601:
  1690   006BBA  EF36  F037         	goto	l1431
  1691   006BBE                     u600:
  1692   006BBE                     
  1693                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1694   006BBE  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1695   006BC0  6ED9               	movwf	fsr2l,c
  1696   006BC2  6ADA               	clrf	fsr2h,c
  1697   006BC4  2ADE               	incf	postinc2,f,c
  1698   006BC6  0E00               	movlw	0
  1699   006BC8  22DD               	addwfc	postdec2,f,c
  1700   006BCA                     
  1701                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1702   006BCA  0E00               	movlw	0
  1703   006BCC  6E6A               	movwf	(_width+1)^0,c
  1704   006BCE  0E00               	movlw	0
  1705   006BD0  6E69               	movwf	_width^0,c
  1706   006BD2  C069  F06F         	movff	_width,_flags
  1707   006BD6                     
  1708                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1709   006BD6  686B               	setf	_prec^0,c
  1710   006BD8  686C               	setf	(_prec+1)^0,c
  1711   006BDA                     
  1712                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1439:   if (0
  1713   006BDA  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1714   006BDC  6ED9               	movwf	fsr2l,c
  1715   006BDE  6ADA               	clrf	fsr2h,c
  1716   006BE0  CFDE F014          	movff	postinc2,vfpfcnvrt@cp
  1717   006BE4  CFDD F015          	movff	postdec2,vfpfcnvrt@cp+1
  1718   006BE8  C014  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1719   006BEC  C015  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1720   006BF0                     	if	0	;tblptru may be non-zero
  1721   006BF0                     	endif
  1722   006BF0                     	if	0	;tblptru may be non-zero
  1723   006BF0                     	endif
  1724   006BF0  0008               	tblrd		*
  1725   006BF2  50F5               	movf	tablat,w,c
  1726   006BF4  0A75               	xorlw	117
  1727   006BF6  A4D8               	btfss	status,2,c
  1728   006BF8  EF00  F036         	goto	u611
  1729   006BFC  EF02  F036         	goto	u610
  1730   006C00                     u611:
  1731   006C00  EF79  F036         	goto	l1399
  1732   006C04                     u610:
  1733   006C04                     
  1734                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  1735   006C04  500E               	movf	vfpfcnvrt@ap^0,w,c
  1736   006C06  6ED9               	movwf	fsr2l,c
  1737   006C08  6ADA               	clrf	fsr2h,c
  1738   006C0A  0E02               	movlw	2
  1739   006C0C  26DF               	addwf	indf2,f,c
  1740   006C0E  5CDF               	subwf	indf2,w,c
  1741   006C10  6ED9               	movwf	fsr2l,c
  1742   006C12  6ADA               	clrf	fsr2h,c
  1743   006C14  CFDE F016          	movff	postinc2,vfpfcnvrt@convarg
  1744   006C18  CFDE F017          	movff	postinc2,vfpfcnvrt@convarg+1
  1745   006C1C                     
  1746                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  1747   006C1C  0E01               	movlw	1
  1748   006C1E  2414               	addwf	vfpfcnvrt@cp^0,w,c
  1749   006C20  6E0F               	movwf	??_vfpfcnvrt^0,c
  1750   006C22  0E00               	movlw	0
  1751   006C24  2015               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1752   006C26  6E10               	movwf	(??_vfpfcnvrt+1)^0,c
  1753   006C28  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1754   006C2A  6ED9               	movwf	fsr2l,c
  1755   006C2C  6ADA               	clrf	fsr2h,c
  1756   006C2E  C00F  FFDE         	movff	??_vfpfcnvrt,postinc2
  1757   006C32  C010  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1758                           
  1759                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  1760   006C36  EF6D  F036         	goto	l1397
  1761   006C3A                     l1379:
  1762                           
  1763                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  1764   006C3A  0E20               	movlw	32
  1765   006C3C  6E1A               	movwf	vfpfcnvrt@c^0,c
  1766   006C3E                     l1381:
  1767                           
  1768                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  1769   006C3E  061A               	decf	vfpfcnvrt@c^0,f,c
  1770   006C40  501A               	movf	vfpfcnvrt@c^0,w,c
  1771   006C42  0F49               	addlw	low _dbuf
  1772   006C44  6ED9               	movwf	fsr2l,c
  1773   006C46  6ADA               	clrf	fsr2h,c
  1774   006C48  C016  F001         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  1775   006C4C  C017  F002         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  1776   006C50  0E00               	movlw	0
  1777   006C52  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1778   006C54  0E0A               	movlw	10
  1779   006C56  6E03               	movwf	___lwmod@divisor^0,c
  1780   006C58  EC9B  F033         	call	___lwmod	;wreg free
  1781   006C5C  5001               	movf	?___lwmod^0,w,c
  1782   006C5E  0F30               	addlw	48
  1783   006C60  6EDF               	movwf	indf2,c
  1784   006C62                     
  1785                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  1786   006C62  C016  F001         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  1787   006C66  C017  F002         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  1788   006C6A  0E00               	movlw	0
  1789   006C6C  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1790   006C6E  0E0A               	movlw	10
  1791   006C70  6E03               	movwf	___lwdiv@divisor^0,c
  1792   006C72  ECCD  F033         	call	___lwdiv	;wreg free
  1793   006C76  C001  F016         	movff	?___lwdiv,vfpfcnvrt@convarg
  1794   006C7A  C002  F017         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  1795   006C7E                     
  1796                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  1797   006C7E  5016               	movf	vfpfcnvrt@convarg^0,w,c
  1798   006C80  1017               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1799   006C82  B4D8               	btfsc	status,2,c
  1800   006C84  EF46  F036         	goto	u621
  1801   006C88  EF48  F036         	goto	u620
  1802   006C8C                     u621:
  1803   006C8C  EF62  F036         	goto	l1393
  1804   006C90                     u620:
  1805   006C90  501A               	movf	vfpfcnvrt@c^0,w,c
  1806   006C92  A4D8               	btfss	status,2,c
  1807   006C94  EF4E  F036         	goto	u631
  1808   006C98  EF50  F036         	goto	u630
  1809   006C9C                     u631:
  1810   006C9C  EF1F  F036         	goto	l1381
  1811   006CA0                     u630:
  1812   006CA0  EF62  F036         	goto	l1393
  1813   006CA4                     l1389:
  1814                           
  1815                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  1816   006CA4  501A               	movf	vfpfcnvrt@c^0,w,c
  1817   006CA6  0F49               	addlw	low _dbuf
  1818   006CA8  6ED9               	movwf	fsr2l,c
  1819   006CAA  6ADA               	clrf	fsr2h,c
  1820   006CAC  50DF               	movf	indf2,w,c
  1821   006CAE  6E0F               	movwf	??_vfpfcnvrt^0,c
  1822   006CB0  500F               	movf	??_vfpfcnvrt^0,w,c
  1823   006CB2  6E02               	movwf	fputc@c^0,c
  1824   006CB4  6A03               	clrf	(fputc@c+1)^0,c
  1825   006CB6  C00B  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1826   006CBA  C00C  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1827   006CBE  EC69  F035         	call	_fputc	;wreg free
  1828   006CC2  2A1A               	incf	vfpfcnvrt@c^0,f,c
  1829   006CC4                     l1393:
  1830                           
  1831                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  1832   006CC4  0E20               	movlw	32
  1833   006CC6  181A               	xorwf	vfpfcnvrt@c^0,w,c
  1834   006CC8  A4D8               	btfss	status,2,c
  1835   006CCA  EF69  F036         	goto	u641
  1836   006CCE  EF6B  F036         	goto	u640
  1837   006CD2                     u641:
  1838   006CD2  EF52  F036         	goto	l1389
  1839   006CD6                     u640:
  1840   006CD6  EF49  F037         	goto	l899
  1841   006CDA                     l1397:
  1842   006CDA  C014  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1843   006CDE  C015  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1844   006CE2                     	if	0	;tblptru may be non-zero
  1845   006CE2                     	endif
  1846   006CE2                     	if	0	;tblptru may be non-zero
  1847   006CE2                     	endif
  1848   006CE2  0008               	tblrd		*
  1849   006CE4  50F5               	movf	tablat,w,c
  1850                           
  1851                           ; Switch size 1, requested type "simple"
  1852                           ; Number of cases is 1, Range of values is 117 to 117
  1853                           ; switch strategies available:
  1854                           ; Name         Instructions Cycles
  1855                           ; simple_byte            4     3 (average)
  1856                           ;	Chosen strategy is simple_byte
  1857   006CE6  0A75               	xorlw	117	; case 117
  1858   006CE8  B4D8               	btfsc	status,2,c
  1859   006CEA  EF1D  F036         	goto	l1379
  1860   006CEE  EF79  F036         	goto	l1399
  1861   006CF2                     l1399:
  1862                           
  1863                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  1864   006CF2  0E00               	movlw	0
  1865   006CF4  6E11               	movwf	vfpfcnvrt@done^0,c
  1866   006CF6                     
  1867                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
  1868   006CF6  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1869   006CF8  6ED9               	movwf	fsr2l,c
  1870   006CFA  6ADA               	clrf	fsr2h,c
  1871   006CFC  CFDE FFF6          	movff	postinc2,tblptrl
  1872   006D00  CFDD FFF7          	movff	postdec2,tblptrh
  1873   006D04                     	if	0	;tblptru may be non-zero
  1874   006D04                     	endif
  1875   006D04                     	if	0	;tblptru may be non-zero
  1876   006D04                     	endif
  1877   006D04  0008               	tblrd		*
  1878   006D06  50F5               	movf	tablat,w,c
  1879   006D08  0A73               	xorlw	115
  1880   006D0A  A4D8               	btfss	status,2,c
  1881   006D0C  EF8A  F036         	goto	u651
  1882   006D10  EF8C  F036         	goto	u650
  1883   006D14                     u651:
  1884   006D14  EF96  F036         	goto	l1407
  1885   006D18                     u650:
  1886   006D18                     
  1887                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  1888   006D18  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1889   006D1A  6ED9               	movwf	fsr2l,c
  1890   006D1C  6ADA               	clrf	fsr2h,c
  1891   006D1E  2ADE               	incf	postinc2,f,c
  1892   006D20  0E00               	movlw	0
  1893   006D22  22DD               	addwfc	postdec2,f,c
  1894   006D24                     l1405:
  1895                           
  1896                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
  1897   006D24  0E01               	movlw	1
  1898   006D26  6E11               	movwf	vfpfcnvrt@done^0,c
  1899                           
  1900                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1660:   }
  1901   006D28  EFE2  F036         	goto	l1417
  1902   006D2C                     l1407:
  1903   006D2C  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1904   006D2E  6ED9               	movwf	fsr2l,c
  1905   006D30  6ADA               	clrf	fsr2h,c
  1906   006D32  CFDE FFF6          	movff	postinc2,tblptrl
  1907   006D36  CFDD FFF7          	movff	postdec2,tblptrh
  1908   006D3A                     	if	0	;tblptru may be non-zero
  1909   006D3A                     	endif
  1910   006D3A                     	if	0	;tblptru may be non-zero
  1911   006D3A                     	endif
  1912   006D3A  0008               	tblrd		*
  1913   006D3C  50F5               	movf	tablat,w,c
  1914   006D3E  0A6C               	xorlw	108
  1915   006D40  A4D8               	btfss	status,2,c
  1916   006D42  EFA5  F036         	goto	u661
  1917   006D46  EFA7  F036         	goto	u660
  1918   006D4A                     u661:
  1919   006D4A  EFE2  F036         	goto	l1417
  1920   006D4E                     u660:
  1921   006D4E  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1922   006D50  6ED9               	movwf	fsr2l,c
  1923   006D52  6ADA               	clrf	fsr2h,c
  1924   006D54  CFDE F00F          	movff	postinc2,??_vfpfcnvrt
  1925   006D58  CFDD F010          	movff	postdec2,??_vfpfcnvrt+1
  1926   006D5C  0E01               	movlw	1
  1927   006D5E  260F               	addwf	??_vfpfcnvrt^0,f,c
  1928   006D60  0E00               	movlw	0
  1929   006D62  2210               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1930   006D64  C00F  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1931   006D68  C010  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1932   006D6C                     	if	0	;tblptru may be non-zero
  1933   006D6C                     	endif
  1934   006D6C                     	if	0	;tblptru may be non-zero
  1935   006D6C                     	endif
  1936   006D6C  0008               	tblrd		*
  1937   006D6E  50F5               	movf	tablat,w,c
  1938   006D70  0A6C               	xorlw	108
  1939   006D72  A4D8               	btfss	status,2,c
  1940   006D74  EFBE  F036         	goto	u671
  1941   006D78  EFC0  F036         	goto	u670
  1942   006D7C                     u671:
  1943   006D7C  EFE2  F036         	goto	l1417
  1944   006D80                     u670:
  1945   006D80  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1946   006D82  6ED9               	movwf	fsr2l,c
  1947   006D84  6ADA               	clrf	fsr2h,c
  1948   006D86  CFDE F00F          	movff	postinc2,??_vfpfcnvrt
  1949   006D8A  CFDD F010          	movff	postdec2,??_vfpfcnvrt+1
  1950   006D8E  0E02               	movlw	2
  1951   006D90  260F               	addwf	??_vfpfcnvrt^0,f,c
  1952   006D92  0E00               	movlw	0
  1953   006D94  2210               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1954   006D96  C00F  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1955   006D9A  C010  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1956   006D9E                     	if	0	;tblptru may be non-zero
  1957   006D9E                     	endif
  1958   006D9E                     	if	0	;tblptru may be non-zero
  1959   006D9E                     	endif
  1960   006D9E  0008               	tblrd		*
  1961   006DA0  50F5               	movf	tablat,w,c
  1962   006DA2  0A73               	xorlw	115
  1963   006DA4  A4D8               	btfss	status,2,c
  1964   006DA6  EFD7  F036         	goto	u681
  1965   006DAA  EFD9  F036         	goto	u680
  1966   006DAE                     u681:
  1967   006DAE  EFE2  F036         	goto	l1417
  1968   006DB2                     u680:
  1969   006DB2                     
  1970                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
  1971   006DB2  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1972   006DB4  6ED9               	movwf	fsr2l,c
  1973   006DB6  6ADA               	clrf	fsr2h,c
  1974   006DB8  0E03               	movlw	3
  1975   006DBA  26DE               	addwf	postinc2,f,c
  1976   006DBC  0E00               	movlw	0
  1977   006DBE  22DD               	addwfc	postdec2,f,c
  1978   006DC0  EF92  F036         	goto	l1405
  1979   006DC4                     l1417:
  1980                           
  1981                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
  1982   006DC4  5011               	movf	vfpfcnvrt@done^0,w,c
  1983   006DC6  B4D8               	btfsc	status,2,c
  1984   006DC8  EFE8  F036         	goto	u691
  1985   006DCC  EFEA  F036         	goto	u690
  1986   006DD0                     u691:
  1987   006DD0  EF2E  F037         	goto	l1427
  1988   006DD4                     u690:
  1989   006DD4                     
  1990                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1669:    for (cha
      +                          r * cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0)); *cp != '\0'; cp++) {
  1991   006DD4  500E               	movf	vfpfcnvrt@ap^0,w,c
  1992   006DD6  6ED9               	movwf	fsr2l,c
  1993   006DD8  6ADA               	clrf	fsr2h,c
  1994   006DDA  0E02               	movlw	2
  1995   006DDC  26DF               	addwf	indf2,f,c
  1996   006DDE  5CDF               	subwf	indf2,w,c
  1997   006DE0  6ED9               	movwf	fsr2l,c
  1998   006DE2  6ADA               	clrf	fsr2h,c
  1999   006DE4  CFDE F012          	movff	postinc2,vfpfcnvrt@cp_1064
  2000   006DE8  CFDE F013          	movff	postinc2,vfpfcnvrt@cp_1064+1
  2001   006DEC  EF14  F037         	goto	l1425
  2002   006DF0                     l1421:
  2003                           
  2004                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1670:     fputc(*
      +                          cp, fp);
  2005   006DF0  C012  FFF6         	movff	vfpfcnvrt@cp_1064,tblptrl
  2006   006DF4  C013  FFF7         	movff	vfpfcnvrt@cp_1064+1,tblptrh
  2007   006DF8  6AF8               	clrf	tblptru,c
  2008   006DFA  0E05               	movlw	(high __ramtop+-1)
  2009   006DFC  64F7               	cpfsgt	tblptrh,c
  2010   006DFE  D003               	bra	u707
  2011   006E00  0008               	tblrd		*
  2012   006E02  50F5               	movf	tablat,w,c
  2013   006E04  D005               	bra	u700
  2014   006E06                     u707:
  2015   006E06  CFF6 FFE1          	movff	tblptrl,fsr1l
  2016   006E0A  CFF7 FFE2          	movff	tblptrh,fsr1h
  2017   006E0E  50E7               	movf	indf1,w,c
  2018   006E10                     u700:
  2019   006E10  6E0F               	movwf	??_vfpfcnvrt^0,c
  2020   006E12  500F               	movf	??_vfpfcnvrt^0,w,c
  2021   006E14  6E02               	movwf	fputc@c^0,c
  2022   006E16  6A03               	clrf	(fputc@c+1)^0,c
  2023   006E18  C00B  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2024   006E1C  C00C  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2025   006E20  EC69  F035         	call	_fputc	;wreg free
  2026   006E24                     
  2027                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1674:    }
  2028   006E24  4A12               	infsnz	vfpfcnvrt@cp_1064^0,f,c
  2029   006E26  2A13               	incf	(vfpfcnvrt@cp_1064+1)^0,f,c
  2030   006E28                     l1425:
  2031   006E28  C012  FFF6         	movff	vfpfcnvrt@cp_1064,tblptrl
  2032   006E2C  C013  FFF7         	movff	vfpfcnvrt@cp_1064+1,tblptrh
  2033   006E30  6AF8               	clrf	tblptru,c
  2034   006E32  0E05               	movlw	(high __ramtop+-1)
  2035   006E34  64F7               	cpfsgt	tblptrh,c
  2036   006E36  D003               	bra	u717
  2037   006E38  0008               	tblrd		*
  2038   006E3A  50F5               	movf	tablat,w,c
  2039   006E3C  D005               	bra	u710
  2040   006E3E                     u717:
  2041   006E3E  CFF6 FFE1          	movff	tblptrl,fsr1l
  2042   006E42  CFF7 FFE2          	movff	tblptrh,fsr1h
  2043   006E46  50E7               	movf	indf1,w,c
  2044   006E48                     u710:
  2045   006E48  0900               	iorlw	0
  2046   006E4A  A4D8               	btfss	status,2,c
  2047   006E4C  EF2A  F037         	goto	u721
  2048   006E50  EF2C  F037         	goto	u720
  2049   006E54                     u721:
  2050   006E54  EFF8  F036         	goto	l1421
  2051   006E58                     u720:
  2052   006E58  EF49  F037         	goto	l899
  2053   006E5C                     l1427:
  2054                           
  2055                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2056   006E5C  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2057   006E5E  6ED9               	movwf	fsr2l,c
  2058   006E60  6ADA               	clrf	fsr2h,c
  2059   006E62  2ADE               	incf	postinc2,f,c
  2060   006E64  0E00               	movlw	0
  2061   006E66  22DD               	addwfc	postdec2,f,c
  2062   006E68  EF49  F037         	goto	l899
  2063   006E6C                     l1431:
  2064                           
  2065                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2066   006E6C  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2067   006E6E  6ED9               	movwf	fsr2l,c
  2068   006E70  6ADA               	clrf	fsr2h,c
  2069   006E72  CFDE FFF6          	movff	postinc2,tblptrl
  2070   006E76  CFDD FFF7          	movff	postdec2,tblptrh
  2071   006E7A                     	if	0	;tblptru may be non-zero
  2072   006E7A                     	endif
  2073   006E7A                     	if	0	;tblptru may be non-zero
  2074   006E7A                     	endif
  2075   006E7A  0008               	tblrd		*
  2076   006E7C  50F5               	movf	tablat,w,c
  2077   006E7E  6E02               	movwf	fputc@c^0,c
  2078   006E80  6A03               	clrf	(fputc@c+1)^0,c
  2079   006E82  C00B  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2080   006E86  C00C  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2081   006E8A  EC69  F035         	call	_fputc	;wreg free
  2082   006E8E  EF2E  F037         	goto	l1427
  2083   006E92                     l899:
  2084   006E92  0012               	return		;funcret
  2085   006E94                     __end_of_vfpfcnvrt:
  2086                           	callstack 0
  2087                           
  2088 ;; *************** function _fputc *****************
  2089 ;; Defined at:
  2090 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;  c               2    1[COMRAM] int 
  2093 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  2094 ;;		 -> NULL(0), 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;		None
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  2    1[COMRAM] int 
  2099 ;; Registers used:
  2100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2106 ;;      Params:         4       0       0       0       0       0       0
  2107 ;;      Locals:         0       0       0       0       0       0       0
  2108 ;;      Temps:          5       0       0       0       0       0       0
  2109 ;;      Totals:         9       0       0       0       0       0       0
  2110 ;;Total ram usage:        9 bytes
  2111 ;; Hardware stack levels used: 1
  2112 ;; Hardware stack levels required when called: 1
  2113 ;; This function calls:
  2114 ;;		_putch
  2115 ;; This function is called by:
  2116 ;;		_vfpfcnvrt
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	text9
  2121   006AD2                     __ptext9:
  2122                           	callstack 0
  2123   006AD2                     _fputc:
  2124                           	callstack 25
  2125   006AD2  5004               	movf	fputc@fp^0,w,c
  2126   006AD4  1005               	iorwf	(fputc@fp+1)^0,w,c
  2127   006AD6  B4D8               	btfsc	status,2,c
  2128   006AD8  EF70  F035         	goto	u561
  2129   006ADC  EF72  F035         	goto	u560
  2130   006AE0                     u561:
  2131   006AE0  EF7B  F035         	goto	l1353
  2132   006AE4                     u560:
  2133   006AE4  5004               	movf	fputc@fp^0,w,c
  2134   006AE6  1005               	iorwf	(fputc@fp+1)^0,w,c
  2135   006AE8  A4D8               	btfss	status,2,c
  2136   006AEA  EF79  F035         	goto	u571
  2137   006AEE  EF7B  F035         	goto	u570
  2138   006AF2                     u571:
  2139   006AF2  EF80  F035         	goto	l1355
  2140   006AF6                     u570:
  2141   006AF6                     l1353:
  2142   006AF6  5002               	movf	fputc@c^0,w,c
  2143   006AF8  ECC2  F032         	call	_putch
  2144   006AFC  EFCD  F035         	goto	l925
  2145   006B00                     l1355:
  2146   006B00  EE20 F00A          	lfsr	2,10
  2147   006B04  5004               	movf	fputc@fp^0,w,c
  2148   006B06  26D9               	addwf	fsr2l,f,c
  2149   006B08  5005               	movf	(fputc@fp+1)^0,w,c
  2150   006B0A  22DA               	addwfc	fsr2h,f,c
  2151   006B0C  50DE               	movf	postinc2,w,c
  2152   006B0E  10DE               	iorwf	postinc2,w,c
  2153   006B10  B4D8               	btfsc	status,2,c
  2154   006B12  EF8D  F035         	goto	u581
  2155   006B16  EF8F  F035         	goto	u580
  2156   006B1A                     u581:
  2157   006B1A  EFAA  F035         	goto	l1359
  2158   006B1E                     u580:
  2159   006B1E  EE20 F00A          	lfsr	2,10
  2160   006B22  5004               	movf	fputc@fp^0,w,c
  2161   006B24  26D9               	addwf	fsr2l,f,c
  2162   006B26  5005               	movf	(fputc@fp+1)^0,w,c
  2163   006B28  22DA               	addwfc	fsr2h,f,c
  2164   006B2A  EE10 F003          	lfsr	1,3
  2165   006B2E  5004               	movf	fputc@fp^0,w,c
  2166   006B30  26E1               	addwf	fsr1l,f,c
  2167   006B32  5005               	movf	(fputc@fp+1)^0,w,c
  2168   006B34  22E2               	addwfc	fsr1h,f,c
  2169   006B36  50DE               	movf	postinc2,w,c
  2170   006B38  5CE6               	subwf	postinc1,w,c
  2171   006B3A  50E6               	movf	postinc1,w,c
  2172   006B3C  0A80               	xorlw	128
  2173   006B3E  6E0A               	movwf	(??_fputc+4)^0,c
  2174   006B40  50DE               	movf	postinc2,w,c
  2175   006B42  0A80               	xorlw	128
  2176   006B44  580A               	subwfb	(??_fputc+4)^0,w,c
  2177   006B46  B0D8               	btfsc	status,0,c
  2178   006B48  EFA8  F035         	goto	u591
  2179   006B4C  EFAA  F035         	goto	u590
  2180   006B50                     u591:
  2181   006B50  EFCD  F035         	goto	l925
  2182   006B54                     u590:
  2183   006B54                     l1359:
  2184   006B54  EE20 F003          	lfsr	2,3
  2185   006B58  5004               	movf	fputc@fp^0,w,c
  2186   006B5A  26D9               	addwf	fsr2l,f,c
  2187   006B5C  5005               	movf	(fputc@fp+1)^0,w,c
  2188   006B5E  22DA               	addwfc	fsr2h,f,c
  2189   006B60  CFDE F006          	movff	postinc2,??_fputc
  2190   006B64  CFDD F007          	movff	postdec2,??_fputc+1
  2191   006B68  C004  FFD9         	movff	fputc@fp,fsr2l
  2192   006B6C  C005  FFDA         	movff	fputc@fp+1,fsr2h
  2193   006B70  CFDE F008          	movff	postinc2,??_fputc+2
  2194   006B74  CFDD F009          	movff	postdec2,??_fputc+3
  2195   006B78  5006               	movf	??_fputc^0,w,c
  2196   006B7A  2408               	addwf	(??_fputc+2)^0,w,c
  2197   006B7C  6ED9               	movwf	fsr2l,c
  2198   006B7E  5007               	movf	(??_fputc+1)^0,w,c
  2199   006B80  2009               	addwfc	(??_fputc+3)^0,w,c
  2200   006B82  6EDA               	movwf	fsr2h,c
  2201   006B84  C002  FFDF         	movff	fputc@c,indf2
  2202   006B88  EE20 F003          	lfsr	2,3
  2203   006B8C  5004               	movf	fputc@fp^0,w,c
  2204   006B8E  26D9               	addwf	fsr2l,f,c
  2205   006B90  5005               	movf	(fputc@fp+1)^0,w,c
  2206   006B92  22DA               	addwfc	fsr2h,f,c
  2207   006B94  2ADE               	incf	postinc2,f,c
  2208   006B96  0E00               	movlw	0
  2209   006B98  22DD               	addwfc	postdec2,f,c
  2210   006B9A                     l925:
  2211   006B9A  0012               	return		;funcret
  2212   006B9C                     __end_of_fputc:
  2213                           	callstack 0
  2214                           
  2215 ;; *************** function _putch *****************
  2216 ;; Defined at:
  2217 ;;		line 30 in file "main.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;  byte            1    wreg     unsigned char 
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;  byte            1    0[COMRAM] unsigned char 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2231 ;;      Params:         0       0       0       0       0       0       0
  2232 ;;      Locals:         1       0       0       0       0       0       0
  2233 ;;      Temps:          0       0       0       0       0       0       0
  2234 ;;      Totals:         1       0       0       0       0       0       0
  2235 ;;Total ram usage:        1 bytes
  2236 ;; Hardware stack levels used: 1
  2237 ;; This function calls:
  2238 ;;		Nothing
  2239 ;; This function is called by:
  2240 ;;		_fputc
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           	psect	text10
  2245   006584                     __ptext10:
  2246                           	callstack 0
  2247   006584                     _putch:
  2248                           	callstack 25
  2249                           
  2250                           ;incstack = 0
  2251                           ;putch@byte stored from wreg
  2252   006584  6E01               	movwf	putch@byte^0,c
  2253   006586                     l42:
  2254                           
  2255                           ;main.c: 31: 
  2256   006586  A2AC               	btfss	172,1,c	;volatile
  2257   006588  EFC8  F032         	goto	u11
  2258   00658C  EFCA  F032         	goto	u10
  2259   006590                     u11:
  2260   006590  EFC3  F032         	goto	l42
  2261   006594                     u10:
  2262   006594                     
  2263                           ;main.c: 34: void i2c_write(uint16_t address, const uint8_t *data, uint16_t length) {
  2264   006594  C001  FFAD         	movff	putch@byte,4013	;volatile
  2265   006598  0012               	return		;funcret
  2266   00659A                     __end_of_putch:
  2267                           	callstack 0
  2268                           
  2269 ;; *************** function ___lwmod *****************
  2270 ;; Defined at:
  2271 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  dividend        2    0[COMRAM] unsigned int 
  2274 ;;  divisor         2    2[COMRAM] unsigned int 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;  counter         1    4[COMRAM] unsigned char 
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  2    0[COMRAM] unsigned int 
  2279 ;; Registers used:
  2280 ;;		wreg, status,2, status,0
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2286 ;;      Params:         4       0       0       0       0       0       0
  2287 ;;      Locals:         1       0       0       0       0       0       0
  2288 ;;      Temps:          0       0       0       0       0       0       0
  2289 ;;      Totals:         5       0       0       0       0       0       0
  2290 ;;Total ram usage:        5 bytes
  2291 ;; Hardware stack levels used: 1
  2292 ;; This function calls:
  2293 ;;		Nothing
  2294 ;; This function is called by:
  2295 ;;		_vfpfcnvrt
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           	psect	text11
  2300   006736                     __ptext11:
  2301                           	callstack 0
  2302   006736                     ___lwmod:
  2303                           	callstack 26
  2304   006736  5003               	movf	___lwmod@divisor^0,w,c
  2305   006738  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2306   00673A  B4D8               	btfsc	status,2,c
  2307   00673C  EFA2  F033         	goto	u531
  2308   006740  EFA4  F033         	goto	u530
  2309   006744                     u531:
  2310   006744  EFC8  F033         	goto	l685
  2311   006748                     u530:
  2312   006748  0E01               	movlw	1
  2313   00674A  6E05               	movwf	___lwmod@counter^0,c
  2314   00674C  EFAC  F033         	goto	l1339
  2315   006750                     l1337:
  2316   006750  90D8               	bcf	status,0,c
  2317   006752  3603               	rlcf	___lwmod@divisor^0,f,c
  2318   006754  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2319   006756  2A05               	incf	___lwmod@counter^0,f,c
  2320   006758                     l1339:
  2321   006758  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2322   00675A  EFB1  F033         	goto	u541
  2323   00675E  EFB3  F033         	goto	u540
  2324   006762                     u541:
  2325   006762  EFA8  F033         	goto	l1337
  2326   006766                     u540:
  2327   006766                     l1341:
  2328   006766  5003               	movf	___lwmod@divisor^0,w,c
  2329   006768  5C01               	subwf	___lwmod@dividend^0,w,c
  2330   00676A  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2331   00676C  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2332   00676E  A0D8               	btfss	status,0,c
  2333   006770  EFBC  F033         	goto	u551
  2334   006774  EFBE  F033         	goto	u550
  2335   006778                     u551:
  2336   006778  EFC2  F033         	goto	l1345
  2337   00677C                     u550:
  2338   00677C  5003               	movf	___lwmod@divisor^0,w,c
  2339   00677E  5E01               	subwf	___lwmod@dividend^0,f,c
  2340   006780  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2341   006782  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2342   006784                     l1345:
  2343   006784  90D8               	bcf	status,0,c
  2344   006786  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2345   006788  3203               	rrcf	___lwmod@divisor^0,f,c
  2346   00678A  2E05               	decfsz	___lwmod@counter^0,f,c
  2347   00678C  EFB3  F033         	goto	l1341
  2348   006790                     l685:
  2349   006790  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2350   006794  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2351   006798  0012               	return		;funcret
  2352   00679A                     __end_of___lwmod:
  2353                           	callstack 0
  2354                           
  2355 ;; *************** function ___lwdiv *****************
  2356 ;; Defined at:
  2357 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  dividend        2    0[COMRAM] unsigned int 
  2360 ;;  divisor         2    2[COMRAM] unsigned int 
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;  quotient        2    4[COMRAM] unsigned int 
  2363 ;;  counter         1    6[COMRAM] unsigned char 
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  2    0[COMRAM] unsigned int 
  2366 ;; Registers used:
  2367 ;;		wreg, status,2, status,0
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2373 ;;      Params:         4       0       0       0       0       0       0
  2374 ;;      Locals:         3       0       0       0       0       0       0
  2375 ;;      Temps:          0       0       0       0       0       0       0
  2376 ;;      Totals:         7       0       0       0       0       0       0
  2377 ;;Total ram usage:        7 bytes
  2378 ;; Hardware stack levels used: 1
  2379 ;; This function calls:
  2380 ;;		Nothing
  2381 ;; This function is called by:
  2382 ;;		_vfpfcnvrt
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           	psect	text12
  2387   00679A                     __ptext12:
  2388                           	callstack 0
  2389   00679A                     ___lwdiv:
  2390                           	callstack 26
  2391   00679A  0E00               	movlw	0
  2392   00679C  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2393   00679E  0E00               	movlw	0
  2394   0067A0  6E05               	movwf	___lwdiv@quotient^0,c
  2395   0067A2  5003               	movf	___lwdiv@divisor^0,w,c
  2396   0067A4  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2397   0067A6  B4D8               	btfsc	status,2,c
  2398   0067A8  EFD8  F033         	goto	u501
  2399   0067AC  EFDA  F033         	goto	u500
  2400   0067B0                     u501:
  2401   0067B0  EF02  F034         	goto	l675
  2402   0067B4                     u500:
  2403   0067B4  0E01               	movlw	1
  2404   0067B6  6E07               	movwf	___lwdiv@counter^0,c
  2405   0067B8  EFE2  F033         	goto	l1319
  2406   0067BC                     l1317:
  2407   0067BC  90D8               	bcf	status,0,c
  2408   0067BE  3603               	rlcf	___lwdiv@divisor^0,f,c
  2409   0067C0  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2410   0067C2  2A07               	incf	___lwdiv@counter^0,f,c
  2411   0067C4                     l1319:
  2412   0067C4  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2413   0067C6  EFE7  F033         	goto	u511
  2414   0067CA  EFE9  F033         	goto	u510
  2415   0067CE                     u511:
  2416   0067CE  EFDE  F033         	goto	l1317
  2417   0067D2                     u510:
  2418   0067D2                     l1321:
  2419   0067D2  90D8               	bcf	status,0,c
  2420   0067D4  3605               	rlcf	___lwdiv@quotient^0,f,c
  2421   0067D6  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2422   0067D8  5003               	movf	___lwdiv@divisor^0,w,c
  2423   0067DA  5C01               	subwf	___lwdiv@dividend^0,w,c
  2424   0067DC  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2425   0067DE  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2426   0067E0  A0D8               	btfss	status,0,c
  2427   0067E2  EFF5  F033         	goto	u521
  2428   0067E6  EFF7  F033         	goto	u520
  2429   0067EA                     u521:
  2430   0067EA  EFFC  F033         	goto	l1329
  2431   0067EE                     u520:
  2432   0067EE  5003               	movf	___lwdiv@divisor^0,w,c
  2433   0067F0  5E01               	subwf	___lwdiv@dividend^0,f,c
  2434   0067F2  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2435   0067F4  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2436   0067F6  8005               	bsf	___lwdiv@quotient^0,0,c
  2437   0067F8                     l1329:
  2438   0067F8  90D8               	bcf	status,0,c
  2439   0067FA  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2440   0067FC  3203               	rrcf	___lwdiv@divisor^0,f,c
  2441   0067FE  2E07               	decfsz	___lwdiv@counter^0,f,c
  2442   006800  EFE9  F033         	goto	l1321
  2443   006804                     l675:
  2444   006804  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2445   006808  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2446   00680C  0012               	return		;funcret
  2447   00680E                     __end_of___lwdiv:
  2448                           	callstack 0
  2449                           
  2450 ;; *************** function _I2C_TRANSMITE *****************
  2451 ;; Defined at:
  2452 ;;		line 43 in file "I2C_Master.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;  DADO_I2C        1    wreg     unsigned char 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;  DADO_I2C        1    0[COMRAM] unsigned char 
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      void 
  2459 ;; Registers used:
  2460 ;;		wreg
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2466 ;;      Params:         0       0       0       0       0       0       0
  2467 ;;      Locals:         1       0       0       0       0       0       0
  2468 ;;      Temps:          0       0       0       0       0       0       0
  2469 ;;      Totals:         1       0       0       0       0       0       0
  2470 ;;Total ram usage:        1 bytes
  2471 ;; Hardware stack levels used: 1
  2472 ;; This function calls:
  2473 ;;		Nothing
  2474 ;; This function is called by:
  2475 ;;		_i2c_write
  2476 ;;		_i2c_read
  2477 ;;		_I2C_ESCRITA
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           	psect	text13
  2482   0065E8                     __ptext13:
  2483                           	callstack 0
  2484   0065E8                     _I2C_TRANSMITE:
  2485                           	callstack 28
  2486                           
  2487                           ;incstack = 0
  2488                           ;I2C_TRANSMITE@DADO_I2C stored from wreg
  2489   0065E8  6E01               	movwf	I2C_TRANSMITE@DADO_I2C^0,c
  2490   0065EA                     
  2491                           ;I2C_Master.c: 43: void I2C_TRANSMITE (unsigned char DADO_I2C);I2C_Master.c: 44: {;I2C_M
      +                          aster.c: 45:  SSPBUF = DADO_I2C;
  2492   0065EA  C001  FFC9         	movff	I2C_TRANSMITE@DADO_I2C,4041	;volatile
  2493   0065EE                     l136:
  2494   0065EE  B0C7               	btfsc	199,0,c	;volatile
  2495   0065F0  EFFC  F032         	goto	u271
  2496   0065F4  EFFE  F032         	goto	u270
  2497   0065F8                     u271:
  2498   0065F8  EFF7  F032         	goto	l136
  2499   0065FC                     u270:
  2500   0065FC                     l139:
  2501   0065FC  B4C7               	btfsc	199,2,c	;volatile
  2502   0065FE  EF03  F033         	goto	u281
  2503   006602  EF05  F033         	goto	u280
  2504   006606                     u281:
  2505   006606  EFFE  F032         	goto	l139
  2506   00660A                     u280:
  2507   00660A  0012               	return		;funcret
  2508   00660C                     __end_of_I2C_TRANSMITE:
  2509                           	callstack 0
  2510                           
  2511 ;; *************** function _I2C_STOP *****************
  2512 ;; Defined at:
  2513 ;;		line 54 in file "I2C_Master.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;		None
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;		None
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  1    wreg      void 
  2520 ;; Registers used:
  2521 ;;		None
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2527 ;;      Params:         0       0       0       0       0       0       0
  2528 ;;      Locals:         0       0       0       0       0       0       0
  2529 ;;      Temps:          0       0       0       0       0       0       0
  2530 ;;      Totals:         0       0       0       0       0       0       0
  2531 ;;Total ram usage:        0 bytes
  2532 ;; Hardware stack levels used: 1
  2533 ;; This function calls:
  2534 ;;		Nothing
  2535 ;; This function is called by:
  2536 ;;		_i2c_write
  2537 ;;		_i2c_read
  2538 ;;		_I2C_ESCRITA
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text14
  2543   00654A                     __ptext14:
  2544                           	callstack 0
  2545   00654A                     _I2C_STOP:
  2546                           	callstack 28
  2547   00654A                     
  2548                           ;I2C_Master.c: 56:  SSPCON2bits.PEN = 1;
  2549   00654A  84C5               	bsf	197,2,c	;volatile
  2550   00654C                     l150:
  2551   00654C  B4C5               	btfsc	197,2,c	;volatile
  2552   00654E  EFAB  F032         	goto	u291
  2553   006552  EFAD  F032         	goto	u290
  2554   006556                     u291:
  2555   006556  EFA6  F032         	goto	l150
  2556   00655A                     u290:
  2557   00655A  0012               	return		;funcret
  2558   00655C                     __end_of_I2C_STOP:
  2559                           	callstack 0
  2560                           
  2561 ;; *************** function _I2C_START *****************
  2562 ;; Defined at:
  2563 ;;		line 33 in file "I2C_Master.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		None
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2577 ;;      Params:         0       0       0       0       0       0       0
  2578 ;;      Locals:         0       0       0       0       0       0       0
  2579 ;;      Temps:          0       0       0       0       0       0       0
  2580 ;;      Totals:         0       0       0       0       0       0       0
  2581 ;;Total ram usage:        0 bytes
  2582 ;; Hardware stack levels used: 1
  2583 ;; This function calls:
  2584 ;;		Nothing
  2585 ;; This function is called by:
  2586 ;;		_i2c_write
  2587 ;;		_i2c_read
  2588 ;;		_I2C_ESCRITA
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           	psect	text15
  2593   006538                     __ptext15:
  2594                           	callstack 0
  2595   006538                     _I2C_START:
  2596                           	callstack 28
  2597   006538                     
  2598                           ;I2C_Master.c: 35:  SSPCON2bits.SEN = 1;
  2599   006538  80C5               	bsf	197,0,c	;volatile
  2600   00653A                     l124:
  2601   00653A  B0C5               	btfsc	197,0,c	;volatile
  2602   00653C  EFA2  F032         	goto	u261
  2603   006540  EFA4  F032         	goto	u260
  2604   006544                     u261:
  2605   006544  EF9D  F032         	goto	l124
  2606   006548                     u260:
  2607   006548  0012               	return		;funcret
  2608   00654A                     __end_of_I2C_START:
  2609                           	callstack 0
  2610                           
  2611 ;; *************** function _I2C_RESTART *****************
  2612 ;; Defined at:
  2613 ;;		line 38 in file "I2C_Master.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;		None
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;		None
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      void 
  2620 ;; Registers used:
  2621 ;;		None
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2627 ;;      Params:         0       0       0       0       0       0       0
  2628 ;;      Locals:         0       0       0       0       0       0       0
  2629 ;;      Temps:          0       0       0       0       0       0       0
  2630 ;;      Totals:         0       0       0       0       0       0       0
  2631 ;;Total ram usage:        0 bytes
  2632 ;; Hardware stack levels used: 1
  2633 ;; This function calls:
  2634 ;;		Nothing
  2635 ;; This function is called by:
  2636 ;;		_i2c_read
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text16
  2641   006526                     __ptext16:
  2642                           	callstack 0
  2643   006526                     _I2C_RESTART:
  2644                           	callstack 28
  2645   006526                     
  2646                           ;I2C_Master.c: 40:  SSPCON2bits.RSEN = 1;
  2647   006526  82C5               	bsf	197,1,c	;volatile
  2648   006528                     l130:
  2649   006528  B2C5               	btfsc	197,1,c	;volatile
  2650   00652A  EF99  F032         	goto	u301
  2651   00652E  EF9B  F032         	goto	u300
  2652   006532                     u301:
  2653   006532  EF94  F032         	goto	l130
  2654   006536                     u300:
  2655   006536  0012               	return		;funcret
  2656   006538                     __end_of_I2C_RESTART:
  2657                           	callstack 0
  2658                           
  2659 ;; *************** function _I2C_RECEBE *****************
  2660 ;; Defined at:
  2661 ;;		line 89 in file "I2C_Master.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;		None
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  x               1    0[COMRAM] unsigned char 
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      unsigned char 
  2668 ;; Registers used:
  2669 ;;		wreg, status,2
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2675 ;;      Params:         0       0       0       0       0       0       0
  2676 ;;      Locals:         1       0       0       0       0       0       0
  2677 ;;      Temps:          0       0       0       0       0       0       0
  2678 ;;      Totals:         1       0       0       0       0       0       0
  2679 ;;Total ram usage:        1 bytes
  2680 ;; Hardware stack levels used: 1
  2681 ;; This function calls:
  2682 ;;		Nothing
  2683 ;; This function is called by:
  2684 ;;		_i2c_read
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           	psect	text17
  2689   006692                     __ptext17:
  2690                           	callstack 0
  2691   006692                     _I2C_RECEBE:
  2692                           	callstack 28
  2693   006692                     
  2694                           ;I2C_Master.c: 91: unsigned char x;;I2C_Master.c: 92:  SSPCON2bits.RCEN = 1;
  2695   006692  86C5               	bsf	197,3,c	;volatile
  2696   006694                     l163:
  2697   006694  B6C5               	btfsc	197,3,c	;volatile
  2698   006696  EF4F  F033         	goto	u311
  2699   00669A  EF51  F033         	goto	u310
  2700   00669E                     u311:
  2701   00669E  EF4A  F033         	goto	l163
  2702   0066A2                     u310:
  2703   0066A2                     l166:
  2704   0066A2  A0C7               	btfss	199,0,c	;volatile
  2705   0066A4  EF56  F033         	goto	u321
  2706   0066A8  EF58  F033         	goto	u320
  2707   0066AC                     u321:
  2708   0066AC  EF51  F033         	goto	l166
  2709   0066B0                     u320:
  2710   0066B0                     
  2711                           ;I2C_Master.c: 95:  __nop();
  2712   0066B0  0000               	nop	
  2713                           
  2714                           ;I2C_Master.c: 96:     __nop();
  2715   0066B2  0000               	nop	
  2716                           
  2717                           ;I2C_Master.c: 97:     __nop();
  2718   0066B4  0000               	nop	
  2719                           
  2720                           ;I2C_Master.c: 98:     __nop();
  2721   0066B6  0000               	nop	
  2722                           
  2723                           ;I2C_Master.c: 99:     __nop();
  2724   0066B8  0000               	nop	
  2725                           
  2726                           ;I2C_Master.c: 100:     __nop();
  2727   0066BA  0000               	nop	
  2728                           
  2729                           ;I2C_Master.c: 101:     __nop();
  2730   0066BC  0000               	nop	
  2731                           
  2732                           ;I2C_Master.c: 102:     __nop();
  2733   0066BE  0000               	nop	
  2734                           
  2735                           ;I2C_Master.c: 103:     __nop();
  2736   0066C0  0000               	nop	
  2737                           
  2738                           ;I2C_Master.c: 104:     __nop();
  2739   0066C2  0000               	nop	
  2740                           
  2741                           ;I2C_Master.c: 105:     __nop();
  2742   0066C4  0000               	nop	
  2743                           
  2744                           ;I2C_Master.c: 106:     __nop();
  2745   0066C6  0000               	nop	
  2746                           
  2747                           ;I2C_Master.c: 107:     __nop();
  2748   0066C8  0000               	nop	
  2749                           
  2750                           ;I2C_Master.c: 108:     __nop();
  2751   0066CA  0000               	nop	
  2752                           
  2753                           ;I2C_Master.c: 109:     __nop();
  2754   0066CC  0000               	nop	
  2755                           
  2756                           ;I2C_Master.c: 110:     __nop();
  2757   0066CE  0000               	nop	
  2758                           
  2759                           ;I2C_Master.c: 111:     __nop();
  2760   0066D0  0000               	nop	
  2761                           
  2762                           ;I2C_Master.c: 112:     __nop();
  2763   0066D2  0000               	nop	
  2764                           
  2765                           ;I2C_Master.c: 113:     __nop();
  2766   0066D4  0000               	nop	
  2767                           
  2768                           ;I2C_Master.c: 114:     __nop();
  2769   0066D6  0000               	nop	
  2770                           
  2771                           ;I2C_Master.c: 115:     __nop();
  2772   0066D8  0000               	nop	
  2773                           
  2774                           ;I2C_Master.c: 116:     __nop();
  2775   0066DA  0000               	nop	
  2776                           
  2777                           ;I2C_Master.c: 118:  x = SSPBUF;
  2778   0066DC  CFC9 F001          	movff	4041,I2C_RECEBE@x	;volatile
  2779   0066E0                     
  2780                           ;I2C_Master.c: 119:  return x;
  2781   0066E0  5001               	movf	I2C_RECEBE@x^0,w,c
  2782   0066E2  0012               	return		;funcret
  2783   0066E4                     __end_of_I2C_RECEBE:
  2784                           	callstack 0
  2785                           
  2786 ;; *************** function _I2C_NACK *****************
  2787 ;; Defined at:
  2788 ;;		line 127 in file "I2C_Master.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;		None
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;		None
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		None
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2802 ;;      Params:         0       0       0       0       0       0       0
  2803 ;;      Locals:         0       0       0       0       0       0       0
  2804 ;;      Temps:          0       0       0       0       0       0       0
  2805 ;;      Totals:         0       0       0       0       0       0       0
  2806 ;;Total ram usage:        0 bytes
  2807 ;; Hardware stack levels used: 1
  2808 ;; This function calls:
  2809 ;;		Nothing
  2810 ;; This function is called by:
  2811 ;;		_i2c_read
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text18
  2816   006570                     __ptext18:
  2817                           	callstack 0
  2818   006570                     _I2C_NACK:
  2819                           	callstack 28
  2820   006570                     
  2821                           ;I2C_Master.c: 129:  SSPCON2bits.ACKDT = 1;
  2822   006570  8AC5               	bsf	197,5,c	;volatile
  2823                           
  2824                           ;I2C_Master.c: 130:  SSPCON2bits.ACKEN = 1;
  2825   006572  88C5               	bsf	197,4,c	;volatile
  2826   006574                     l178:
  2827   006574  B8C5               	btfsc	197,4,c	;volatile
  2828   006576  EFBF  F032         	goto	u341
  2829   00657A  EFC1  F032         	goto	u340
  2830   00657E                     u341:
  2831   00657E  EFBA  F032         	goto	l178
  2832   006582                     u340:
  2833   006582  0012               	return		;funcret
  2834   006584                     __end_of_I2C_NACK:
  2835                           	callstack 0
  2836                           
  2837 ;; *************** function _I2C_ACK *****************
  2838 ;; Defined at:
  2839 ;;		line 121 in file "I2C_Master.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;		None
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;		None
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  1    wreg      void 
  2846 ;; Registers used:
  2847 ;;		None
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2853 ;;      Params:         0       0       0       0       0       0       0
  2854 ;;      Locals:         0       0       0       0       0       0       0
  2855 ;;      Temps:          0       0       0       0       0       0       0
  2856 ;;      Totals:         0       0       0       0       0       0       0
  2857 ;;Total ram usage:        0 bytes
  2858 ;; Hardware stack levels used: 1
  2859 ;; This function calls:
  2860 ;;		Nothing
  2861 ;; This function is called by:
  2862 ;;		_i2c_read
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866                           	psect	text19
  2867   00655C                     __ptext19:
  2868                           	callstack 0
  2869   00655C                     _I2C_ACK:
  2870                           	callstack 28
  2871   00655C                     
  2872                           ;I2C_Master.c: 123:  SSPCON2bits.ACKDT = 0;
  2873   00655C  9AC5               	bcf	197,5,c	;volatile
  2874                           
  2875                           ;I2C_Master.c: 124:  SSPCON2bits.ACKEN = 1;
  2876   00655E  88C5               	bsf	197,4,c	;volatile
  2877   006560                     l172:
  2878   006560  B8C5               	btfsc	197,4,c	;volatile
  2879   006562  EFB5  F032         	goto	u331
  2880   006566  EFB7  F032         	goto	u330
  2881   00656A                     u331:
  2882   00656A  EFB0  F032         	goto	l172
  2883   00656E                     u330:
  2884   00656E  0012               	return		;funcret
  2885   006570                     __end_of_I2C_ACK:
  2886                           	callstack 0
  2887                           
  2888 ;; *************** function _initUART *****************
  2889 ;; Defined at:
  2890 ;;		line 17 in file "main.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;		None
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;		None
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  1    wreg      void 
  2897 ;; Registers used:
  2898 ;;		wreg, status,2
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2904 ;;      Params:         0       0       0       0       0       0       0
  2905 ;;      Locals:         0       0       0       0       0       0       0
  2906 ;;      Temps:          0       0       0       0       0       0       0
  2907 ;;      Totals:         0       0       0       0       0       0       0
  2908 ;;Total ram usage:        0 bytes
  2909 ;; Hardware stack levels used: 1
  2910 ;; This function calls:
  2911 ;;		Nothing
  2912 ;; This function is called by:
  2913 ;;		_main
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text20
  2918   0065B0                     __ptext20:
  2919                           	callstack 0
  2920   0065B0                     _initUART:
  2921                           	callstack 30
  2922   0065B0                     
  2923                           ;main.c: 18:     RCSTAbits.SPEN = 1;
  2924   0065B0  9C94               	bcf	148,6,c	;volatile
  2925                           
  2926                           ;main.c: 19:     RCSTAbits.CREN = 1;
  2927   0065B2  8E94               	bsf	148,7,c	;volatile
  2928   0065B4                     
  2929                           ;main.c: 20: }
  2930   0065B4  0E22               	movlw	34
  2931   0065B6  6EAF               	movwf	175,c	;volatile
  2932                           
  2933                           ;main.c: 21: 
  2934   0065B8  0E00               	movlw	0
  2935   0065BA  6EB0               	movwf	176,c	;volatile
  2936   0065BC                     
  2937                           ;main.c: 22: void putch(char byte) {
  2938   0065BC  86B8               	bsf	184,3,c	;volatile
  2939   0065BE                     
  2940                           ;main.c: 23:     while (!TXSTAbits.TRMT) {
  2941   0065BE  84AC               	bsf	172,2,c	;volatile
  2942   0065C0                     
  2943                           ;main.c: 24:         continue;
  2944   0065C0  98AC               	bcf	172,4,c	;volatile
  2945   0065C2                     
  2946                           ;main.c: 25:     }
  2947   0065C2  8AAC               	bsf	172,5,c	;volatile
  2948   0065C4                     
  2949                           ;main.c: 26:     TXREG = byte;
  2950   0065C4  8EAB               	bsf	171,7,c	;volatile
  2951   0065C6                     
  2952                           ;main.c: 27: }
  2953   0065C6  88AB               	bsf	171,4,c	;volatile
  2954   0065C8  0012               	return		;funcret
  2955   0065CA                     __end_of_initUART:
  2956                           	callstack 0
  2957                           
  2958 ;; *************** function _I2C_INICIA *****************
  2959 ;; Defined at:
  2960 ;;		line 17 in file "I2C_Master.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;		None
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;		None
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      void 
  2967 ;; Registers used:
  2968 ;;		wreg, status,2
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2974 ;;      Params:         0       0       0       0       0       0       0
  2975 ;;      Locals:         0       0       0       0       0       0       0
  2976 ;;      Temps:          0       0       0       0       0       0       0
  2977 ;;      Totals:         0       0       0       0       0       0       0
  2978 ;;Total ram usage:        0 bytes
  2979 ;; Hardware stack levels used: 1
  2980 ;; This function calls:
  2981 ;;		Nothing
  2982 ;; This function is called by:
  2983 ;;		_main
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           	psect	text21
  2988   006516                     __ptext21:
  2989                           	callstack 0
  2990   006516                     _I2C_INICIA:
  2991                           	callstack 30
  2992   006516                     
  2993                           ;I2C_Master.c: 18:     TRISC = 0xff;
  2994   006516  6894               	setf	148,c	;volatile
  2995   006518                     
  2996                           ;I2C_Master.c: 20:  SSPCON1 = 0b00101000;
  2997   006518  0E28               	movlw	40
  2998   00651A  6EC6               	movwf	198,c	;volatile
  2999                           
  3000                           ;I2C_Master.c: 23:  SSPADD = 20;
  3001   00651C  0E14               	movlw	20
  3002   00651E  6EC8               	movwf	200,c	;volatile
  3003                           
  3004                           ;I2C_Master.c: 24:  SSPSTAT = 0b10000000;
  3005   006520  0E80               	movlw	128
  3006   006522  6EC7               	movwf	199,c	;volatile
  3007   006524  0012               	return		;funcret
  3008   006526                     __end_of_I2C_INICIA:
  3009                           	callstack 0
  3010                           
  3011                           	psect	rparam
  3012   000000                     
  3013                           	psect	idloc
  3014                           
  3015                           ;Config register IDLOC0 @ 0x200000
  3016                           ;	unspecified, using default values
  3017   200000                     	org	2097152
  3018   200000  FF                 	db	255
  3019                           
  3020                           ;Config register IDLOC1 @ 0x200001
  3021                           ;	unspecified, using default values
  3022   200001                     	org	2097153
  3023   200001  FF                 	db	255
  3024                           
  3025                           ;Config register IDLOC2 @ 0x200002
  3026                           ;	unspecified, using default values
  3027   200002                     	org	2097154
  3028   200002  FF                 	db	255
  3029                           
  3030                           ;Config register IDLOC3 @ 0x200003
  3031                           ;	unspecified, using default values
  3032   200003                     	org	2097155
  3033   200003  FF                 	db	255
  3034                           
  3035                           ;Config register IDLOC4 @ 0x200004
  3036                           ;	unspecified, using default values
  3037   200004                     	org	2097156
  3038   200004  FF                 	db	255
  3039                           
  3040                           ;Config register IDLOC5 @ 0x200005
  3041                           ;	unspecified, using default values
  3042   200005                     	org	2097157
  3043   200005  FF                 	db	255
  3044                           
  3045                           ;Config register IDLOC6 @ 0x200006
  3046                           ;	unspecified, using default values
  3047   200006                     	org	2097158
  3048   200006  FF                 	db	255
  3049                           
  3050                           ;Config register IDLOC7 @ 0x200007
  3051                           ;	unspecified, using default values
  3052   200007                     	org	2097159
  3053   200007  FF                 	db	255
  3054                           
  3055                           	psect	config
  3056                           
  3057                           ; Padding undefined space
  3058   300000                     	org	3145728
  3059   300000  FF                 	db	255
  3060                           
  3061                           ;Config register CONFIG1H @ 0x300001
  3062                           ;	Oscillator Selection bits
  3063                           ;	OSC = HS, HS oscillator
  3064                           ;	Fail-Safe Clock Monitor Enable bit
  3065                           ;	FCMEN = 0x0, unprogrammed default
  3066                           ;	Internal/External Oscillator Switchover bit
  3067                           ;	IESO = 0x0, unprogrammed default
  3068   300001                     	org	3145729
  3069   300001  02                 	db	2
  3070                           
  3071                           ;Config register CONFIG2L @ 0x300002
  3072                           ;	unspecified, using default values
  3073                           ;	Power-up Timer Enable bit
  3074                           ;	PWRT = 0x1, unprogrammed default
  3075                           ;	Brown-out Reset Enable bits
  3076                           ;	BOREN = 0x3, unprogrammed default
  3077                           ;	Brown Out Reset Voltage bits
  3078                           ;	BORV = 0x3, unprogrammed default
  3079   300002                     	org	3145730
  3080   300002  1F                 	db	31
  3081                           
  3082                           ;Config register CONFIG2H @ 0x300003
  3083                           ;	Watchdog Timer Enable bit
  3084                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3085                           ;	Watchdog Timer Postscale Select bits
  3086                           ;	WDTPS = 0xF, unprogrammed default
  3087   300003                     	org	3145731
  3088   300003  1E                 	db	30
  3089                           
  3090                           ; Padding undefined space
  3091   300004                     	org	3145732
  3092   300004  FF                 	db	255
  3093                           
  3094                           ;Config register CONFIG3H @ 0x300005
  3095                           ;	CCP2 MUX bit
  3096                           ;	CCP2MX = 0x1, unprogrammed default
  3097                           ;	PORTB A/D Enable bit
  3098                           ;	PBADEN = 0x1, unprogrammed default
  3099                           ;	Low-Power Timer1 Oscillator Enable bit
  3100                           ;	LPT1OSC = 0x0, unprogrammed default
  3101                           ;	MCLR Pin Enable bit
  3102                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3103   300005                     	org	3145733
  3104   300005  83                 	db	131
  3105                           
  3106                           ;Config register CONFIG4L @ 0x300006
  3107                           ;	unspecified, using default values
  3108                           ;	Stack Full/Underflow Reset Enable bit
  3109                           ;	STVREN = 0x1, unprogrammed default
  3110                           ;	Single-Supply ICSP Enable bit
  3111                           ;	LVP = 0x1, unprogrammed default
  3112                           ;	Extended Instruction Set Enable bit
  3113                           ;	XINST = 0x0, unprogrammed default
  3114                           ;	Background Debugger Enable bit
  3115                           ;	DEBUG = 0x1, unprogrammed default
  3116   300006                     	org	3145734
  3117   300006  85                 	db	133
  3118                           
  3119                           ; Padding undefined space
  3120   300007                     	org	3145735
  3121   300007  FF                 	db	255
  3122                           
  3123                           ;Config register CONFIG5L @ 0x300008
  3124                           ;	unspecified, using default values
  3125                           ;	Code Protection bit
  3126                           ;	CP0 = 0x1, unprogrammed default
  3127                           ;	Code Protection bit
  3128                           ;	CP1 = 0x1, unprogrammed default
  3129                           ;	Code Protection bit
  3130                           ;	CP2 = 0x1, unprogrammed default
  3131                           ;	Code Protection bit
  3132                           ;	CP3 = 0x1, unprogrammed default
  3133   300008                     	org	3145736
  3134   300008  0F                 	db	15
  3135                           
  3136                           ;Config register CONFIG5H @ 0x300009
  3137                           ;	unspecified, using default values
  3138                           ;	Boot Block Code Protection bit
  3139                           ;	CPB = 0x1, unprogrammed default
  3140                           ;	Data EEPROM Code Protection bit
  3141                           ;	CPD = 0x1, unprogrammed default
  3142   300009                     	org	3145737
  3143   300009  C0                 	db	192
  3144                           
  3145                           ;Config register CONFIG6L @ 0x30000A
  3146                           ;	unspecified, using default values
  3147                           ;	Write Protection bit
  3148                           ;	WRT0 = 0x1, unprogrammed default
  3149                           ;	Write Protection bit
  3150                           ;	WRT1 = 0x1, unprogrammed default
  3151                           ;	Write Protection bit
  3152                           ;	WRT2 = 0x1, unprogrammed default
  3153                           ;	Write Protection bit
  3154                           ;	WRT3 = 0x1, unprogrammed default
  3155   30000A                     	org	3145738
  3156   30000A  0F                 	db	15
  3157                           
  3158                           ;Config register CONFIG6H @ 0x30000B
  3159                           ;	unspecified, using default values
  3160                           ;	Configuration Register Write Protection bit
  3161                           ;	WRTC = 0x1, unprogrammed default
  3162                           ;	Boot Block Write Protection bit
  3163                           ;	WRTB = 0x1, unprogrammed default
  3164                           ;	Data EEPROM Write Protection bit
  3165                           ;	WRTD = 0x1, unprogrammed default
  3166   30000B                     	org	3145739
  3167   30000B  E0                 	db	224
  3168                           
  3169                           ;Config register CONFIG7L @ 0x30000C
  3170                           ;	unspecified, using default values
  3171                           ;	Table Read Protection bit
  3172                           ;	EBTR0 = 0x1, unprogrammed default
  3173                           ;	Table Read Protection bit
  3174                           ;	EBTR1 = 0x1, unprogrammed default
  3175                           ;	Table Read Protection bit
  3176                           ;	EBTR2 = 0x1, unprogrammed default
  3177                           ;	Table Read Protection bit
  3178                           ;	EBTR3 = 0x1, unprogrammed default
  3179   30000C                     	org	3145740
  3180   30000C  0F                 	db	15
  3181                           
  3182                           ;Config register CONFIG7H @ 0x30000D
  3183                           ;	unspecified, using default values
  3184                           ;	Boot Block Table Read Protection bit
  3185                           ;	EBTRB = 0x1, unprogrammed default
  3186   30000D                     	org	3145741
  3187   30000D  40                 	db	64
  3188                           tosu	equ	0xFFF
  3189                           tosh	equ	0xFFE
  3190                           tosl	equ	0xFFD
  3191                           stkptr	equ	0xFFC
  3192                           pclatu	equ	0xFFB
  3193                           pclath	equ	0xFFA
  3194                           pcl	equ	0xFF9
  3195                           tblptru	equ	0xFF8
  3196                           tblptrh	equ	0xFF7
  3197                           tblptrl	equ	0xFF6
  3198                           tablat	equ	0xFF5
  3199                           prodh	equ	0xFF4
  3200                           prodl	equ	0xFF3
  3201                           indf0	equ	0xFEF
  3202                           postinc0	equ	0xFEE
  3203                           postdec0	equ	0xFED
  3204                           preinc0	equ	0xFEC
  3205                           plusw0	equ	0xFEB
  3206                           fsr0h	equ	0xFEA
  3207                           fsr0l	equ	0xFE9
  3208                           wreg	equ	0xFE8
  3209                           indf1	equ	0xFE7
  3210                           postinc1	equ	0xFE6
  3211                           postdec1	equ	0xFE5
  3212                           preinc1	equ	0xFE4
  3213                           plusw1	equ	0xFE3
  3214                           fsr1h	equ	0xFE2
  3215                           fsr1l	equ	0xFE1
  3216                           bsr	equ	0xFE0
  3217                           indf2	equ	0xFDF
  3218                           postinc2	equ	0xFDE
  3219                           postdec2	equ	0xFDD
  3220                           preinc2	equ	0xFDC
  3221                           plusw2	equ	0xFDB
  3222                           fsr2h	equ	0xFDA
  3223                           fsr2l	equ	0xFD9
  3224                           status	equ	0xFD8

Data Sizes:
    Strings     362
    Constant    0
    Data        0
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     72     111
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    i2c_read@data	PTR unsigned char  size(1) Largest target is 12
		 -> main@read_buffer(COMRAM[12]), 

    i2c_write@data	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_8(CODE[12]), 

    main@message	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_8(CODE[12]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_1(CODE[41]), STR_10(CODE[42]), STR_11(CODE[25]), STR_2(CODE[41]), 
		 -> STR_3(CODE[55]), STR_4(CODE[60]), STR_5(CODE[24]), STR_6(CODE[45]), 
		 -> STR_7(CODE[33]), STR_9(CODE[25]), 

    S1000$buffer	PTR unsigned char  size(2) Largest target is 0

    S1000$source	PTR const unsigned char  size(2) Largest target is 0

    serial_memory_read@buffer	PTR unsigned char  size(1) Largest target is 12
		 -> main@read_buffer(COMRAM[12]), 

    serial_memory_write@data	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_8(CODE[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 60
		 -> STR_1(CODE[41]), STR_10(CODE[42]), STR_11(CODE[25]), STR_2(CODE[41]), 
		 -> STR_3(CODE[55]), STR_4(CODE[60]), STR_5(CODE[24]), STR_6(CODE[45]), 
		 -> STR_7(CODE[33]), STR_9(CODE[25]), 

    vfpfcnvrt@cp_1064	PTR unsigned char  size(2) Largest target is 12
		 -> main@read_buffer(COMRAM[12]), ?_printf(COMRAM[2]), STR_8(CODE[12]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 60
		 -> STR_1(CODE[41]), STR_10(CODE[42]), STR_11(CODE[25]), STR_2(CODE[41]), 
		 -> STR_3(CODE[55]), STR_4(CODE[60]), STR_5(CODE[24]), STR_6(CODE[45]), 
		 -> STR_7(CODE[33]), STR_9(CODE[25]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_1(CODE[41]), STR_10(CODE[42]), STR_11(CODE[25]), STR_2(CODE[41]), 
		 -> STR_3(CODE[55]), STR_4(CODE[60]), STR_5(CODE[24]), STR_6(CODE[45]), 
		 -> STR_7(CODE[33]), STR_9(CODE[25]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_serial_memory_write
    _serial_memory_write->_i2c_write
    _i2c_write->_printf
    _serial_memory_seek->_printf
    _serial_memory_read->_i2c_read
    _i2c_read->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   23882
                                             58 COMRAM    14    14      0
                         _I2C_INICIA
                           _initUART
                             _printf
                 _serial_memory_read
                 _serial_memory_seek
                _serial_memory_write
 ---------------------------------------------------------------------------------
 (1) _serial_memory_write                                  6     2      4    8042
                                             52 COMRAM     6     2      4
                          _i2c_write
                             _printf
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                           10     4      6    4156
                                             42 COMRAM    10     4      6
                          _I2C_START
                           _I2C_STOP
                      _I2C_TRANSMITE
                             _printf
 ---------------------------------------------------------------------------------
 (1) _serial_memory_seek                                   5     2      3    3977
                                             42 COMRAM     5     2      3
                             _printf
 ---------------------------------------------------------------------------------
 (1) _serial_memory_read                                   3     0      3    8101
                                             51 COMRAM     3     0      3
                           _i2c_read
                             _printf
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             9     4      5    4215
                                             42 COMRAM     9     4      5
                            _I2C_ACK
                           _I2C_NACK
                         _I2C_RECEBE
                        _I2C_RESTART
                          _I2C_START
                           _I2C_STOP
                      _I2C_TRANSMITE
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              11     3      8    3668
                                             33 COMRAM     9     1      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     2      5    2852
                                             26 COMRAM     7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           16    12      4    2494
                                             10 COMRAM    16    12      4
                            ___lwdiv
                            ___lwmod
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     949
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _I2C_TRANSMITE                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_STOP                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_START                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_RESTART                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_RECEBE                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_INICIA                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_INICIA
   _initUART
   _printf
     _vfprintf
       _vfpfcnvrt
         ___lwdiv
         ___lwmod
         _fputc
           _putch
   _serial_memory_read
     _i2c_read
       _I2C_ACK
       _I2C_NACK
       _I2C_RECEBE
       _I2C_RESTART
       _I2C_START
       _I2C_STOP
       _I2C_TRANSMITE
       _printf
     _printf
   _serial_memory_seek
     _printf
   _serial_memory_write
     _i2c_write
       _I2C_START
       _I2C_STOP
       _I2C_TRANSMITE
       _printf
     _printf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     48      6F       1       87.4%
BITBIGSFRhhhhh      36      0       0      16        0.0%
BITBIGSFRhll        16      0       0      20        0.0%
BITBIGSFRl          14      0       0      21        0.0%
BITBIGSFRhhhl        C      0       0      17        0.0%
BITBIGSFRhhl         7      0       0      18        0.0%
BITBIGSFRhlh         1      0       0      19        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6F      22        0.0%
DATA                 0      0      6F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue May 21 17:51:13 2024

                  _SSPSTATbits 0FC7                             l42 6586                             l51 6A0E  
                           l45 6598                             l39 65C8                             l63 664A  
                           l71 6812                             l57 6AA6                             l59 6AD0  
                           l67 6734                             l91 6956                             l76 68AE  
                           l88 68F8                             l89 6924                             u10 6594  
                           u11 6590                            l130 6528                            l115 6524  
                          l124 653A                            l133 6536                            l150 654C  
                          l142 660A                            l127 6548                            l136 65EE  
                          l153 655A                            l163 6694                            l139 65FC  
                          l172 6560                            l181 6582                            l166 66A2  
                          l175 656E                            l168 66B0                            l169 66E2  
                          l178 6574                            l913 6690                            l682 680C  
                          l675 6804                            l692 6798                            l685 6790  
                          l925 6B9A                            l862 65E6                            l935 6586  
                          l937 6594                            l899 6E92                            u300 6536  
                          u301 6532                            u310 66A2                            u311 669E  
                          u320 66B0                            u321 66AC                            u330 656E  
                          u331 656A                            u340 6582                            u260 6548  
                          u500 67B4                            u341 657E                            u261 6544  
                          u501 67B0                            u270 65FC                            u510 67D2  
                          u271 65F8                            u511 67CE                            u280 660A  
                          u520 67EE                            u600 6BBE                            u281 6606  
                          u521 67EA                            u601 6BBA                            u290 655A  
                          u530 6748                            u610 6C04                            u291 6556  
                          u531 6744                            u611 6C00                            u540 6766  
                          u700 6E10                            u620 6C90                            u541 6762  
                          u621 6C8C                            u550 677C                            u710 6E48  
                          u630 6CA0                            u551 6778                            u631 6C9C  
                          u560 6AE4                            u720 6E58                            u640 6CD6  
                          u800 68E4                            u561 6AE0                            u721 6E54  
                          u641 6CD2                            u801 68E0                            u570 6AF6  
                          u650 6D18                            u730 6688                            u810 6918  
                          u571 6AF2                            u707 6E06                            u651 6D14  
                          u731 6684                            u811 6914                            u580 6B1E  
                          u660 6D4E                            u740 6A0E                            u820 6944  
                          u581 6B1A                            u717 6E3E                            u661 6D4A  
                          u741 6A0A                            u821 6940                            u590 6B54  
                          u670 6D80                            u750 6A9A                            u591 6B50  
                          u671 6D7C                            u751 6A96                            u680 6DB2  
                          u760 6AD0                            u681 6DAE                            u761 6ACC  
                          u690 6DD4                            u770 661E                            u691 6DD0  
                          u771 661A                            u780 6704                            u837 69DE  
                          u781 6700                            u790 6880                            u791 687C  
              __end_of_I2C_ACK 6570                            wreg 0FE8                           l1151 65B0  
                         l1311 679A                           l1161 65C2                           l1153 65B4  
                         l1321 67D2                           l1313 67A2                           l1401 6CF6  
                         l1227 6516                           l1163 65C4                           l1155 65BC  
                         l1091 66E0                           l1075 6538                           l1331 67FE  
                         l1323 67D8                           l1315 67B4                           l1411 6D80  
                         l1403 6D18                           l1229 6518                           l1165 65C6  
                         l1157 65BE                           l1085 654A                           l1077 65EA  
                         l1325 67EE                           l1317 67BC                           l1341 6766  
                         l1333 6736                           l1421 6DF0                           l1413 6DB2  
                         l1405 6D24                           l1501 6AB6                           l1159 65C0  
                         l1095 655C                           l1087 6526                           l1327 67F6  
                         l1319 67C4                           l1343 677C                           l1335 6748  
                         l1351 6AE4                           l1423 6E24                           l1407 6D2C  
                         l1431 6E6C                           l1503 6ABA                           l1097 6570  
                         l1089 6692                           l1329 67F8                           l1345 6784  
                         l1337 6750                           l1353 6AF6                           l1425 6E28  
                         l1409 6D4E                           l1417 6DC4                           l1441 666C  
                         l1513 6630                           l1505 660C                           l1521 6704  
                         l1347 678A                           l1339 6758                           l1355 6B00  
                         l1419 6DD4                           l1427 6E5C                           l1371 6BDA  
                         l1363 6B9C                           l1443 6688                           l1515 6648  
                         l1507 661E                           l1523 6710                           l1357 6B1E  
                         l1349 6AD2                           l1381 6C3E                           l1373 6BE8  
                         l1365 6BBE                           l1437 664C                           l1509 662A  
                         l1541 684A                           l1533 680E                           l1461 697A  
                         l1453 695E                           l1359 6B54                           l1391 6CC2  
                         l1383 6C62                           l1375 6C04                           l1367 6BCA  
                         l1439 6658                           l1447 65CA                           l1551 6880  
                         l1535 681E                           l1471 69E8                           l1463 6980  
                         l1455 696A                           l1527 6716                           l1519 66E4  
                         l1393 6CC4                           l1385 6C7E                           l1377 6C1C  
                         l1369 6BD6                           l1449 65CE                           l1481 6A20  
                         l1561 68AC                           l1537 682E                           l1473 69F4  
                         l1465 699C                           l1457 696E                           l1529 6732  
                         l1387 6C90                           l1379 6C3A                           l1491 6A4A  
                         l1483 6A26                           l1539 683E                           l1547 6850  
                         l1467 69D4                           l1459 6974                           l1475 69F8  
                         l1571 68E4                           l1389 6CA4                           l1397 6CDA  
                         l1493 6A78                           l1485 6A2C                           l1477 6A10  
                         l1557 6890                           l1549 686E                           l1469 69D8  
                         l1573 6918                           l1565 68B0                           l1399 6CF2  
                         l1495 6A9A                           l1487 6A32                           l1479 6A1C  
                         l1559 68A4                           l1575 6944                           l1567 68B8  
                         l1497 6AA2                           l1489 6A3C                           l1569 68C0  
                         l1499 6AAA                           STR_1 6F5F                           STR_2 6F5F  
                         STR_3 6ED1                           STR_4 6E95                           STR_5 6FDB  
                         STR_6 6F08                           STR_7 6F88                           STR_8 6FF3  
                         STR_9 6FC2                    main@message 0047               __end_of_I2C_NACK 6584  
                         _dbuf 0049               __end_of_I2C_STOP 655C                           _main 68B0  
                         _prec 006B                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf1 0FE7                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           start 0000                     i2c_write@i 0033  
                 ___param_bank 0000                          ?_main 0001                          STR_10 6F35  
                        STR_11 6FA9                __end_of___lwdiv 680E                __end_of___lwmod 679A  
                 vfpfcnvrt@fmt 000D                          _SPBRG 0FAF                          _TRISC 0F94  
                        _TXREG 0FAD              __end_of_I2C_START 654A                          _flags 006F  
                        _fputc 6AD2                          _width 0069                          _putch 6584  
                        tablat 0FF5                          status 0FD8                  _I2C_TRANSMITE 65E8  
  serial_memory_read@num_bytes 0035                __initialization 659A                   __end_of_main 695E  
             __end_of_i2c_read 6AD2                      ??_I2C_ACK 0001                         ??_main 003B  
                __activetblptr 0002                   ??_I2C_INICIA 0001                   ??_I2C_RECEBE 0001  
                       ?_fputc 0002                         ?_putch 0001                   i2c_read@data 002D  
               ?_I2C_TRANSMITE 0001                  vfpfcnvrt@done 0011                         _SPBRGH 0FB0  
                       _SSPADD 0FC8                         _SSPBUF 0FC9             __end_of_I2C_INICIA 6526  
           __end_of_I2C_RECEBE 66E4                   vfprintf@cfmt 0020               __end_of_initUART 65CA  
                    ??___lwdiv 0005                      ??___lwmod 0005                         clear_0 65A0  
                       isa$std 0001                         _printf 65CA                      ?_I2C_NACK 0001  
                    ?_I2C_STOP 0001                         fputc@c 0002                   __mediumconst 6E94  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
             __end_of_vfprintf 6692                     __accesstop 0080        __end_of__initialization 65A6  
                ___rparam_used 0001                _current_pointer 006D                 __pcstackCOMRAM 0001  
                __end_of_fputc 6B9C                  __end_of_putch 659A   serial_memory_write@num_bytes 0037  
                   ??_I2C_NACK 0001              __end_of_i2c_write 6A10                     ??_I2C_STOP 0001  
                      ??_fputc 0006                ??_I2C_TRANSMITE 0001                        ??_putch 0001  
                    ?_i2c_read 002B                  ??_I2C_RESTART 0001                        _I2C_ACK 655C  
                      ?_printf 0022                        _SSPCON1 0FC6                        _SSPCON2 0FC5  
                      _SSPSTAT 0FC7                      ?_initUART 0001                     ??_i2c_read 0030  
                    _I2C_START 6538                        __Hparam 0000                        __Lparam 0000  
          __end_of_I2C_RESTART 6538                        ___lwdiv 679A                        ___lwmod 6736  
                    ?_vfprintf 001B                        __pcinit 659A                        __ramtop 0600  
              i2c_read@address 002B                        __ptext0 68B0                        __ptext1 66E4  
                      __ptext2 695E                        __ptext3 680E                        __ptext4 660C  
                      __ptext5 6A10                        __ptext6 65CA                        __ptext7 664C  
                      __ptext8 6B9C                        __ptext9 6AD2        serial_memory_write@data 0035  
         end_of_initialization 65A6                     ??_initUART 0001                     ?_I2C_START 0001  
                      fputc@fp 0004                  __Lmediumconst 6E94               vfpfcnvrt@cp_1064 0012  
        I2C_TRANSMITE@DADO_I2C 0001              __end_of_vfpfcnvrt 6E94     __end_of_serial_memory_read 664C  
   __end_of_serial_memory_seek 68B0                      _RCSTAbits 0FAB                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0016                     ??_vfprintf 0020                  i2c_write@data 002D  
                    _TRISCbits 0F94                      i2c_read@i 0032                      _TXSTAbits 0FAC  
                  _I2C_RESTART 6526            _serial_memory_write 66E4                    vfpfcnvrt@ap 000E  
                  vfpfcnvrt@cp 0014                    vfpfcnvrt@fp 000B                    _BAUDCONbits 0FB8  
               __end_of_printf 65E8           ?_serial_memory_write 0035            start_initialization 659A  
     serial_memory_read@buffer 0034                      _i2c_write 695E                    ??_I2C_START 0001  
                  vfprintf@fmt 001D                    I2C_RECEBE@x 0001                       ?_I2C_ACK 0001  
                     ??_printf 002A       serial_memory_seek@offset 002B       serial_memory_seek@origin 002D  
        ??_serial_memory_write 0039                    __pbssCOMRAM 0049                     ?_i2c_write 002B  
        __end_of_I2C_TRANSMITE 660C               ___lwdiv@dividend 0001                  __pmediumconst 6E94  
                     ?___lwdiv 0001                       ?___lwmod 0001                       _I2C_NACK 6570  
                     _I2C_STOP 654A               ___lwdiv@quotient 0005                 i2c_read@length 002E  
                    _vfpfcnvrt 6B9C                     _I2C_INICIA 6516                     _I2C_RECEBE 6692  
           _serial_memory_read 660C             _serial_memory_seek 680E                main@read_buffer 003B  
                  ??_i2c_write 0031                     vfpfcnvrt@c 001A  serial_memory_seek@new_pointer 002E  
          ?_serial_memory_read 0034            ?_serial_memory_seek 002B                       _i2c_read 6A10  
                 ?_I2C_RESTART 0001                       __Hrparam 0000                     vfprintf@ap 001F  
                     __Lrparam 0000                     vfprintf@fp 001B           ??_serial_memory_read 0037  
         ??_serial_memory_seek 002E                     ?_vfpfcnvrt 000B                ___lwdiv@divisor 0003  
              ___lwdiv@counter 0007                       __ptext10 6584                       __ptext11 6736  
                     __ptext20 65B0                       __ptext12 679A                       __ptext21 6516  
                     __ptext13 65E8                       __ptext14 654A                       __ptext15 6538  
                     __ptext16 6526                       __ptext17 6692                       __ptext18 6570  
                     __ptext19 655C                       _initUART 65B0                       isa$xinst 0000  
                     _vfprintf 664C                      printf@fmt 0022                    ?_I2C_INICIA 0001  
                  ?_I2C_RECEBE 0001                      putch@byte 0001               ___lwmod@dividend 0001  
                     printf@ap 002A    __end_of_serial_memory_write 6736                    ??_vfpfcnvrt 000F  
              ___lwmod@divisor 0003                ___lwmod@counter 0005               i2c_write@address 002B  
                  _SSPCON2bits 0FC5                i2c_write@length 002F  



Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue May 21 23:24:47 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    41   000000                     
    42                           ; Version 2.20
    43                           ; Generated 12/02/2020 GMT
    44                           ; 
    45                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F4520 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76   000000                     
    77                           	psect	idataCOMRAM
    78   0060BA                     __pidataCOMRAM:
    79                           	callstack 0
    80                           
    81                           ;initializer for display_sequence@F2951
    82   0060BA  FF                 	db	255
    83   0060BB  FF                 	db	255
    84   0060BC  FF                 	db	255
    85   0060BD  FF                 	db	255
    86                           
    87                           	psect	mediumconst
    88   006E6A                     __pmediumconst:
    89                           	callstack 0
    90   006E6A  00                 	db	0
    91   006E6B                     _segment_map:
    92                           	callstack 0
    93   006E6B  3F                 	db	63
    94   006E6C  06                 	db	6
    95   006E6D  5B                 	db	91
    96   006E6E  4F                 	db	79
    97   006E6F  66                 	db	102
    98   006E70  6D                 	db	109
    99   006E71  7D                 	db	125
   100   006E72  07                 	db	7
   101   006E73  7F                 	db	127
   102   006E74  6F                 	db	111
   103   006E75  79                 	db	121
   104   006E76  50                 	db	80
   105   006E77  5C                 	db	92
   106   006E78                     __end_of_segment_map:
   107                           	callstack 0
   108   000000                     _SSPSTAT	set	4039
   109   000000                     _SSPADD	set	4040
   110   000000                     _SSPCON2bits	set	4037
   111   000000                     _SSPSTATbits	set	4039
   112   000000                     _TRISC	set	3988
   113   000000                     _TRISBbits	set	3987
   114   000000                     _PORTBbits	set	3969
   115   000000                     _LATB	set	3978
   116   000000                     _LATD	set	3980
   117   000000                     _TRISB	set	3987
   118   000000                     _TRISCbits	set	3988
   119   000000                     _TRISD	set	3989
   120   000000                     _RCSTAbits	set	4011
   121   000000                     _TXSTAbits	set	4012
   122   000000                     _SPBRG	set	4015
   123   000000                     _BAUDCONbits	set	4024
   124   000000                     _SPBRGH	set	4016
   125   000000                     _ADCON1	set	4033
   126   000000                     _TXREG	set	4013
   127   000000                     _SSPCON2	set	4037
   128   000000                     _SSPCON1	set	4038
   129   000000                     _SSPBUF	set	4041
   130   006E78                     STR_4:
   131   006E78  45                 	db	69	;'E'
   132   006E79  72                 	db	114	;'r'
   133   006E7A  72                 	db	114	;'r'
   134   006E7B  6F                 	db	111	;'o'
   135   006E7C  3A                 	db	58	;':'
   136   006E7D  20                 	db	32
   137   006E7E  54                 	db	84	;'T'
   138   006E7F  65                 	db	101	;'e'
   139   006E80  6E                 	db	110	;'n'
   140   006E81  74                 	db	116	;'t'
   141   006E82  61                 	db	97	;'a'
   142   006E83  74                 	db	116	;'t'
   143   006E84  69                 	db	105	;'i'
   144   006E85  76                 	db	118	;'v'
   145   006E86  61                 	db	97	;'a'
   146   006E87  20                 	db	32
   147   006E88  64                 	db	100	;'d'
   148   006E89  65                 	db	101	;'e'
   149   006E8A  20                 	db	32
   150   006E8B  65                 	db	101	;'e'
   151   006E8C  73                 	db	115	;'s'
   152   006E8D  63                 	db	99	;'c'
   153   006E8E  72                 	db	114	;'r'
   154   006E8F  65                 	db	101	;'e'
   155   006E90  76                 	db	118	;'v'
   156   006E91  65                 	db	101	;'e'
   157   006E92  72                 	db	114	;'r'
   158   006E93  20                 	db	32
   159   006E94  61                 	db	97	;'a'
   160   006E95  6C                 	db	108	;'l'
   161   006E96  65                 	db	101	;'e'
   162   006E97  6D                 	db	109	;'m'
   163   006E98  20                 	db	32
   164   006E99  64                 	db	100	;'d'
   165   006E9A  61                 	db	97	;'a'
   166   006E9B  20                 	db	32
   167   006E9C  63                 	db	99	;'c'
   168   006E9D  61                 	db	97	;'a'
   169   006E9E  70                 	db	112	;'p'
   170   006E9F  61                 	db	97	;'a'
   171   006EA0  63                 	db	99	;'c'
   172   006EA1  69                 	db	105	;'i'
   173   006EA2  64                 	db	100	;'d'
   174   006EA3  61                 	db	97	;'a'
   175   006EA4  64                 	db	100	;'d'
   176   006EA5  65                 	db	101	;'e'
   177   006EA6  20                 	db	32
   178   006EA7  64                 	db	100	;'d'
   179   006EA8  61                 	db	97	;'a'
   180   006EA9  20                 	db	32
   181   006EAA  6D                 	db	109	;'m'
   182   006EAB  65                 	db	101	;'e'
   183   006EAC  6D                 	db	109	;'m'
   184   006EAD  6F                 	db	111	;'o'
   185   006EAE  72                 	db	114	;'r'
   186   006EAF  69                 	db	105	;'i'
   187   006EB0  61                 	db	97	;'a'
   188   006EB1  0D                 	db	13
   189   006EB2  0A                 	db	10
   190   006EB3  00                 	db	0
   191   006EB4                     STR_3:
   192   006EB4  45                 	db	69	;'E'
   193   006EB5  72                 	db	114	;'r'
   194   006EB6  72                 	db	114	;'r'
   195   006EB7  6F                 	db	111	;'o'
   196   006EB8  3A                 	db	58	;':'
   197   006EB9  20                 	db	32
   198   006EBA  54                 	db	84	;'T'
   199   006EBB  65                 	db	101	;'e'
   200   006EBC  6E                 	db	110	;'n'
   201   006EBD  74                 	db	116	;'t'
   202   006EBE  61                 	db	97	;'a'
   203   006EBF  74                 	db	116	;'t'
   204   006EC0  69                 	db	105	;'i'
   205   006EC1  76                 	db	118	;'v'
   206   006EC2  61                 	db	97	;'a'
   207   006EC3  20                 	db	32
   208   006EC4  64                 	db	100	;'d'
   209   006EC5  65                 	db	101	;'e'
   210   006EC6  20                 	db	32
   211   006EC7  6C                 	db	108	;'l'
   212   006EC8  65                 	db	101	;'e'
   213   006EC9  72                 	db	114	;'r'
   214   006ECA  20                 	db	32
   215   006ECB  61                 	db	97	;'a'
   216   006ECC  6C                 	db	108	;'l'
   217   006ECD  65                 	db	101	;'e'
   218   006ECE  6D                 	db	109	;'m'
   219   006ECF  20                 	db	32
   220   006ED0  64                 	db	100	;'d'
   221   006ED1  61                 	db	97	;'a'
   222   006ED2  20                 	db	32
   223   006ED3  63                 	db	99	;'c'
   224   006ED4  61                 	db	97	;'a'
   225   006ED5  70                 	db	112	;'p'
   226   006ED6  61                 	db	97	;'a'
   227   006ED7  63                 	db	99	;'c'
   228   006ED8  69                 	db	105	;'i'
   229   006ED9  64                 	db	100	;'d'
   230   006EDA  61                 	db	97	;'a'
   231   006EDB  64                 	db	100	;'d'
   232   006EDC  65                 	db	101	;'e'
   233   006EDD  20                 	db	32
   234   006EDE  64                 	db	100	;'d'
   235   006EDF  61                 	db	97	;'a'
   236   006EE0  20                 	db	32
   237   006EE1  6D                 	db	109	;'m'
   238   006EE2  65                 	db	101	;'e'
   239   006EE3  6D                 	db	109	;'m'
   240   006EE4  6F                 	db	111	;'o'
   241   006EE5  72                 	db	114	;'r'
   242   006EE6  69                 	db	105	;'i'
   243   006EE7  61                 	db	97	;'a'
   244   006EE8  0D                 	db	13
   245   006EE9  0A                 	db	10
   246   006EEA  00                 	db	0
   247   006EEB                     STR_6:
   248   006EEB  45                 	db	69	;'E'
   249   006EEC  72                 	db	114	;'r'
   250   006EED  72                 	db	114	;'r'
   251   006EEE  6F                 	db	111	;'o'
   252   006EEF  3A                 	db	58	;':'
   253   006EF0  20                 	db	32
   254   006EF1  50                 	db	80	;'P'
   255   006EF2  6F                 	db	111	;'o'
   256   006EF3  6E                 	db	110	;'n'
   257   006EF4  74                 	db	116	;'t'
   258   006EF5  65                 	db	101	;'e'
   259   006EF6  69                 	db	105	;'i'
   260   006EF7  72                 	db	114	;'r'
   261   006EF8  6F                 	db	111	;'o'
   262   006EF9  20                 	db	32
   263   006EFA  66                 	db	102	;'f'
   264   006EFB  6F                 	db	111	;'o'
   265   006EFC  72                 	db	114	;'r'
   266   006EFD  61                 	db	97	;'a'
   267   006EFE  20                 	db	32
   268   006EFF  64                 	db	100	;'d'
   269   006F00  6F                 	db	111	;'o'
   270   006F01  73                 	db	115	;'s'
   271   006F02  20                 	db	32
   272   006F03  6C                 	db	108	;'l'
   273   006F04  69                 	db	105	;'i'
   274   006F05  6D                 	db	109	;'m'
   275   006F06  69                 	db	105	;'i'
   276   006F07  74                 	db	116	;'t'
   277   006F08  65                 	db	101	;'e'
   278   006F09  73                 	db	115	;'s'
   279   006F0A  20                 	db	32
   280   006F0B  64                 	db	100	;'d'
   281   006F0C  61                 	db	97	;'a'
   282   006F0D  20                 	db	32
   283   006F0E  6D                 	db	109	;'m'
   284   006F0F  65                 	db	101	;'e'
   285   006F10  6D                 	db	109	;'m'
   286   006F11  6F                 	db	111	;'o'
   287   006F12  72                 	db	114	;'r'
   288   006F13  69                 	db	105	;'i'
   289   006F14  61                 	db	97	;'a'
   290   006F15  0D                 	db	13
   291   006F16  0A                 	db	10
   292   006F17  00                 	db	0
   293   006F18                     STR_11:
   294   006F18  53                 	db	83	;'S'
   295   006F19  75                 	db	117	;'u'
   296   006F1A  63                 	db	99	;'c'
   297   006F1B  65                 	db	101	;'e'
   298   006F1C  73                 	db	115	;'s'
   299   006F1D  73                 	db	115	;'s'
   300   006F1E  6F                 	db	111	;'o'
   301   006F1F  20                 	db	32
   302   006F20  6E                 	db	110	;'n'
   303   006F21  6F                 	db	111	;'o'
   304   006F22  20                 	db	32
   305   006F23  72                 	db	114	;'r'
   306   006F24  65                 	db	101	;'e'
   307   006F25  70                 	db	112	;'p'
   308   006F26  6F                 	db	111	;'o'
   309   006F27  73                 	db	115	;'s'
   310   006F28  69                 	db	105	;'i'
   311   006F29  63                 	db	99	;'c'
   312   006F2A  69                 	db	105	;'i'
   313   006F2B  6F                 	db	111	;'o'
   314   006F2C  6E                 	db	110	;'n'
   315   006F2D  61                 	db	97	;'a'
   316   006F2E  6D                 	db	109	;'m'
   317   006F2F  65                 	db	101	;'e'
   318   006F30  6E                 	db	110	;'n'
   319   006F31  74                 	db	116	;'t'
   320   006F32  6F                 	db	111	;'o'
   321   006F33  20                 	db	32
   322   006F34  64                 	db	100	;'d'
   323   006F35  6F                 	db	111	;'o'
   324   006F36  20                 	db	32
   325   006F37  70                 	db	112	;'p'
   326   006F38  6F                 	db	111	;'o'
   327   006F39  6E                 	db	110	;'n'
   328   006F3A  74                 	db	116	;'t'
   329   006F3B  65                 	db	101	;'e'
   330   006F3C  69                 	db	105	;'i'
   331   006F3D  72                 	db	114	;'r'
   332   006F3E  6F                 	db	111	;'o'
   333   006F3F  0D                 	db	13
   334   006F40  0A                 	db	10
   335   006F41  00                 	db	0
   336   006F42                     STR_1:
   337   006F42  45                 	db	69	;'E'
   338   006F43  6E                 	db	110	;'n'
   339   006F44  64                 	db	100	;'d'
   340   006F45  65                 	db	101	;'e'
   341   006F46  72                 	db	114	;'r'
   342   006F47  65                 	db	101	;'e'
   343   006F48  63                 	db	99	;'c'
   344   006F49  6F                 	db	111	;'o'
   345   006F4A  20                 	db	32
   346   006F4B  61                 	db	97	;'a'
   347   006F4C  74                 	db	116	;'t'
   348   006F4D  75                 	db	117	;'u'
   349   006F4E  61                 	db	97	;'a'
   350   006F4F  6C                 	db	108	;'l'
   351   006F50  3A                 	db	58	;':'
   352   006F51  20                 	db	32
   353   006F52  25                 	db	37
   354   006F53  75                 	db	117	;'u'
   355   006F54  2C                 	db	44
   356   006F55  20                 	db	32
   357   006F56  4C                 	db	76	;'L'
   358   006F57  65                 	db	101	;'e'
   359   006F58  69                 	db	105	;'i'
   360   006F59  74                 	db	116	;'t'
   361   006F5A  75                 	db	117	;'u'
   362   006F5B  72                 	db	114	;'r'
   363   006F5C  61                 	db	97	;'a'
   364   006F5D  20                 	db	32
   365   006F5E  5B                 	db	91	;'['
   366   006F5F  25                 	db	37
   367   006F60  75                 	db	117	;'u'
   368   006F61  5D                 	db	93	;']'
   369   006F62  20                 	db	32
   370   006F63  3D                 	db	61	;'='
   371   006F64  20                 	db	32
   372   006F65  25                 	db	37
   373   006F66  75                 	db	117	;'u'
   374   006F67  20                 	db	32
   375   006F68  0D                 	db	13
   376   006F69  0A                 	db	10
   377   006F6A  00                 	db	0
   378   006F6B                     STR_7:
   379   006F6B  53                 	db	83	;'S'
   380   006F6C  65                 	db	101	;'e'
   381   006F6D  65                 	db	101	;'e'
   382   006F6E  6B                 	db	107	;'k'
   383   006F6F  3A                 	db	58	;':'
   384   006F70  20                 	db	32
   385   006F71  50                 	db	80	;'P'
   386   006F72  6F                 	db	111	;'o'
   387   006F73  73                 	db	115	;'s'
   388   006F74  69                 	db	105	;'i'
   389   006F75  63                 	db	99	;'c'
   390   006F76  61                 	db	97	;'a'
   391   006F77  6F                 	db	111	;'o'
   392   006F78  20                 	db	32
   393   006F79  61                 	db	97	;'a'
   394   006F7A  6C                 	db	108	;'l'
   395   006F7B  74                 	db	116	;'t'
   396   006F7C  65                 	db	101	;'e'
   397   006F7D  72                 	db	114	;'r'
   398   006F7E  61                 	db	97	;'a'
   399   006F7F  64                 	db	100	;'d'
   400   006F80  61                 	db	97	;'a'
   401   006F81  20                 	db	32
   402   006F82  70                 	db	112	;'p'
   403   006F83  61                 	db	97	;'a'
   404   006F84  72                 	db	114	;'r'
   405   006F85  61                 	db	97	;'a'
   406   006F86  20                 	db	32
   407   006F87  25                 	db	37
   408   006F88  75                 	db	117	;'u'
   409   006F89  0D                 	db	13
   410   006F8A  0A                 	db	10
   411   006F8B  00                 	db	0
   412   006F8C                     STR_9:
   413   006F8C  45                 	db	69	;'E'
   414   006F8D  72                 	db	114	;'r'
   415   006F8E  72                 	db	114	;'r'
   416   006F8F  6F                 	db	111	;'o'
   417   006F90  3A                 	db	58	;':'
   418   006F91  20                 	db	32
   419   006F92  6D                 	db	109	;'m'
   420   006F93  65                 	db	101	;'e'
   421   006F94  6E                 	db	110	;'n'
   422   006F95  73                 	db	115	;'s'
   423   006F96  61                 	db	97	;'a'
   424   006F97  67                 	db	103	;'g'
   425   006F98  65                 	db	101	;'e'
   426   006F99  6D                 	db	109	;'m'
   427   006F9A  20                 	db	32
   428   006F9B  6D                 	db	109	;'m'
   429   006F9C  75                 	db	117	;'u'
   430   006F9D  69                 	db	105	;'i'
   431   006F9E  74                 	db	116	;'t'
   432   006F9F  6F                 	db	111	;'o'
   433   006FA0  20                 	db	32
   434   006FA1  6C                 	db	108	;'l'
   435   006FA2  6F                 	db	111	;'o'
   436   006FA3  6E                 	db	110	;'n'
   437   006FA4  67                 	db	103	;'g'
   438   006FA5  61                 	db	97	;'a'
   439   006FA6  2E                 	db	46
   440   006FA7  0A                 	db	10
   441   006FA8  00                 	db	0
   442   006FA9                     STR_12:
   443   006FA9  53                 	db	83	;'S'
   444   006FAA  75                 	db	117	;'u'
   445   006FAB  63                 	db	99	;'c'
   446   006FAC  65                 	db	101	;'e'
   447   006FAD  73                 	db	115	;'s'
   448   006FAE  73                 	db	115	;'s'
   449   006FAF  6F                 	db	111	;'o'
   450   006FB0  20                 	db	32
   451   006FB1  6E                 	db	110	;'n'
   452   006FB2  61                 	db	97	;'a'
   453   006FB3  20                 	db	32
   454   006FB4  6C                 	db	108	;'l'
   455   006FB5  65                 	db	101	;'e'
   456   006FB6  69                 	db	105	;'i'
   457   006FB7  74                 	db	116	;'t'
   458   006FB8  75                 	db	117	;'u'
   459   006FB9  72                 	db	114	;'r'
   460   006FBA  61                 	db	97	;'a'
   461   006FBB  3A                 	db	58	;':'
   462   006FBC  20                 	db	32
   463   006FBD  25                 	db	37
   464   006FBE  73                 	db	115	;'s'
   465   006FBF  0D                 	db	13
   466   006FC0  0A                 	db	10
   467   006FC1  00                 	db	0
   468   006FC2                     STR_10:
   469   006FC2  53                 	db	83	;'S'
   470   006FC3  75                 	db	117	;'u'
   471   006FC4  63                 	db	99	;'c'
   472   006FC5  65                 	db	101	;'e'
   473   006FC6  73                 	db	115	;'s'
   474   006FC7  73                 	db	115	;'s'
   475   006FC8  6F                 	db	111	;'o'
   476   006FC9  20                 	db	32
   477   006FCA  6E                 	db	110	;'n'
   478   006FCB  61                 	db	97	;'a'
   479   006FCC  20                 	db	32
   480   006FCD  65                 	db	101	;'e'
   481   006FCE  73                 	db	115	;'s'
   482   006FCF  63                 	db	99	;'c'
   483   006FD0  72                 	db	114	;'r'
   484   006FD1  69                 	db	105	;'i'
   485   006FD2  74                 	db	116	;'t'
   486   006FD3  61                 	db	97	;'a'
   487   006FD4  3A                 	db	58	;':'
   488   006FD5  20                 	db	32
   489   006FD6  25                 	db	37
   490   006FD7  73                 	db	115	;'s'
   491   006FD8  0D                 	db	13
   492   006FD9  0A                 	db	10
   493   006FDA  00                 	db	0
   494   006FDB                     STR_5:
   495   006FDB  45                 	db	69	;'E'
   496   006FDC  72                 	db	114	;'r'
   497   006FDD  72                 	db	114	;'r'
   498   006FDE  6F                 	db	111	;'o'
   499   006FDF  3A                 	db	58	;':'
   500   006FE0  20                 	db	32
   501   006FE1  4F                 	db	79	;'O'
   502   006FE2  72                 	db	114	;'r'
   503   006FE3  69                 	db	105	;'i'
   504   006FE4  67                 	db	103	;'g'
   505   006FE5  65                 	db	101	;'e'
   506   006FE6  6D                 	db	109	;'m'
   507   006FE7  20                 	db	32
   508   006FE8  69                 	db	105	;'i'
   509   006FE9  6E                 	db	110	;'n'
   510   006FEA  76                 	db	118	;'v'
   511   006FEB  61                 	db	97	;'a'
   512   006FEC  6C                 	db	108	;'l'
   513   006FED  69                 	db	105	;'i'
   514   006FEE  64                 	db	100	;'d'
   515   006FEF  61                 	db	97	;'a'
   516   006FF0  0D                 	db	13
   517   006FF1  0A                 	db	10
   518   006FF2  00                 	db	0
   519   006FF3                     STR_13:
   520   006FF3  45                 	db	69	;'E'
   521   006FF4  52                 	db	82	;'R'
   522   006FF5  52                 	db	82	;'R'
   523   006FF6  4F                 	db	79	;'O'
   524   006FF7  52                 	db	82	;'R'
   525   006FF8  00                 	db	0
   526   006FF9                     STR_8:
   527   006FF9  31                 	db	49	;'1'
   528   006FFA  32                 	db	50	;'2'
   529   006FFB  33                 	db	51	;'3'
   530   006FFC  34                 	db	52	;'4'
   531   006FFD  00                 	db	0
   532   006FFE  00                 	db	0	; dummy byte at the end
   533   000000                     
   534                           ; #config settings
   535                           
   536                           	psect	cinit
   537   0061B8                     __pcinit:
   538                           	callstack 0
   539   0061B8                     start_initialization:
   540                           	callstack 0
   541   0061B8                     __initialization:
   542                           	callstack 0
   543                           
   544                           ; Initialize objects allocated to COMRAM (4 bytes)
   545                           ; load TBLPTR registers with __pidataCOMRAM
   546   0061B8  0EBA               	movlw	low __pidataCOMRAM
   547   0061BA  6EF6               	movwf	tblptrl,c
   548   0061BC  0E60               	movlw	high __pidataCOMRAM
   549   0061BE  6EF7               	movwf	tblptrh,c
   550   0061C0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   551   0061C2  6EF8               	movwf	tblptru,c
   552   0061C4  EE00  F064         	lfsr	0,__pdataCOMRAM
   553   0061C8  EE10 F004          	lfsr	1,4
   554   0061CC                     copy_data0:
   555   0061CC  0009               	tblrd		*+
   556   0061CE  CFF5 FFEE          	movff	tablat,postinc0
   557   0061D2  50E5               	movf	postdec1,w,c
   558   0061D4  50E1               	movf	fsr1l,w,c
   559   0061D6  E1FA               	bnz	copy_data0
   560                           
   561                           ; Clear objects allocated to COMRAM (39 bytes)
   562   0061D8  EE00  F03D         	lfsr	0,__pbssCOMRAM
   563   0061DC  0E27               	movlw	39
   564   0061DE                     clear_0:
   565   0061DE  6AEE               	clrf	postinc0,c
   566   0061E0  06E8               	decf	wreg,f,c
   567   0061E2  E1FD               	bnz	clear_0
   568   0061E4                     end_of_initialization:
   569                           	callstack 0
   570   0061E4                     __end_of__initialization:
   571                           	callstack 0
   572   0061E4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   573   0061E6  6EF8               	movwf	tblptru,c
   574   0061E8  0100               	movlb	0
   575   0061EA  EFAF  F034         	goto	_main	;jump to C main() function
   576                           
   577                           	psect	bssCOMRAM
   578   00003D                     __pbssCOMRAM:
   579                           	callstack 0
   580   00003D                     _dbuf:
   581                           	callstack 0
   582   00003D                     	ds	32
   583   00005D                     _width:
   584                           	callstack 0
   585   00005D                     	ds	2
   586   00005F                     _prec:
   587                           	callstack 0
   588   00005F                     	ds	2
   589   000061                     _current_pointer:
   590                           	callstack 0
   591   000061                     	ds	2
   592   000063                     _flags:
   593                           	callstack 0
   594   000063                     	ds	1
   595                           
   596                           	psect	dataCOMRAM
   597   000064                     __pdataCOMRAM:
   598                           	callstack 0
   599   000064                     display_sequence@F2951:
   600                           	callstack 0
   601   000064                     	ds	4
   602                           
   603                           	psect	cstackBANK0
   604   000080                     __pcstackBANK0:
   605                           	callstack 0
   606   000080                     main@read_buffer:
   607                           	callstack 0
   608                           
   609                           ; 100 bytes @ 0x0
   610   000080                     	ds	100
   611   0000E4                     main@error_message:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x64
   615   0000E4                     	ds	2
   616   0000E6                     main@erro_mem:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x66
   620   0000E6                     	ds	2
   621   0000E8                     main@message:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x68
   625   0000E8                     	ds	2
   626   0000EA                     main@message_length:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x6A
   630   0000EA                     	ds	2
   631                           
   632                           	psect	cstackCOMRAM
   633   000001                     __pcstackCOMRAM:
   634                           	callstack 0
   635   000001                     ?_count_characters:
   636                           	callstack 0
   637   000001                     ?___lwdiv:
   638                           	callstack 0
   639   000001                     ?___lwmod:
   640                           	callstack 0
   641   000001                     putch@byte:
   642                           	callstack 0
   643   000001                     I2C_TRANSMITE@DADO_I2C:
   644                           	callstack 0
   645   000001                     I2C_RECEBE@x:
   646                           	callstack 0
   647   000001                     count_characters@message:
   648                           	callstack 0
   649   000001                     display_sequence@sequence:
   650                           	callstack 0
   651   000001                     ___lwdiv@dividend:
   652                           	callstack 0
   653   000001                     ___lwmod@dividend:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x0
   657   000001                     	ds	1
   658   000002                     fputc@c:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x1
   662   000002                     	ds	1
   663   000003                     ??_count_characters:
   664   000003                     display_sequence@length:
   665                           	callstack 0
   666   000003                     ___lwdiv@divisor:
   667                           	callstack 0
   668   000003                     ___lwmod@divisor:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x2
   672   000003                     	ds	1
   673   000004                     ??_display_sequence:
   674   000004                     fputc@fp:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x3
   678   000004                     	ds	1
   679   000005                     ___lwmod@counter:
   680                           	callstack 0
   681   000005                     count_characters@count:
   682                           	callstack 0
   683   000005                     ___lwdiv@quotient:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x4
   687   000005                     	ds	1
   688   000006                     ??_fputc:
   689                           
   690                           ; 1 bytes @ 0x5
   691   000006                     	ds	1
   692   000007                     ___lwdiv@counter:
   693                           	callstack 0
   694   000007                     count_characters@i:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x6
   698   000007                     	ds	2
   699   000009                     display_sequence@digits:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0x8
   703   000009                     	ds	2
   704   00000B                     vfpfcnvrt@fp:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0xA
   708   00000B                     	ds	2
   709   00000D                     display_sequence@refresh:
   710                           	callstack 0
   711   00000D                     vfpfcnvrt@fmt:
   712                           	callstack 0
   713                           
   714                           ; 1 bytes @ 0xC
   715   00000D                     	ds	1
   716   00000E                     display_sequence@i:
   717                           	callstack 0
   718   00000E                     vfpfcnvrt@ap:
   719                           	callstack 0
   720                           
   721                           ; 1 bytes @ 0xD
   722   00000E                     	ds	1
   723   00000F                     ??_vfpfcnvrt:
   724   00000F                     display_sequence@j_470:
   725                           	callstack 0
   726                           
   727                           ; 1 bytes @ 0xE
   728   00000F                     	ds	1
   729   000010                     display_sequence@ch:
   730                           	callstack 0
   731                           
   732                           ; 1 bytes @ 0xF
   733   000010                     	ds	1
   734   000011                     display_sequence@j:
   735                           	callstack 0
   736   000011                     vfpfcnvrt@done:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x10
   740   000011                     	ds	1
   741   000012                     vfpfcnvrt@cp_1219:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x11
   745   000012                     	ds	2
   746   000014                     vfpfcnvrt@cp:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x13
   750   000014                     	ds	2
   751   000016                     vfpfcnvrt@convarg:
   752                           	callstack 0
   753                           
   754                           ; 4 bytes @ 0x15
   755   000016                     	ds	4
   756   00001A                     vfpfcnvrt@c:
   757                           	callstack 0
   758                           
   759                           ; 1 bytes @ 0x19
   760   00001A                     	ds	1
   761   00001B                     ?_vfprintf:
   762                           	callstack 0
   763   00001B                     vfprintf@fp:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0x1A
   767   00001B                     	ds	2
   768   00001D                     vfprintf@fmt:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x1C
   772   00001D                     	ds	2
   773   00001F                     vfprintf@ap:
   774                           	callstack 0
   775                           
   776                           ; 1 bytes @ 0x1E
   777   00001F                     	ds	1
   778   000020                     vfprintf@cfmt:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x1F
   782   000020                     	ds	2
   783   000022                     ?_printf:
   784                           	callstack 0
   785   000022                     printf@fmt:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x21
   789   000022                     	ds	8
   790   00002A                     printf@ap:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0x29
   794   00002A                     	ds	1
   795   00002B                     i2c_write@address:
   796                           	callstack 0
   797   00002B                     i2c_read@address:
   798                           	callstack 0
   799   00002B                     serial_memory_seek@offset:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x2A
   803   00002B                     	ds	2
   804   00002D                     i2c_read@data:
   805                           	callstack 0
   806   00002D                     serial_memory_seek@origin:
   807                           	callstack 0
   808   00002D                     i2c_write@data:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x2C
   812   00002D                     	ds	1
   813   00002E                     i2c_read@length:
   814                           	callstack 0
   815   00002E                     serial_memory_seek@new_pointer:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x2D
   819   00002E                     	ds	1
   820   00002F                     i2c_write@length:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x2E
   824   00002F                     	ds	1
   825   000030                     ??_i2c_read:
   826                           
   827                           ; 1 bytes @ 0x2F
   828   000030                     	ds	1
   829   000031                     ??_i2c_write:
   830                           
   831                           ; 1 bytes @ 0x30
   832   000031                     	ds	1
   833   000032                     i2c_read@i:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x31
   837   000032                     	ds	1
   838   000033                     i2c_write@i:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x32
   842   000033                     	ds	1
   843   000034                     serial_memory_read@buffer:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0x33
   847   000034                     	ds	1
   848   000035                     serial_memory_read@num_bytes:
   849                           	callstack 0
   850   000035                     serial_memory_write@data:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x34
   854   000035                     	ds	2
   855   000037                     serial_memory_write@num_bytes:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x36
   859   000037                     	ds	2
   860   000039                     ??_serial_memory_write:
   861                           
   862                           ; 1 bytes @ 0x38
   863   000039                     	ds	2
   864   00003B                     ??_main:
   865                           
   866                           ; 1 bytes @ 0x3A
   867   00003B                     	ds	2
   868                           
   869 ;;
   870 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   871 ;;
   872 ;; *************** function _main *****************
   873 ;; Defined at:
   874 ;;		line 248 in file "main.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;  error_messag    2  100[BANK0 ] PTR const unsigned char 
   879 ;;		 -> STR_13(6), 
   880 ;;  read_buffer   100    0[BANK0 ] unsigned char [100]
   881 ;;  message_leng    2  106[BANK0 ] int 
   882 ;;  message         2  104[BANK0 ] PTR const unsigned char 
   883 ;;		 -> STR_8(5), 
   884 ;;  erro_mem        2  102[BANK0 ] int 
   885 ;; Return value:  Size  Location     Type
   886 ;;                  2  140[None  ] int 
   887 ;; Registers used:
   888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   894 ;;      Params:         0       0       0       0       0       0       0
   895 ;;      Locals:         0     108       0       0       0       0       0
   896 ;;      Temps:          2       0       0       0       0       0       0
   897 ;;      Totals:         2     108       0       0       0       0       0
   898 ;;Total ram usage:      110 bytes
   899 ;; Hardware stack levels required when called: 7
   900 ;; This function calls:
   901 ;;		_I2C_INICIA
   902 ;;		_count_characters
   903 ;;		_display_sequence
   904 ;;		_init
   905 ;;		_initUART
   906 ;;		_printf
   907 ;;		_serial_memory_read
   908 ;;		_serial_memory_seek
   909 ;;		_serial_memory_write
   910 ;; This function is called by:
   911 ;;		Startup code after reset
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text0
   916   00695E                     __ptext0:
   917                           	callstack 0
   918   00695E                     _main:
   919                           	callstack 24
   920   00695E                     
   921                           ;main.c: 249:         printf("Sucesso na escrita: %s\r\n", message);
   922   00695E  ECAE  F030         	call	_initUART	;wreg free
   923                           
   924                           ;main.c: 250:     } else {
   925   006962  EC5F  F030         	call	_I2C_INICIA	;wreg free
   926                           
   927                           ;main.c: 251:         erro_mem = 1;
   928   006966  ECA1  F030         	call	_init	;wreg free
   929   00696A                     
   930                           ;main.c: 252:     }
   931   00696A  0E00               	movlw	0
   932   00696C  0100               	movlb	0	; () banked
   933   00696E  6FE7               	movwf	(main@erro_mem+1)& (0+255),b
   934   006970  0E00               	movlw	0
   935   006972  6FE6               	movwf	main@erro_mem& (0+255),b
   936   006974                     
   937                           ; BSR set to: 0
   938                           ;main.c: 254: 
   939   006974  0EF9               	movlw	low STR_8
   940   006976  6FE8               	movwf	main@message& (0+255),b
   941   006978  0E6F               	movlw	high STR_8
   942   00697A  6FE9               	movwf	(main@message+1)& (0+255),b
   943   00697C                     
   944                           ; BSR set to: 0
   945                           ;main.c: 256:         printf("Sucesso no reposicionamento do ponteiro\r\n");
   946   00697C  C0E8  F001         	movff	main@message,count_characters@message
   947   006980  C0E9  F002         	movff	main@message+1,count_characters@message+1
   948   006984  EC3A  F031         	call	_count_characters	;wreg free
   949   006988  C001  F0EA         	movff	?_count_characters,main@message_length
   950   00698C  C002  F0EB         	movff	?_count_characters+1,main@message_length+1
   951   006990                     
   952                           ;main.c: 258:         erro_mem = 1;
   953   006990  0E01               	movlw	1
   954   006992  0100               	movlb	0	; () banked
   955   006994  25EA               	addwf	main@message_length& (0+255),w,b
   956   006996  6E3B               	movwf	??_main^0,c
   957   006998  0E00               	movlw	0
   958   00699A  21EB               	addwfc	(main@message_length+1)& (0+255),w,b
   959   00699C  6E3C               	movwf	(??_main+1)^0,c
   960   00699E  BE3C               	btfsc	(??_main+1)^0,7,c
   961   0069A0  EFDB  F034         	goto	u1311
   962   0069A4  503C               	movf	(??_main+1)^0,w,c
   963   0069A6  E109               	bnz	u1310
   964   0069A8  0E65               	movlw	101
   965   0069AA  5C3B               	subwf	??_main^0,w,c
   966   0069AC  A0D8               	btfss	status,0,c
   967   0069AE  EFDB  F034         	goto	u1311
   968   0069B2  EFDD  F034         	goto	u1310
   969   0069B6                     u1311:
   970   0069B6  EFE8  F034         	goto	l1913
   971   0069BA                     u1310:
   972   0069BA                     
   973                           ; BSR set to: 0
   974                           ;main.c: 260: 
   975   0069BA  0E8C               	movlw	low STR_9
   976   0069BC  6E22               	movwf	printf@fmt^0,c
   977   0069BE  0E6F               	movlw	high STR_9
   978   0069C0  6E23               	movwf	(printf@fmt+1)^0,c
   979   0069C2  ECBB  F030         	call	_printf	;wreg free
   980   0069C6                     
   981                           ;main.c: 261: 
   982   0069C6  0E00               	movlw	0
   983   0069C8  0100               	movlb	0	; () banked
   984   0069CA  6FE7               	movwf	(main@erro_mem+1)& (0+255),b
   985   0069CC  0E01               	movlw	1
   986   0069CE  6FE6               	movwf	main@erro_mem& (0+255),b
   987   0069D0                     l1913:
   988                           
   989                           ; BSR set to: 0
   990                           ;main.c: 265:     } else {;main.c: 267:     }
   991   0069D0  C0E8  F035         	movff	main@message,serial_memory_write@data
   992   0069D4  C0E9  F036         	movff	main@message+1,serial_memory_write@data+1
   993   0069D8  C0EA  F037         	movff	main@message_length,serial_memory_write@num_bytes
   994   0069DC  C0EB  F038         	movff	main@message_length+1,serial_memory_write@num_bytes+1
   995   0069E0  EC8A  F031         	call	_serial_memory_write	;wreg free
   996   0069E4  0900               	iorlw	0
   997   0069E6  A4D8               	btfss	status,2,c
   998   0069E8  EFF8  F034         	goto	u1321
   999   0069EC  EFFA  F034         	goto	u1320
  1000   0069F0                     u1321:
  1001   0069F0  EF06  F035         	goto	l1917
  1002   0069F4                     u1320:
  1003   0069F4                     
  1004                           ;main.c: 268: 
  1005   0069F4  0EC2               	movlw	low STR_10
  1006   0069F6  6E22               	movwf	printf@fmt^0,c
  1007   0069F8  0E6F               	movlw	high STR_10
  1008   0069FA  6E23               	movwf	(printf@fmt+1)^0,c
  1009   0069FC  C0E8  F024         	movff	main@message,?_printf+2
  1010   006A00  C0E9  F025         	movff	main@message+1,?_printf+3
  1011   006A04  ECBB  F030         	call	_printf	;wreg free
  1012                           
  1013                           ;main.c: 269:    while (1){
  1014   006A08  EF0B  F035         	goto	l1919
  1015   006A0C                     l1917:
  1016                           
  1017                           ;main.c: 270:        if (erro_mem){
  1018   006A0C  0E00               	movlw	0
  1019   006A0E  0100               	movlb	0	; () banked
  1020   006A10  6FE7               	movwf	(main@erro_mem+1)& (0+255),b
  1021   006A12  0E01               	movlw	1
  1022   006A14  6FE6               	movwf	main@erro_mem& (0+255),b
  1023   006A16                     l1919:
  1024                           
  1025                           ;main.c: 274:         if (PORTBbits.RB0 == 0) {
  1026   006A16  0E00               	movlw	0
  1027   006A18  6E2C               	movwf	(serial_memory_seek@offset+1)^0,c
  1028   006A1A  0E00               	movlw	0
  1029   006A1C  6E2B               	movwf	serial_memory_seek@offset^0,c
  1030   006A1E  0E00               	movlw	0
  1031   006A20  6E2D               	movwf	serial_memory_seek@origin^0,c
  1032   006A22  EC1F  F032         	call	_serial_memory_seek	;wreg free
  1033   006A26  0900               	iorlw	0
  1034   006A28  A4D8               	btfss	status,2,c
  1035   006A2A  EF19  F035         	goto	u1331
  1036   006A2E  EF1B  F035         	goto	u1330
  1037   006A32                     u1331:
  1038   006A32  EF23  F035         	goto	l1923
  1039   006A36                     u1330:
  1040   006A36                     
  1041                           ;main.c: 275:             _delay((unsigned long)((50)*(16000000/4000.0)));
  1042   006A36  0E18               	movlw	low STR_11
  1043   006A38  6E22               	movwf	printf@fmt^0,c
  1044   006A3A  0E6F               	movlw	high STR_11
  1045   006A3C  6E23               	movwf	(printf@fmt+1)^0,c
  1046   006A3E  ECBB  F030         	call	_printf	;wreg free
  1047                           
  1048                           ;main.c: 276:             if (PORTBbits.RB0 == 0) {
  1049   006A42  EF28  F035         	goto	l1925
  1050   006A46                     l1923:
  1051                           
  1052                           ;main.c: 277: 
  1053   006A46  0E00               	movlw	0
  1054   006A48  0100               	movlb	0	; () banked
  1055   006A4A  6FE7               	movwf	(main@erro_mem+1)& (0+255),b
  1056   006A4C  0E01               	movlw	1
  1057   006A4E  6FE6               	movwf	main@erro_mem& (0+255),b
  1058   006A50                     l1925:
  1059                           
  1060                           ;main.c: 281:         }
  1061   006A50  0E80               	movlw	low main@read_buffer
  1062   006A52  6E34               	movwf	serial_memory_read@buffer^0,c
  1063   006A54  0E00               	movlw	0
  1064   006A56  6E36               	movwf	(serial_memory_read@num_bytes+1)^0,c
  1065   006A58  0E64               	movlw	100
  1066   006A5A  6E35               	movwf	serial_memory_read@num_bytes^0,c
  1067   006A5C  ECF7  F030         	call	_serial_memory_read	;wreg free
  1068   006A60  0900               	iorlw	0
  1069   006A62  A4D8               	btfss	status,2,c
  1070   006A64  EF36  F035         	goto	u1341
  1071   006A68  EF38  F035         	goto	u1340
  1072   006A6C                     u1341:
  1073   006A6C  EF49  F035         	goto	l1931
  1074   006A70                     u1340:
  1075   006A70                     
  1076                           ;main.c: 282:         if (PORTBbits.RB1 == 0) {
  1077   006A70  0100               	movlb	0	; () banked
  1078   006A72  51EA               	movf	main@message_length& (0+255),w,b
  1079   006A74  0F80               	addlw	low main@read_buffer
  1080   006A76  6ED9               	movwf	fsr2l,c
  1081   006A78  6ADA               	clrf	fsr2h,c
  1082   006A7A  6ADF               	clrf	indf2,c
  1083   006A7C                     
  1084                           ; BSR set to: 0
  1085                           ;main.c: 283:             _delay((unsigned long)((50)*(16000000/4000.0)));
  1086   006A7C  0EA9               	movlw	low STR_12
  1087   006A7E  6E22               	movwf	printf@fmt^0,c
  1088   006A80  0E6F               	movlw	high STR_12
  1089   006A82  6E23               	movwf	(printf@fmt+1)^0,c
  1090   006A84  0E80               	movlw	low main@read_buffer
  1091   006A86  6E24               	movwf	(?_printf+2)^0,c
  1092   006A88  6A25               	clrf	(?_printf+3)^0,c
  1093   006A8A  ECBB  F030         	call	_printf	;wreg free
  1094                           
  1095                           ;main.c: 284:             if (PORTBbits.RB1 == 0) {
  1096   006A8E  EF4E  F035         	goto	l1933
  1097   006A92                     l1931:
  1098                           
  1099                           ;main.c: 285: 
  1100   006A92  0E00               	movlw	0
  1101   006A94  0100               	movlb	0	; () banked
  1102   006A96  6FE7               	movwf	(main@erro_mem+1)& (0+255),b
  1103   006A98  0E01               	movlw	1
  1104   006A9A  6FE6               	movwf	main@erro_mem& (0+255),b
  1105   006A9C                     l1933:
  1106                           
  1107                           ;main.c: 289:         }
  1108   006A9C  0100               	movlb	0	; () banked
  1109   006A9E  51E6               	movf	main@erro_mem& (0+255),w,b
  1110   006AA0  11E7               	iorwf	(main@erro_mem+1)& (0+255),w,b
  1111   006AA2  B4D8               	btfsc	status,2,c
  1112   006AA4  EF56  F035         	goto	u1351
  1113   006AA8  EF58  F035         	goto	u1350
  1114   006AAC                     u1351:
  1115   006AAC  EF64  F035         	goto	l1939
  1116   006AB0                     u1350:
  1117   006AB0                     
  1118                           ; BSR set to: 0
  1119                           ;main.c: 290:    }
  1120   006AB0  0EF3               	movlw	low STR_13
  1121   006AB2  6FE4               	movwf	main@error_message& (0+255),b
  1122   006AB4  0E6F               	movlw	high STR_13
  1123   006AB6  6FE5               	movwf	(main@error_message+1)& (0+255),b
  1124   006AB8                     
  1125                           ; BSR set to: 0
  1126                           ;main.c: 291:     return 0;
  1127   006AB8  C0E4  F001         	movff	main@error_message,display_sequence@sequence
  1128   006ABC  C0E5  F002         	movff	main@error_message+1,display_sequence@sequence+1
  1129   006AC0  0E05               	movlw	5
  1130   006AC2  6E03               	movwf	display_sequence@length^0,c
  1131   006AC4  ECB3  F033         	call	_display_sequence	;wreg free
  1132   006AC8                     l1939:
  1133   006AC8  B081               	btfsc	129,0,c	;volatile
  1134   006ACA  EF69  F035         	goto	u1361
  1135   006ACE  EF6B  F035         	goto	u1360
  1136   006AD2                     u1361:
  1137   006AD2  EF8D  F035         	goto	l150
  1138   006AD6                     u1360:
  1139   006AD6  0E02               	movlw	2
  1140   006AD8  6E3C               	movwf	(??_main+1)^0,c
  1141   006ADA  0E04               	movlw	4
  1142   006ADC  6E3B               	movwf	??_main^0,c
  1143   006ADE  0EBA               	movlw	186
  1144   006AE0                     u1447:
  1145   006AE0  2EE8               	decfsz	wreg,f,c
  1146   006AE2  D7FE               	bra	u1447
  1147   006AE4  2E3B               	decfsz	??_main^0,f,c
  1148   006AE6  D7FC               	bra	u1447
  1149   006AE8  2E3C               	decfsz	(??_main+1)^0,f,c
  1150   006AEA  D7FA               	bra	u1447
  1151   006AEC  D000               	nop2	
  1152   006AEE  B081               	btfsc	129,0,c	;volatile
  1153   006AF0  EF7C  F035         	goto	u1371
  1154   006AF4  EF7E  F035         	goto	u1370
  1155   006AF8                     u1371:
  1156   006AF8  EF8D  F035         	goto	l150
  1157   006AFC                     u1370:
  1158   006AFC  C0E8  F001         	movff	main@message,display_sequence@sequence
  1159   006B00  C0E9  F002         	movff	main@message+1,display_sequence@sequence+1
  1160   006B04  C0EA  F003         	movff	main@message_length,display_sequence@length
  1161   006B08  ECB3  F033         	call	_display_sequence	;wreg free
  1162   006B0C                     l152:
  1163   006B0C  A081               	btfss	129,0,c	;volatile
  1164   006B0E  EF8B  F035         	goto	u1381
  1165   006B12  EF8D  F035         	goto	u1380
  1166   006B16                     u1381:
  1167   006B16  EF86  F035         	goto	l152
  1168   006B1A                     u1380:
  1169   006B1A                     l150:
  1170   006B1A  B281               	btfsc	129,1,c	;volatile
  1171   006B1C  EF92  F035         	goto	u1391
  1172   006B20  EF94  F035         	goto	u1390
  1173   006B24                     u1391:
  1174   006B24  EF4E  F035         	goto	l1933
  1175   006B28                     u1390:
  1176   006B28  0E02               	movlw	2
  1177   006B2A  6E3C               	movwf	(??_main+1)^0,c
  1178   006B2C  0E04               	movlw	4
  1179   006B2E  6E3B               	movwf	??_main^0,c
  1180   006B30  0EBA               	movlw	186
  1181   006B32                     u1457:
  1182   006B32  2EE8               	decfsz	wreg,f,c
  1183   006B34  D7FE               	bra	u1457
  1184   006B36  2E3B               	decfsz	??_main^0,f,c
  1185   006B38  D7FC               	bra	u1457
  1186   006B3A  2E3C               	decfsz	(??_main+1)^0,f,c
  1187   006B3C  D7FA               	bra	u1457
  1188   006B3E  D000               	nop2	
  1189   006B40  B281               	btfsc	129,1,c	;volatile
  1190   006B42  EFA5  F035         	goto	u1401
  1191   006B46  EFA7  F035         	goto	u1400
  1192   006B4A                     u1401:
  1193   006B4A  EF4E  F035         	goto	l1933
  1194   006B4E                     u1400:
  1195   006B4E  0E80               	movlw	low main@read_buffer
  1196   006B50  6E01               	movwf	display_sequence@sequence^0,c
  1197   006B52  6A02               	clrf	(display_sequence@sequence+1)^0,c
  1198   006B54  C0EA  F003         	movff	main@message_length,display_sequence@length
  1199   006B58  ECB3  F033         	call	_display_sequence	;wreg free
  1200   006B5C                     l157:
  1201   006B5C  A281               	btfss	129,1,c	;volatile
  1202   006B5E  EFB3  F035         	goto	u1411
  1203   006B62  EFB5  F035         	goto	u1410
  1204   006B66                     u1411:
  1205   006B66  EFAE  F035         	goto	l157
  1206   006B6A                     u1410:
  1207   006B6A  EF4E  F035         	goto	l1933
  1208   006B6E  EF00  F000         	goto	start
  1209   006B72                     __end_of_main:
  1210                           	callstack 0
  1211                           
  1212 ;; *************** function _serial_memory_write *****************
  1213 ;; Defined at:
  1214 ;;		line 132 in file "main.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  data            2   52[COMRAM] PTR const unsigned char 
  1217 ;;		 -> STR_8(5), 
  1218 ;;  num_bytes       2   54[COMRAM] unsigned short 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      unsigned char 
  1223 ;; Registers used:
  1224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1230 ;;      Params:         4       0       0       0       0       0       0
  1231 ;;      Locals:         0       0       0       0       0       0       0
  1232 ;;      Temps:          2       0       0       0       0       0       0
  1233 ;;      Totals:         6       0       0       0       0       0       0
  1234 ;;Total ram usage:        6 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; Hardware stack levels required when called: 6
  1237 ;; This function calls:
  1238 ;;		_i2c_write
  1239 ;;		_printf
  1240 ;; This function is called by:
  1241 ;;		_main
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text1
  1246   006314                     __ptext1:
  1247                           	callstack 0
  1248   006314                     _serial_memory_write:
  1249                           	callstack 24
  1250   006314                     
  1251                           ;main.c: 133:     switch (origin) {
  1252   006314  5037               	movf	serial_memory_write@num_bytes^0,w,c
  1253   006316  2461               	addwf	_current_pointer^0,w,c
  1254   006318  6E39               	movwf	??_serial_memory_write^0,c
  1255   00631A  5038               	movf	(serial_memory_write@num_bytes+1)^0,w,c
  1256   00631C  2062               	addwfc	(_current_pointer+1)^0,w,c
  1257   00631E  6E3A               	movwf	(??_serial_memory_write+1)^0,c
  1258   006320  0439               	decf	??_serial_memory_write^0,w,c
  1259   006322  0E80               	movlw	128
  1260   006324  583A               	subwfb	(??_serial_memory_write+1)^0,w,c
  1261   006326  A0D8               	btfss	status,0,c
  1262   006328  EF98  F031         	goto	u1151
  1263   00632C  EF9A  F031         	goto	u1150
  1264   006330                     u1151:
  1265   006330  EFA3  F031         	goto	l1777
  1266   006334                     u1150:
  1267   006334                     
  1268                           ;main.c: 134:         case 0:
  1269   006334  0E78               	movlw	low STR_4
  1270   006336  6E22               	movwf	printf@fmt^0,c
  1271   006338  0E6E               	movlw	high STR_4
  1272   00633A  6E23               	movwf	(printf@fmt+1)^0,c
  1273   00633C  ECBB  F030         	call	_printf	;wreg free
  1274   006340                     
  1275                           ;main.c: 135:             new_pointer = (uint16_t)offset;
  1276   006340  0EFF               	movlw	255
  1277   006342  EFB2  F031         	goto	l85
  1278   006346                     l1777:
  1279                           
  1280                           ;main.c: 138:             new_pointer = (uint16_t)(current_pointer) + (uint16_t)(offset)
      +                          ;
  1281   006346  C061  F02B         	movff	_current_pointer,i2c_write@address
  1282   00634A  C062  F02C         	movff	_current_pointer+1,i2c_write@address+1
  1283   00634E  C035  F02D         	movff	serial_memory_write@data,i2c_write@data
  1284   006352  C036  F02E         	movff	serial_memory_write@data+1,i2c_write@data+1
  1285   006356  C037  F02F         	movff	serial_memory_write@num_bytes,i2c_write@length
  1286   00635A  C038  F030         	movff	serial_memory_write@num_bytes+1,i2c_write@length+1
  1287   00635E  EC44  F033         	call	_i2c_write	;wreg free
  1288   006362                     
  1289                           ;main.c: 140:         case 2:
  1290   006362  0E00               	movlw	0
  1291   006364                     l85:
  1292   006364  0012               	return		;funcret
  1293   006366                     __end_of_serial_memory_write:
  1294                           	callstack 0
  1295                           
  1296 ;; *************** function _i2c_write *****************
  1297 ;; Defined at:
  1298 ;;		line 75 in file "main.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;  address         2   42[COMRAM] unsigned short 
  1301 ;;  data            2   44[COMRAM] PTR const unsigned char 
  1302 ;;		 -> STR_8(5), 
  1303 ;;  length          2   46[COMRAM] unsigned short 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  i               2   50[COMRAM] unsigned short 
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      void 
  1308 ;; Registers used:
  1309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1315 ;;      Params:         6       0       0       0       0       0       0
  1316 ;;      Locals:         2       0       0       0       0       0       0
  1317 ;;      Temps:          2       0       0       0       0       0       0
  1318 ;;      Totals:        10       0       0       0       0       0       0
  1319 ;;Total ram usage:       10 bytes
  1320 ;; Hardware stack levels used: 1
  1321 ;; Hardware stack levels required when called: 5
  1322 ;; This function calls:
  1323 ;;		_I2C_START
  1324 ;;		_I2C_STOP
  1325 ;;		_I2C_TRANSMITE
  1326 ;;		_printf
  1327 ;; This function is called by:
  1328 ;;		_serial_memory_write
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text2
  1333   006688                     __ptext2:
  1334                           	callstack 0
  1335   006688                     _i2c_write:
  1336                           	callstack 24
  1337   006688                     
  1338                           ;main.c: 76:     for (uint16_t i = 0; i < length; i++) {
  1339   006688  0E00               	movlw	0
  1340   00668A  6E34               	movwf	(i2c_write@i+1)^0,c
  1341   00668C  0E00               	movlw	0
  1342   00668E  6E33               	movwf	i2c_write@i^0,c
  1343   006690  EFA7  F033         	goto	l1705
  1344   006694                     l1681:
  1345                           
  1346                           ;main.c: 77:         I2C_START();
  1347   006694  EC70  F030         	call	_I2C_START	;wreg free
  1348   006698                     
  1349                           ;main.c: 78:         I2C_TRANSMITE(0xA0);
  1350   006698  0EA0               	movlw	160
  1351   00669A  ECCA  F030         	call	_I2C_TRANSMITE
  1352   00669E                     
  1353                           ;main.c: 79:         I2C_TRANSMITE((address >> 8) & 0xFF);
  1354   00669E  502C               	movf	(i2c_write@address+1)^0,w,c
  1355   0066A0  ECCA  F030         	call	_I2C_TRANSMITE
  1356   0066A4                     
  1357                           ;main.c: 80:         I2C_TRANSMITE(address & 0xFF);
  1358   0066A4  502B               	movf	i2c_write@address^0,w,c
  1359   0066A6  ECCA  F030         	call	_I2C_TRANSMITE
  1360   0066AA                     
  1361                           ;main.c: 81:         I2C_RESTART();
  1362   0066AA  5033               	movf	i2c_write@i^0,w,c
  1363   0066AC  242D               	addwf	i2c_write@data^0,w,c
  1364   0066AE  6E31               	movwf	??_i2c_write^0,c
  1365   0066B0  5034               	movf	(i2c_write@i+1)^0,w,c
  1366   0066B2  202E               	addwfc	(i2c_write@data+1)^0,w,c
  1367   0066B4  6E32               	movwf	(??_i2c_write+1)^0,c
  1368   0066B6  C031  FFF6         	movff	??_i2c_write,tblptrl
  1369   0066BA  C032  FFF7         	movff	??_i2c_write+1,tblptrh
  1370   0066BE                     	if	0	;tblptru may be non-zero
  1371   0066BE                     	endif
  1372   0066BE                     	if	0	;tblptru may be non-zero
  1373   0066BE                     	endif
  1374   0066BE  0008               	tblrd		*
  1375   0066C0  50F5               	movf	tablat,w,c
  1376   0066C2  0AFF               	xorlw	255
  1377   0066C4  A4D8               	btfss	status,2,c
  1378   0066C6  EF67  F033         	goto	u1091
  1379   0066CA  EF69  F033         	goto	u1090
  1380   0066CE                     u1091:
  1381   0066CE  EF6B  F033         	goto	l1693
  1382   0066D2                     u1090:
  1383   0066D2  EFB2  F033         	goto	l68
  1384   0066D6                     l1693:
  1385                           
  1386                           ;main.c: 84:         if ((uint8_t)(data[i]) == 255 ){
  1387   0066D6  5033               	movf	i2c_write@i^0,w,c
  1388   0066D8  242D               	addwf	i2c_write@data^0,w,c
  1389   0066DA  6E31               	movwf	??_i2c_write^0,c
  1390   0066DC  5034               	movf	(i2c_write@i+1)^0,w,c
  1391   0066DE  202E               	addwfc	(i2c_write@data+1)^0,w,c
  1392   0066E0  6E32               	movwf	(??_i2c_write+1)^0,c
  1393   0066E2  C031  FFF6         	movff	??_i2c_write,tblptrl
  1394   0066E6  C032  FFF7         	movff	??_i2c_write+1,tblptrh
  1395   0066EA                     	if	0	;tblptru may be non-zero
  1396   0066EA                     	endif
  1397   0066EA                     	if	0	;tblptru may be non-zero
  1398   0066EA                     	endif
  1399   0066EA  0008               	tblrd		*
  1400   0066EC  50F5               	movf	tablat,w,c
  1401   0066EE  ECCA  F030         	call	_I2C_TRANSMITE
  1402   0066F2                     
  1403                           ;main.c: 85:             break;
  1404   0066F2  0E42               	movlw	low STR_1
  1405   0066F4  6E22               	movwf	printf@fmt^0,c
  1406   0066F6  0E6F               	movlw	high STR_1
  1407   0066F8  6E23               	movwf	(printf@fmt+1)^0,c
  1408   0066FA  C02B  F024         	movff	i2c_write@address,?_printf+2
  1409   0066FE  C02C  F025         	movff	i2c_write@address+1,?_printf+3
  1410   006702  C033  F026         	movff	i2c_write@i,?_printf+4
  1411   006706  C034  F027         	movff	i2c_write@i+1,?_printf+5
  1412   00670A  5033               	movf	i2c_write@i^0,w,c
  1413   00670C  242D               	addwf	i2c_write@data^0,w,c
  1414   00670E  6E31               	movwf	??_i2c_write^0,c
  1415   006710  5034               	movf	(i2c_write@i+1)^0,w,c
  1416   006712  202E               	addwfc	(i2c_write@data+1)^0,w,c
  1417   006714  6E32               	movwf	(??_i2c_write+1)^0,c
  1418   006716  C031  FFF6         	movff	??_i2c_write,tblptrl
  1419   00671A  C032  FFF7         	movff	??_i2c_write+1,tblptrh
  1420   00671E                     	if	0	;tblptru may be non-zero
  1421   00671E                     	endif
  1422   00671E                     	if	0	;tblptru may be non-zero
  1423   00671E                     	endif
  1424   00671E  0008               	tblrd		*
  1425   006720  50F5               	movf	tablat,w,c
  1426   006722  6E28               	movwf	(?_printf+6)^0,c
  1427   006724  6A29               	clrf	(?_printf+7)^0,c
  1428   006726  ECBB  F030         	call	_printf	;wreg free
  1429   00672A                     
  1430                           ;main.c: 86:         }
  1431   00672A  EC79  F030         	call	_I2C_STOP	;wreg free
  1432   00672E                     
  1433                           ;main.c: 87:         printf("Endereco atual: %u, Leitura [%u] = %u \r\n", address, i, (u
      +                          int8_t)(data[i]));
  1434   00672E  0E68               	movlw	104
  1435   006730  6E31               	movwf	??_i2c_write^0,c
  1436   006732  0EE4               	movlw	228
  1437   006734                     u1467:
  1438   006734  2EE8               	decfsz	wreg,f,c
  1439   006736  D7FE               	bra	u1467
  1440   006738  2E31               	decfsz	??_i2c_write^0,f,c
  1441   00673A  D7FC               	bra	u1467
  1442   00673C  D000               	nop2	
  1443   00673E                     
  1444                           ;main.c: 88:         if (i < length - 1) {
  1445   00673E  0E02               	movlw	2
  1446   006740  242B               	addwf	i2c_write@address^0,w,c
  1447   006742  6E2B               	movwf	i2c_write@address^0,c
  1448   006744  0E00               	movlw	0
  1449   006746  202C               	addwfc	(i2c_write@address+1)^0,w,c
  1450   006748  6E2C               	movwf	(i2c_write@address+1)^0,c
  1451   00674A                     
  1452                           ;main.c: 89:             I2C_ACK();
  1453   00674A  4A33               	infsnz	i2c_write@i^0,f,c
  1454   00674C  2A34               	incf	(i2c_write@i+1)^0,f,c
  1455   00674E                     l1705:
  1456   00674E  502F               	movf	i2c_write@length^0,w,c
  1457   006750  5C33               	subwf	i2c_write@i^0,w,c
  1458   006752  5030               	movf	(i2c_write@length+1)^0,w,c
  1459   006754  5834               	subwfb	(i2c_write@i+1)^0,w,c
  1460   006756  A0D8               	btfss	status,0,c
  1461   006758  EFB0  F033         	goto	u1101
  1462   00675C  EFB2  F033         	goto	u1100
  1463   006760                     u1101:
  1464   006760  EF4A  F033         	goto	l1681
  1465   006764                     u1100:
  1466   006764                     l68:
  1467   006764  0012               	return		;funcret
  1468   006766                     __end_of_i2c_write:
  1469                           	callstack 0
  1470                           
  1471 ;; *************** function _serial_memory_seek *****************
  1472 ;; Defined at:
  1473 ;;		line 149 in file "main.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;  offset          2   42[COMRAM] short 
  1476 ;;  origin          1   44[COMRAM] unsigned char 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  new_pointer     2   45[COMRAM] unsigned short 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      unsigned char 
  1481 ;; Registers used:
  1482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1488 ;;      Params:         3       0       0       0       0       0       0
  1489 ;;      Locals:         2       0       0       0       0       0       0
  1490 ;;      Temps:          0       0       0       0       0       0       0
  1491 ;;      Totals:         5       0       0       0       0       0       0
  1492 ;;Total ram usage:        5 bytes
  1493 ;; Hardware stack levels used: 1
  1494 ;; Hardware stack levels required when called: 5
  1495 ;; This function calls:
  1496 ;;		_printf
  1497 ;; This function is called by:
  1498 ;;		_main
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text3
  1503   00643E                     __ptext3:
  1504                           	callstack 0
  1505   00643E                     _serial_memory_seek:
  1506                           	callstack 25
  1507   00643E                     
  1508                           ;main.c: 150:         return (uint8_t)-1;;main.c: 152: 
  1509   00643E  EF40  F032         	goto	l1797
  1510   006442                     l89:
  1511                           
  1512                           ;main.c: 154:     current_pointer = new_pointer;
  1513   006442  C02B  F02E         	movff	serial_memory_seek@offset,serial_memory_seek@new_pointer
  1514   006446  C02C  F02F         	movff	serial_memory_seek@offset+1,serial_memory_seek@new_pointer+1
  1515                           
  1516                           ;main.c: 155:     return 0;
  1517   00644A  EF4F  F032         	goto	l1799
  1518   00644E                     l1785:
  1519                           
  1520                           ;main.c: 157: 
  1521   00644E  5061               	movf	_current_pointer^0,w,c
  1522   006450  242B               	addwf	serial_memory_seek@offset^0,w,c
  1523   006452  6E2E               	movwf	serial_memory_seek@new_pointer^0,c
  1524   006454  5062               	movf	(_current_pointer+1)^0,w,c
  1525   006456  202C               	addwfc	(serial_memory_seek@offset+1)^0,w,c
  1526   006458  6E2F               	movwf	(serial_memory_seek@new_pointer+1)^0,c
  1527                           
  1528                           ;main.c: 158: int count_characters(const char *message) {
  1529   00645A  EF4F  F032         	goto	l1799
  1530   00645E                     l1787:
  1531                           
  1532                           ;main.c: 160: 
  1533   00645E  0E00               	movlw	0
  1534   006460  242B               	addwf	serial_memory_seek@offset^0,w,c
  1535   006462  6E2E               	movwf	serial_memory_seek@new_pointer^0,c
  1536   006464  0E80               	movlw	128
  1537   006466  202C               	addwfc	(serial_memory_seek@offset+1)^0,w,c
  1538   006468  6E2F               	movwf	(serial_memory_seek@new_pointer+1)^0,c
  1539                           
  1540                           ;main.c: 161: 
  1541   00646A  EF4F  F032         	goto	l1799
  1542   00646E                     l1789:
  1543                           
  1544                           ;main.c: 163:         count++;
  1545   00646E  0EDB               	movlw	low STR_5
  1546   006470  6E22               	movwf	printf@fmt^0,c
  1547   006472  0E6F               	movlw	high STR_5
  1548   006474  6E23               	movwf	(printf@fmt+1)^0,c
  1549   006476  ECBB  F030         	call	_printf	;wreg free
  1550   00647A                     l1791:
  1551                           
  1552                           ;main.c: 164:     }
  1553   00647A  0EFF               	movlw	255
  1554   00647C  EF6F  F032         	goto	l94
  1555   006480                     l1797:
  1556   006480  502D               	movf	serial_memory_seek@origin^0,w,c
  1557                           
  1558                           ; Switch size 1, requested type "simple"
  1559                           ; Number of cases is 3, Range of values is 0 to 2
  1560                           ; switch strategies available:
  1561                           ; Name         Instructions Cycles
  1562                           ; simple_byte           10     6 (average)
  1563                           ;	Chosen strategy is simple_byte
  1564   006482  0A00               	xorlw	0	; case 0
  1565   006484  B4D8               	btfsc	status,2,c
  1566   006486  EF21  F032         	goto	l89
  1567   00648A  0A01               	xorlw	1	; case 1
  1568   00648C  B4D8               	btfsc	status,2,c
  1569   00648E  EF27  F032         	goto	l1785
  1570   006492  0A03               	xorlw	3	; case 2
  1571   006494  B4D8               	btfsc	status,2,c
  1572   006496  EF2F  F032         	goto	l1787
  1573   00649A  EF37  F032         	goto	l1789
  1574   00649E                     l1799:
  1575                           
  1576                           ;main.c: 167: }
  1577   00649E  0E80               	movlw	128
  1578   0064A0  5C2F               	subwf	(serial_memory_seek@new_pointer+1)^0,w,c
  1579   0064A2  A0D8               	btfss	status,0,c
  1580   0064A4  EF56  F032         	goto	u1161
  1581   0064A8  EF58  F032         	goto	u1160
  1582   0064AC                     u1161:
  1583   0064AC  EF60  F032         	goto	l1807
  1584   0064B0                     u1160:
  1585   0064B0                     
  1586                           ;main.c: 168: void init(void) {
  1587   0064B0  0EEB               	movlw	low STR_6
  1588   0064B2  6E22               	movwf	printf@fmt^0,c
  1589   0064B4  0E6E               	movlw	high STR_6
  1590   0064B6  6E23               	movwf	(printf@fmt+1)^0,c
  1591   0064B8  ECBB  F030         	call	_printf	;wreg free
  1592   0064BC  EF3D  F032         	goto	l1791
  1593   0064C0                     l1807:
  1594                           
  1595                           ;main.c: 172:     TRISB = 0x00;
  1596   0064C0  0E6B               	movlw	low STR_7
  1597   0064C2  6E22               	movwf	printf@fmt^0,c
  1598   0064C4  0E6F               	movlw	high STR_7
  1599   0064C6  6E23               	movwf	(printf@fmt+1)^0,c
  1600   0064C8  C02E  F024         	movff	serial_memory_seek@new_pointer,?_printf+2
  1601   0064CC  C02F  F025         	movff	serial_memory_seek@new_pointer+1,?_printf+3
  1602   0064D0  ECBB  F030         	call	_printf	;wreg free
  1603   0064D4                     
  1604                           ;main.c: 173:     LATD = 0x00;
  1605   0064D4  C02E  F061         	movff	serial_memory_seek@new_pointer,_current_pointer
  1606   0064D8  C02F  F062         	movff	serial_memory_seek@new_pointer+1,_current_pointer+1
  1607   0064DC                     
  1608                           ;main.c: 174: 
  1609   0064DC  0E00               	movlw	0
  1610   0064DE                     l94:
  1611   0064DE  0012               	return		;funcret
  1612   0064E0                     __end_of_serial_memory_seek:
  1613                           	callstack 0
  1614                           
  1615 ;; *************** function _serial_memory_read *****************
  1616 ;; Defined at:
  1617 ;;		line 118 in file "main.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  buffer          1   51[COMRAM] PTR unsigned char 
  1620 ;;		 -> main@read_buffer(100), 
  1621 ;;  num_bytes       2   52[COMRAM] unsigned short 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;		None
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      unsigned char 
  1626 ;; Registers used:
  1627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1633 ;;      Params:         3       0       0       0       0       0       0
  1634 ;;      Locals:         0       0       0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0
  1636 ;;      Totals:         3       0       0       0       0       0       0
  1637 ;;Total ram usage:        3 bytes
  1638 ;; Hardware stack levels used: 1
  1639 ;; Hardware stack levels required when called: 6
  1640 ;; This function calls:
  1641 ;;		_i2c_read
  1642 ;;		_printf
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           	psect	text4
  1649   0061EE                     __ptext4:
  1650                           	callstack 0
  1651   0061EE                     _serial_memory_read:
  1652                           	callstack 24
  1653   0061EE                     
  1654                           ;main.c: 120: 
  1655   0061EE  5035               	movf	serial_memory_read@num_bytes^0,w,c
  1656   0061F0  1036               	iorwf	(serial_memory_read@num_bytes+1)^0,w,c
  1657   0061F2  A4D8               	btfss	status,2,c
  1658   0061F4  EFFE  F030         	goto	u1141
  1659   0061F8  EF00  F031         	goto	u1140
  1660   0061FC                     u1141:
  1661   0061FC  EF09  F031         	goto	l1763
  1662   006200                     u1140:
  1663   006200                     
  1664                           ;main.c: 121:     return 0;
  1665   006200  0EB4               	movlw	low STR_3
  1666   006202  6E22               	movwf	printf@fmt^0,c
  1667   006204  0E6E               	movlw	high STR_3
  1668   006206  6E23               	movwf	(printf@fmt+1)^0,c
  1669   006208  ECBB  F030         	call	_printf	;wreg free
  1670   00620C                     
  1671                           ;main.c: 122: }
  1672   00620C  0EFF               	movlw	255
  1673   00620E  EF16  F031         	goto	l81
  1674   006212                     l1763:
  1675                           
  1676                           ;main.c: 126: 
  1677   006212  C061  F02B         	movff	_current_pointer,i2c_read@address
  1678   006216  C062  F02C         	movff	_current_pointer+1,i2c_read@address+1
  1679   00621A  C034  F02D         	movff	serial_memory_read@buffer,i2c_read@data
  1680   00621E  C035  F02E         	movff	serial_memory_read@num_bytes,i2c_read@length
  1681   006222  C036  F02F         	movff	serial_memory_read@num_bytes+1,i2c_read@length+1
  1682   006226  ECD5  F032         	call	_i2c_read	;wreg free
  1683   00622A                     
  1684                           ;main.c: 128: 
  1685   00622A  0E00               	movlw	0
  1686   00622C                     l81:
  1687   00622C  0012               	return		;funcret
  1688   00622E                     __end_of_serial_memory_read:
  1689                           	callstack 0
  1690                           
  1691 ;; *************** function _i2c_read *****************
  1692 ;; Defined at:
  1693 ;;		line 94 in file "main.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;  address         2   42[COMRAM] unsigned short 
  1696 ;;  data            1   44[COMRAM] PTR unsigned char 
  1697 ;;		 -> main@read_buffer(100), 
  1698 ;;  length          2   45[COMRAM] unsigned short 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  i               2   49[COMRAM] unsigned short 
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      void 
  1703 ;; Registers used:
  1704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1710 ;;      Params:         5       0       0       0       0       0       0
  1711 ;;      Locals:         2       0       0       0       0       0       0
  1712 ;;      Temps:          2       0       0       0       0       0       0
  1713 ;;      Totals:         9       0       0       0       0       0       0
  1714 ;;Total ram usage:        9 bytes
  1715 ;; Hardware stack levels used: 1
  1716 ;; Hardware stack levels required when called: 5
  1717 ;; This function calls:
  1718 ;;		_I2C_ACK
  1719 ;;		_I2C_NACK
  1720 ;;		_I2C_RECEBE
  1721 ;;		_I2C_RESTART
  1722 ;;		_I2C_START
  1723 ;;		_I2C_STOP
  1724 ;;		_I2C_TRANSMITE
  1725 ;;		_printf
  1726 ;; This function is called by:
  1727 ;;		_serial_memory_read
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text5
  1732   0065AA                     __ptext5:
  1733                           	callstack 0
  1734   0065AA                     _i2c_read:
  1735                           	callstack 24
  1736   0065AA                     
  1737                           ;main.c: 95:     }
  1738   0065AA  0E00               	movlw	0
  1739   0065AC  6E33               	movwf	(i2c_read@i+1)^0,c
  1740   0065AE  0E00               	movlw	0
  1741   0065B0  6E32               	movwf	i2c_read@i^0,c
  1742   0065B2  EF38  F033         	goto	l1737
  1743   0065B6                     l1709:
  1744                           
  1745                           ;main.c: 96:     return;
  1746   0065B6  EC70  F030         	call	_I2C_START	;wreg free
  1747   0065BA                     
  1748                           ;main.c: 97: }
  1749   0065BA  0EA0               	movlw	160
  1750   0065BC  ECCA  F030         	call	_I2C_TRANSMITE
  1751   0065C0                     
  1752                           ;main.c: 98: 
  1753   0065C0  502C               	movf	(i2c_read@address+1)^0,w,c
  1754   0065C2  ECCA  F030         	call	_I2C_TRANSMITE
  1755   0065C6                     
  1756                           ;main.c: 99: uint8_t serial_memory_read(uint8_t *buffer, uint16_t num_bytes) {
  1757   0065C6  502B               	movf	i2c_read@address^0,w,c
  1758   0065C8  ECCA  F030         	call	_I2C_TRANSMITE
  1759   0065CC                     
  1760                           ;main.c: 100: 
  1761   0065CC  EC67  F030         	call	_I2C_RESTART	;wreg free
  1762                           
  1763                           ;main.c: 101:     if (num_bytes <= 0) {
  1764   0065D0  0EA1               	movlw	161
  1765   0065D2  ECCA  F030         	call	_I2C_TRANSMITE
  1766   0065D6                     
  1767                           ;main.c: 102:         printf("Erro: Tentativa de ler alem da capacidade da memoria\r\n")
      +                          ;
  1768   0065D6  502D               	movf	i2c_read@data^0,w,c
  1769   0065D8  2432               	addwf	i2c_read@i^0,w,c
  1770   0065DA  6ED9               	movwf	fsr2l,c
  1771   0065DC  6ADA               	clrf	fsr2h,c
  1772   0065DE  EC61  F031         	call	_I2C_RECEBE	;wreg free
  1773   0065E2  6EDF               	movwf	indf2,c
  1774   0065E4                     
  1775                           ;main.c: 103:         return (uint8_t)-1;
  1776   0065E4  502D               	movf	i2c_read@data^0,w,c
  1777   0065E6  2432               	addwf	i2c_read@i^0,w,c
  1778   0065E8  6ED9               	movwf	fsr2l,c
  1779   0065EA  6ADA               	clrf	fsr2h,c
  1780   0065EC  28DE               	incf	postinc2,w,c
  1781   0065EE  A4D8               	btfss	status,2,c
  1782   0065F0  EFFC  F032         	goto	u1111
  1783   0065F4  EFFE  F032         	goto	u1110
  1784   0065F8                     u1111:
  1785   0065F8  EF00  F033         	goto	l1725
  1786   0065FC                     u1110:
  1787   0065FC  EF43  F033         	goto	l77
  1788   006600                     l1725:
  1789                           
  1790                           ;main.c: 106: 
  1791   006600  0E42               	movlw	low STR_1
  1792   006602  6E22               	movwf	printf@fmt^0,c
  1793   006604  0E6F               	movlw	high STR_1
  1794   006606  6E23               	movwf	(printf@fmt+1)^0,c
  1795   006608  C02B  F024         	movff	i2c_read@address,?_printf+2
  1796   00660C  C02C  F025         	movff	i2c_read@address+1,?_printf+3
  1797   006610  C032  F026         	movff	i2c_read@i,?_printf+4
  1798   006614  C033  F027         	movff	i2c_read@i+1,?_printf+5
  1799   006618  502D               	movf	i2c_read@data^0,w,c
  1800   00661A  2432               	addwf	i2c_read@i^0,w,c
  1801   00661C  6ED9               	movwf	fsr2l,c
  1802   00661E  6ADA               	clrf	fsr2h,c
  1803   006620  50DF               	movf	indf2,w,c
  1804   006622  6E30               	movwf	??_i2c_read^0,c
  1805   006624  5030               	movf	??_i2c_read^0,w,c
  1806   006626  6E28               	movwf	(?_printf+6)^0,c
  1807   006628  6A29               	clrf	(?_printf+7)^0,c
  1808   00662A  ECBB  F030         	call	_printf	;wreg free
  1809   00662E                     
  1810                           ;main.c: 107:     i2c_read(current_pointer, buffer, num_bytes);
  1811   00662E  0EFF               	movlw	255
  1812   006630  242E               	addwf	i2c_read@length^0,w,c
  1813   006632  6E30               	movwf	??_i2c_read^0,c
  1814   006634  0EFF               	movlw	255
  1815   006636  202F               	addwfc	(i2c_read@length+1)^0,w,c
  1816   006638  6E31               	movwf	(??_i2c_read+1)^0,c
  1817   00663A  5030               	movf	??_i2c_read^0,w,c
  1818   00663C  5C32               	subwf	i2c_read@i^0,w,c
  1819   00663E  5031               	movf	(??_i2c_read+1)^0,w,c
  1820   006640  5833               	subwfb	(i2c_read@i+1)^0,w,c
  1821   006642  B0D8               	btfsc	status,0,c
  1822   006644  EF26  F033         	goto	u1121
  1823   006648  EF28  F033         	goto	u1120
  1824   00664C                     u1121:
  1825   00664C  EF2C  F033         	goto	l1731
  1826   006650                     u1120:
  1827   006650                     
  1828                           ;main.c: 108: 
  1829   006650  EC82  F030         	call	_I2C_ACK	;wreg free
  1830                           
  1831                           ;main.c: 109:     return 0;
  1832   006654  EF2E  F033         	goto	l76
  1833   006658                     l1731:
  1834                           
  1835                           ;main.c: 110: }
  1836   006658  EC8C  F030         	call	_I2C_NACK	;wreg free
  1837   00665C                     l76:
  1838                           
  1839                           ;main.c: 112: 
  1840   00665C  EC79  F030         	call	_I2C_STOP	;wreg free
  1841   006660                     
  1842                           ;main.c: 113: uint8_t serial_memory_write(const uint8_t *data, uint16_t num_bytes) {
  1843   006660  0E02               	movlw	2
  1844   006662  242B               	addwf	i2c_read@address^0,w,c
  1845   006664  6E2B               	movwf	i2c_read@address^0,c
  1846   006666  0E00               	movlw	0
  1847   006668  202C               	addwfc	(i2c_read@address+1)^0,w,c
  1848   00666A  6E2C               	movwf	(i2c_read@address+1)^0,c
  1849   00666C                     
  1850                           ;main.c: 114:     if (current_pointer + num_bytes > 32768) {
  1851   00666C  4A32               	infsnz	i2c_read@i^0,f,c
  1852   00666E  2A33               	incf	(i2c_read@i+1)^0,f,c
  1853   006670                     l1737:
  1854   006670  502E               	movf	i2c_read@length^0,w,c
  1855   006672  5C32               	subwf	i2c_read@i^0,w,c
  1856   006674  502F               	movf	(i2c_read@length+1)^0,w,c
  1857   006676  5833               	subwfb	(i2c_read@i+1)^0,w,c
  1858   006678  A0D8               	btfss	status,0,c
  1859   00667A  EF41  F033         	goto	u1131
  1860   00667E  EF43  F033         	goto	u1130
  1861   006682                     u1131:
  1862   006682  EFDB  F032         	goto	l1709
  1863   006686                     u1130:
  1864   006686                     l77:
  1865   006686  0012               	return		;funcret
  1866   006688                     __end_of_i2c_read:
  1867                           	callstack 0
  1868                           
  1869 ;; *************** function _printf *****************
  1870 ;; Defined at:
  1871 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  fmt             2   33[COMRAM] PTR const unsigned char 
  1874 ;;		 -> STR_12(25), STR_11(42), STR_10(25), STR_9(29), 
  1875 ;;		 -> STR_7(33), STR_6(45), STR_5(24), STR_4(60), 
  1876 ;;		 -> STR_3(55), STR_2(41), STR_1(41), 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  ret             2    0        int 
  1879 ;;  ap              1   41[COMRAM] PTR void [1]
  1880 ;;		 -> ?_printf(2), 
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  2   33[COMRAM] int 
  1883 ;; Registers used:
  1884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1890 ;;      Params:         8       0       0       0       0       0       0
  1891 ;;      Locals:         1       0       0       0       0       0       0
  1892 ;;      Temps:          0       0       0       0       0       0       0
  1893 ;;      Totals:         9       0       0       0       0       0       0
  1894 ;;Total ram usage:        9 bytes
  1895 ;; Hardware stack levels used: 1
  1896 ;; Hardware stack levels required when called: 4
  1897 ;; This function calls:
  1898 ;;		_vfprintf
  1899 ;; This function is called by:
  1900 ;;		_i2c_write
  1901 ;;		_i2c_read
  1902 ;;		_serial_memory_read
  1903 ;;		_serial_memory_write
  1904 ;;		_serial_memory_seek
  1905 ;;		_main
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           	psect	text6
  1910   006176                     __ptext6:
  1911                           	callstack 0
  1912   006176                     _printf:
  1913                           	callstack 25
  1914   006176  0E24               	movlw	low (?_printf+2)
  1915   006178  6E2A               	movwf	printf@ap^0,c
  1916   00617A  0E00               	movlw	0
  1917   00617C  6E1B               	movwf	vfprintf@fp^0,c
  1918   00617E  0E00               	movlw	0
  1919   006180  6E1C               	movwf	(vfprintf@fp+1)^0,c
  1920   006182  C022  F01D         	movff	printf@fmt,vfprintf@fmt
  1921   006186  C023  F01E         	movff	printf@fmt+1,vfprintf@fmt+1
  1922   00618A  0E2A               	movlw	low printf@ap
  1923   00618C  6E1F               	movwf	vfprintf@ap^0,c
  1924   00618E  EC17  F031         	call	_vfprintf	;wreg free
  1925   006192  0012               	return		;funcret
  1926   006194                     __end_of_printf:
  1927                           	callstack 0
  1928                           
  1929 ;; *************** function _vfprintf *****************
  1930 ;; Defined at:
  1931 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
  1934 ;;		 -> NULL(0), 
  1935 ;;  fmt             2   28[COMRAM] PTR const unsigned char 
  1936 ;;		 -> STR_12(25), STR_11(42), STR_10(25), STR_9(29), 
  1937 ;;		 -> STR_7(33), STR_6(45), STR_5(24), STR_4(60), 
  1938 ;;		 -> STR_3(55), STR_2(41), STR_1(41), 
  1939 ;;  ap              1   30[COMRAM] PTR PTR void 
  1940 ;;		 -> printf@ap(1), 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  cfmt            2   31[COMRAM] PTR unsigned char 
  1943 ;;		 -> STR_12(25), STR_11(42), STR_10(25), STR_9(29), 
  1944 ;;		 -> STR_7(33), STR_6(45), STR_5(24), STR_4(60), 
  1945 ;;		 -> STR_3(55), STR_2(41), STR_1(41), 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  2   26[COMRAM] int 
  1948 ;; Registers used:
  1949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1955 ;;      Params:         5       0       0       0       0       0       0
  1956 ;;      Locals:         2       0       0       0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0       0       0
  1958 ;;      Totals:         7       0       0       0       0       0       0
  1959 ;;Total ram usage:        7 bytes
  1960 ;; Hardware stack levels used: 1
  1961 ;; Hardware stack levels required when called: 3
  1962 ;; This function calls:
  1963 ;;		_vfpfcnvrt
  1964 ;; This function is called by:
  1965 ;;		_printf
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text7
  1970   00622E                     __ptext7:
  1971                           	callstack 0
  1972   00622E                     _vfprintf:
  1973                           	callstack 25
  1974   00622E                     
  1975                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1976   00622E  C01D  F020         	movff	vfprintf@fmt,vfprintf@cfmt
  1977   006232  C01E  F021         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1978                           
  1979                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1980   006236  EF27  F031         	goto	l1649
  1981   00623A                     l1647:
  1982                           
  1983                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1984   00623A  C01B  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1985   00623E  C01C  F00C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1986   006242  0E20               	movlw	low vfprintf@cfmt
  1987   006244  6E0D               	movwf	vfpfcnvrt@fmt^0,c
  1988   006246  C01F  F00E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1989   00624A  ECB9  F035         	call	_vfpfcnvrt	;wreg free
  1990   00624E                     l1649:
  1991                           
  1992                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1993   00624E  C020  FFF6         	movff	vfprintf@cfmt,tblptrl
  1994   006252  C021  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1995   006256                     	if	0	;tblptru may be non-zero
  1996   006256                     	endif
  1997   006256                     	if	0	;tblptru may be non-zero
  1998   006256                     	endif
  1999   006256  0008               	tblrd		*
  2000   006258  50F5               	movf	tablat,w,c
  2001   00625A  0900               	iorlw	0
  2002   00625C  A4D8               	btfss	status,2,c
  2003   00625E  EF33  F031         	goto	u991
  2004   006262  EF35  F031         	goto	u990
  2005   006266                     u991:
  2006   006266  EF1D  F031         	goto	l1647
  2007   00626A                     u990:
  2008   00626A                     
  2009                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2010   00626A  0E00               	movlw	0
  2011   00626C  6E1C               	movwf	(?_vfprintf+1)^0,c
  2012   00626E  0E00               	movlw	0
  2013   006270  6E1B               	movwf	?_vfprintf^0,c
  2014   006272  0012               	return		;funcret
  2015   006274                     __end_of_vfprintf:
  2016                           	callstack 0
  2017                           
  2018 ;; *************** function _vfpfcnvrt *****************
  2019 ;; Defined at:
  2020 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  2023 ;;		 -> NULL(0), 
  2024 ;;  fmt             1   12[COMRAM] PTR PTR unsigned char 
  2025 ;;		 -> vfprintf@cfmt(2), 
  2026 ;;  ap              1   13[COMRAM] PTR PTR void 
  2027 ;;		 -> printf@ap(1), 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;  cp              2   17[COMRAM] PTR unsigned char 
  2030 ;;		 -> ?_printf(2), main@read_buffer(100), STR_8(5), 
  2031 ;;  convarg         4   21[COMRAM] struct .
  2032 ;;  cp              2   19[COMRAM] PTR unsigned char 
  2033 ;;		 -> STR_12(25), STR_11(42), STR_10(25), STR_9(29), 
  2034 ;;		 -> STR_7(33), STR_6(45), STR_5(24), STR_4(60), 
  2035 ;;		 -> STR_3(55), STR_2(41), STR_1(41), 
  2036 ;;  c               1   25[COMRAM] unsigned char 
  2037 ;;  done            1   16[COMRAM] _Bool 
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2047 ;;      Params:         4       0       0       0       0       0       0
  2048 ;;      Locals:        10       0       0       0       0       0       0
  2049 ;;      Temps:          2       0       0       0       0       0       0
  2050 ;;      Totals:        16       0       0       0       0       0       0
  2051 ;;Total ram usage:       16 bytes
  2052 ;; Hardware stack levels used: 1
  2053 ;; Hardware stack levels required when called: 2
  2054 ;; This function calls:
  2055 ;;		___lwdiv
  2056 ;;		___lwmod
  2057 ;;		_fputc
  2058 ;; This function is called by:
  2059 ;;		_vfprintf
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text8
  2064   006B72                     __ptext8:
  2065                           	callstack 0
  2066   006B72                     _vfpfcnvrt:
  2067                           	callstack 25
  2068   006B72                     
  2069                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2070   006B72  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2071   006B74  6ED9               	movwf	fsr2l,c
  2072   006B76  6ADA               	clrf	fsr2h,c
  2073   006B78  CFDE FFF6          	movff	postinc2,tblptrl
  2074   006B7C  CFDD FFF7          	movff	postdec2,tblptrh
  2075   006B80                     	if	0	;tblptru may be non-zero
  2076   006B80                     	endif
  2077   006B80                     	if	0	;tblptru may be non-zero
  2078   006B80                     	endif
  2079   006B80  0008               	tblrd		*
  2080   006B82  50F5               	movf	tablat,w,c
  2081   006B84  0A25               	xorlw	37
  2082   006B86  A4D8               	btfss	status,2,c
  2083   006B88  EFC8  F035         	goto	u861
  2084   006B8C  EFCA  F035         	goto	u860
  2085   006B90                     u861:
  2086   006B90  EF21  F037         	goto	l1639
  2087   006B94                     u860:
  2088   006B94                     
  2089                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2090   006B94  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2091   006B96  6ED9               	movwf	fsr2l,c
  2092   006B98  6ADA               	clrf	fsr2h,c
  2093   006B9A  2ADE               	incf	postinc2,f,c
  2094   006B9C  0E00               	movlw	0
  2095   006B9E  22DD               	addwfc	postdec2,f,c
  2096   006BA0                     
  2097                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2098   006BA0  0E00               	movlw	0
  2099   006BA2  6E5E               	movwf	(_width+1)^0,c
  2100   006BA4  0E00               	movlw	0
  2101   006BA6  6E5D               	movwf	_width^0,c
  2102   006BA8  C05D  F063         	movff	_width,_flags
  2103   006BAC                     
  2104                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2105   006BAC  685F               	setf	_prec^0,c
  2106   006BAE  6860               	setf	(_prec+1)^0,c
  2107   006BB0                     
  2108                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1439:   if (0
  2109   006BB0  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2110   006BB2  6ED9               	movwf	fsr2l,c
  2111   006BB4  6ADA               	clrf	fsr2h,c
  2112   006BB6  CFDE F014          	movff	postinc2,vfpfcnvrt@cp
  2113   006BBA  CFDD F015          	movff	postdec2,vfpfcnvrt@cp+1
  2114   006BBE  C014  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2115   006BC2  C015  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2116   006BC6                     	if	0	;tblptru may be non-zero
  2117   006BC6                     	endif
  2118   006BC6                     	if	0	;tblptru may be non-zero
  2119   006BC6                     	endif
  2120   006BC6  0008               	tblrd		*
  2121   006BC8  50F5               	movf	tablat,w,c
  2122   006BCA  0A75               	xorlw	117
  2123   006BCC  A4D8               	btfss	status,2,c
  2124   006BCE  EFEB  F035         	goto	u871
  2125   006BD2  EFED  F035         	goto	u870
  2126   006BD6                     u871:
  2127   006BD6  EF64  F036         	goto	l1607
  2128   006BDA                     u870:
  2129   006BDA                     
  2130                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  2131   006BDA  500E               	movf	vfpfcnvrt@ap^0,w,c
  2132   006BDC  6ED9               	movwf	fsr2l,c
  2133   006BDE  6ADA               	clrf	fsr2h,c
  2134   006BE0  0E02               	movlw	2
  2135   006BE2  26DF               	addwf	indf2,f,c
  2136   006BE4  5CDF               	subwf	indf2,w,c
  2137   006BE6  6ED9               	movwf	fsr2l,c
  2138   006BE8  6ADA               	clrf	fsr2h,c
  2139   006BEA  CFDE F016          	movff	postinc2,vfpfcnvrt@convarg
  2140   006BEE  CFDE F017          	movff	postinc2,vfpfcnvrt@convarg+1
  2141   006BF2                     
  2142                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  2143   006BF2  0E01               	movlw	1
  2144   006BF4  2414               	addwf	vfpfcnvrt@cp^0,w,c
  2145   006BF6  6E0F               	movwf	??_vfpfcnvrt^0,c
  2146   006BF8  0E00               	movlw	0
  2147   006BFA  2015               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2148   006BFC  6E10               	movwf	(??_vfpfcnvrt+1)^0,c
  2149   006BFE  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2150   006C00  6ED9               	movwf	fsr2l,c
  2151   006C02  6ADA               	clrf	fsr2h,c
  2152   006C04  C00F  FFDE         	movff	??_vfpfcnvrt,postinc2
  2153   006C08  C010  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2154                           
  2155                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  2156   006C0C  EF58  F036         	goto	l1605
  2157   006C10                     l1587:
  2158                           
  2159                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  2160   006C10  0E20               	movlw	32
  2161   006C12  6E1A               	movwf	vfpfcnvrt@c^0,c
  2162   006C14                     l1589:
  2163                           
  2164                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  2165   006C14  061A               	decf	vfpfcnvrt@c^0,f,c
  2166   006C16  501A               	movf	vfpfcnvrt@c^0,w,c
  2167   006C18  0F3D               	addlw	low _dbuf
  2168   006C1A  6ED9               	movwf	fsr2l,c
  2169   006C1C  6ADA               	clrf	fsr2h,c
  2170   006C1E  C016  F001         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  2171   006C22  C017  F002         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  2172   006C26  0E00               	movlw	0
  2173   006C28  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2174   006C2A  0E0A               	movlw	10
  2175   006C2C  6E03               	movwf	___lwmod@divisor^0,c
  2176   006C2E  ECB3  F031         	call	___lwmod	;wreg free
  2177   006C32  5001               	movf	?___lwmod^0,w,c
  2178   006C34  0F30               	addlw	48
  2179   006C36  6EDF               	movwf	indf2,c
  2180   006C38                     
  2181                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  2182   006C38  C016  F001         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  2183   006C3C  C017  F002         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  2184   006C40  0E00               	movlw	0
  2185   006C42  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2186   006C44  0E0A               	movlw	10
  2187   006C46  6E03               	movwf	___lwdiv@divisor^0,c
  2188   006C48  ECE5  F031         	call	___lwdiv	;wreg free
  2189   006C4C  C001  F016         	movff	?___lwdiv,vfpfcnvrt@convarg
  2190   006C50  C002  F017         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  2191   006C54                     
  2192                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  2193   006C54  5016               	movf	vfpfcnvrt@convarg^0,w,c
  2194   006C56  1017               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2195   006C58  B4D8               	btfsc	status,2,c
  2196   006C5A  EF31  F036         	goto	u881
  2197   006C5E  EF33  F036         	goto	u880
  2198   006C62                     u881:
  2199   006C62  EF4D  F036         	goto	l1601
  2200   006C66                     u880:
  2201   006C66  501A               	movf	vfpfcnvrt@c^0,w,c
  2202   006C68  A4D8               	btfss	status,2,c
  2203   006C6A  EF39  F036         	goto	u891
  2204   006C6E  EF3B  F036         	goto	u890
  2205   006C72                     u891:
  2206   006C72  EF0A  F036         	goto	l1589
  2207   006C76                     u890:
  2208   006C76  EF4D  F036         	goto	l1601
  2209   006C7A                     l1597:
  2210                           
  2211                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  2212   006C7A  501A               	movf	vfpfcnvrt@c^0,w,c
  2213   006C7C  0F3D               	addlw	low _dbuf
  2214   006C7E  6ED9               	movwf	fsr2l,c
  2215   006C80  6ADA               	clrf	fsr2h,c
  2216   006C82  50DF               	movf	indf2,w,c
  2217   006C84  6E0F               	movwf	??_vfpfcnvrt^0,c
  2218   006C86  500F               	movf	??_vfpfcnvrt^0,w,c
  2219   006C88  6E02               	movwf	fputc@c^0,c
  2220   006C8A  6A03               	clrf	(fputc@c+1)^0,c
  2221   006C8C  C00B  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2222   006C90  C00C  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2223   006C94  EC70  F032         	call	_fputc	;wreg free
  2224   006C98  2A1A               	incf	vfpfcnvrt@c^0,f,c
  2225   006C9A                     l1601:
  2226                           
  2227                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  2228   006C9A  0E20               	movlw	32
  2229   006C9C  181A               	xorwf	vfpfcnvrt@c^0,w,c
  2230   006C9E  A4D8               	btfss	status,2,c
  2231   006CA0  EF54  F036         	goto	u901
  2232   006CA4  EF56  F036         	goto	u900
  2233   006CA8                     u901:
  2234   006CA8  EF3D  F036         	goto	l1597
  2235   006CAC                     u900:
  2236   006CAC  EF34  F037         	goto	l967
  2237   006CB0                     l1605:
  2238   006CB0  C014  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2239   006CB4  C015  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2240   006CB8                     	if	0	;tblptru may be non-zero
  2241   006CB8                     	endif
  2242   006CB8                     	if	0	;tblptru may be non-zero
  2243   006CB8                     	endif
  2244   006CB8  0008               	tblrd		*
  2245   006CBA  50F5               	movf	tablat,w,c
  2246                           
  2247                           ; Switch size 1, requested type "simple"
  2248                           ; Number of cases is 1, Range of values is 117 to 117
  2249                           ; switch strategies available:
  2250                           ; Name         Instructions Cycles
  2251                           ; simple_byte            4     3 (average)
  2252                           ;	Chosen strategy is simple_byte
  2253   006CBC  0A75               	xorlw	117	; case 117
  2254   006CBE  B4D8               	btfsc	status,2,c
  2255   006CC0  EF08  F036         	goto	l1587
  2256   006CC4  EF64  F036         	goto	l1607
  2257   006CC8                     l1607:
  2258                           
  2259                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  2260   006CC8  0E00               	movlw	0
  2261   006CCA  6E11               	movwf	vfpfcnvrt@done^0,c
  2262   006CCC                     
  2263                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
  2264   006CCC  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2265   006CCE  6ED9               	movwf	fsr2l,c
  2266   006CD0  6ADA               	clrf	fsr2h,c
  2267   006CD2  CFDE FFF6          	movff	postinc2,tblptrl
  2268   006CD6  CFDD FFF7          	movff	postdec2,tblptrh
  2269   006CDA                     	if	0	;tblptru may be non-zero
  2270   006CDA                     	endif
  2271   006CDA                     	if	0	;tblptru may be non-zero
  2272   006CDA                     	endif
  2273   006CDA  0008               	tblrd		*
  2274   006CDC  50F5               	movf	tablat,w,c
  2275   006CDE  0A73               	xorlw	115
  2276   006CE0  A4D8               	btfss	status,2,c
  2277   006CE2  EF75  F036         	goto	u911
  2278   006CE6  EF77  F036         	goto	u910
  2279   006CEA                     u911:
  2280   006CEA  EF81  F036         	goto	l1615
  2281   006CEE                     u910:
  2282   006CEE                     
  2283                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  2284   006CEE  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2285   006CF0  6ED9               	movwf	fsr2l,c
  2286   006CF2  6ADA               	clrf	fsr2h,c
  2287   006CF4  2ADE               	incf	postinc2,f,c
  2288   006CF6  0E00               	movlw	0
  2289   006CF8  22DD               	addwfc	postdec2,f,c
  2290   006CFA                     l1613:
  2291                           
  2292                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
  2293   006CFA  0E01               	movlw	1
  2294   006CFC  6E11               	movwf	vfpfcnvrt@done^0,c
  2295                           
  2296                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1660:   }
  2297   006CFE  EFCD  F036         	goto	l1625
  2298   006D02                     l1615:
  2299   006D02  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2300   006D04  6ED9               	movwf	fsr2l,c
  2301   006D06  6ADA               	clrf	fsr2h,c
  2302   006D08  CFDE FFF6          	movff	postinc2,tblptrl
  2303   006D0C  CFDD FFF7          	movff	postdec2,tblptrh
  2304   006D10                     	if	0	;tblptru may be non-zero
  2305   006D10                     	endif
  2306   006D10                     	if	0	;tblptru may be non-zero
  2307   006D10                     	endif
  2308   006D10  0008               	tblrd		*
  2309   006D12  50F5               	movf	tablat,w,c
  2310   006D14  0A6C               	xorlw	108
  2311   006D16  A4D8               	btfss	status,2,c
  2312   006D18  EF90  F036         	goto	u921
  2313   006D1C  EF92  F036         	goto	u920
  2314   006D20                     u921:
  2315   006D20  EFCD  F036         	goto	l1625
  2316   006D24                     u920:
  2317   006D24  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2318   006D26  6ED9               	movwf	fsr2l,c
  2319   006D28  6ADA               	clrf	fsr2h,c
  2320   006D2A  CFDE F00F          	movff	postinc2,??_vfpfcnvrt
  2321   006D2E  CFDD F010          	movff	postdec2,??_vfpfcnvrt+1
  2322   006D32  0E01               	movlw	1
  2323   006D34  260F               	addwf	??_vfpfcnvrt^0,f,c
  2324   006D36  0E00               	movlw	0
  2325   006D38  2210               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2326   006D3A  C00F  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2327   006D3E  C010  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2328   006D42                     	if	0	;tblptru may be non-zero
  2329   006D42                     	endif
  2330   006D42                     	if	0	;tblptru may be non-zero
  2331   006D42                     	endif
  2332   006D42  0008               	tblrd		*
  2333   006D44  50F5               	movf	tablat,w,c
  2334   006D46  0A6C               	xorlw	108
  2335   006D48  A4D8               	btfss	status,2,c
  2336   006D4A  EFA9  F036         	goto	u931
  2337   006D4E  EFAB  F036         	goto	u930
  2338   006D52                     u931:
  2339   006D52  EFCD  F036         	goto	l1625
  2340   006D56                     u930:
  2341   006D56  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2342   006D58  6ED9               	movwf	fsr2l,c
  2343   006D5A  6ADA               	clrf	fsr2h,c
  2344   006D5C  CFDE F00F          	movff	postinc2,??_vfpfcnvrt
  2345   006D60  CFDD F010          	movff	postdec2,??_vfpfcnvrt+1
  2346   006D64  0E02               	movlw	2
  2347   006D66  260F               	addwf	??_vfpfcnvrt^0,f,c
  2348   006D68  0E00               	movlw	0
  2349   006D6A  2210               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2350   006D6C  C00F  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2351   006D70  C010  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2352   006D74                     	if	0	;tblptru may be non-zero
  2353   006D74                     	endif
  2354   006D74                     	if	0	;tblptru may be non-zero
  2355   006D74                     	endif
  2356   006D74  0008               	tblrd		*
  2357   006D76  50F5               	movf	tablat,w,c
  2358   006D78  0A73               	xorlw	115
  2359   006D7A  A4D8               	btfss	status,2,c
  2360   006D7C  EFC2  F036         	goto	u941
  2361   006D80  EFC4  F036         	goto	u940
  2362   006D84                     u941:
  2363   006D84  EFCD  F036         	goto	l1625
  2364   006D88                     u940:
  2365   006D88                     
  2366                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
  2367   006D88  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2368   006D8A  6ED9               	movwf	fsr2l,c
  2369   006D8C  6ADA               	clrf	fsr2h,c
  2370   006D8E  0E03               	movlw	3
  2371   006D90  26DE               	addwf	postinc2,f,c
  2372   006D92  0E00               	movlw	0
  2373   006D94  22DD               	addwfc	postdec2,f,c
  2374   006D96  EF7D  F036         	goto	l1613
  2375   006D9A                     l1625:
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
  2378   006D9A  5011               	movf	vfpfcnvrt@done^0,w,c
  2379   006D9C  B4D8               	btfsc	status,2,c
  2380   006D9E  EFD3  F036         	goto	u951
  2381   006DA2  EFD5  F036         	goto	u950
  2382   006DA6                     u951:
  2383   006DA6  EF19  F037         	goto	l1635
  2384   006DAA                     u950:
  2385   006DAA                     
  2386                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1669:    for (cha
      +                          r * cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0)); *cp != '\0'; cp++) {
  2387   006DAA  500E               	movf	vfpfcnvrt@ap^0,w,c
  2388   006DAC  6ED9               	movwf	fsr2l,c
  2389   006DAE  6ADA               	clrf	fsr2h,c
  2390   006DB0  0E02               	movlw	2
  2391   006DB2  26DF               	addwf	indf2,f,c
  2392   006DB4  5CDF               	subwf	indf2,w,c
  2393   006DB6  6ED9               	movwf	fsr2l,c
  2394   006DB8  6ADA               	clrf	fsr2h,c
  2395   006DBA  CFDE F012          	movff	postinc2,vfpfcnvrt@cp_1219
  2396   006DBE  CFDE F013          	movff	postinc2,vfpfcnvrt@cp_1219+1
  2397   006DC2  EFFF  F036         	goto	l1633
  2398   006DC6                     l1629:
  2399                           
  2400                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1670:     fputc(*
      +                          cp, fp);
  2401   006DC6  C012  FFF6         	movff	vfpfcnvrt@cp_1219,tblptrl
  2402   006DCA  C013  FFF7         	movff	vfpfcnvrt@cp_1219+1,tblptrh
  2403   006DCE  6AF8               	clrf	tblptru,c
  2404   006DD0  0E05               	movlw	(high __ramtop+-1)
  2405   006DD2  64F7               	cpfsgt	tblptrh,c
  2406   006DD4  D003               	bra	u967
  2407   006DD6  0008               	tblrd		*
  2408   006DD8  50F5               	movf	tablat,w,c
  2409   006DDA  D005               	bra	u960
  2410   006DDC                     u967:
  2411   006DDC  CFF6 FFE1          	movff	tblptrl,fsr1l
  2412   006DE0  CFF7 FFE2          	movff	tblptrh,fsr1h
  2413   006DE4  50E7               	movf	indf1,w,c
  2414   006DE6                     u960:
  2415   006DE6  6E0F               	movwf	??_vfpfcnvrt^0,c
  2416   006DE8  500F               	movf	??_vfpfcnvrt^0,w,c
  2417   006DEA  6E02               	movwf	fputc@c^0,c
  2418   006DEC  6A03               	clrf	(fputc@c+1)^0,c
  2419   006DEE  C00B  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2420   006DF2  C00C  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2421   006DF6  EC70  F032         	call	_fputc	;wreg free
  2422   006DFA                     
  2423                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1674:    }
  2424   006DFA  4A12               	infsnz	vfpfcnvrt@cp_1219^0,f,c
  2425   006DFC  2A13               	incf	(vfpfcnvrt@cp_1219+1)^0,f,c
  2426   006DFE                     l1633:
  2427   006DFE  C012  FFF6         	movff	vfpfcnvrt@cp_1219,tblptrl
  2428   006E02  C013  FFF7         	movff	vfpfcnvrt@cp_1219+1,tblptrh
  2429   006E06  6AF8               	clrf	tblptru,c
  2430   006E08  0E05               	movlw	(high __ramtop+-1)
  2431   006E0A  64F7               	cpfsgt	tblptrh,c
  2432   006E0C  D003               	bra	u977
  2433   006E0E  0008               	tblrd		*
  2434   006E10  50F5               	movf	tablat,w,c
  2435   006E12  D005               	bra	u970
  2436   006E14                     u977:
  2437   006E14  CFF6 FFE1          	movff	tblptrl,fsr1l
  2438   006E18  CFF7 FFE2          	movff	tblptrh,fsr1h
  2439   006E1C  50E7               	movf	indf1,w,c
  2440   006E1E                     u970:
  2441   006E1E  0900               	iorlw	0
  2442   006E20  A4D8               	btfss	status,2,c
  2443   006E22  EF15  F037         	goto	u981
  2444   006E26  EF17  F037         	goto	u980
  2445   006E2A                     u981:
  2446   006E2A  EFE3  F036         	goto	l1629
  2447   006E2E                     u980:
  2448   006E2E  EF34  F037         	goto	l967
  2449   006E32                     l1635:
  2450                           
  2451                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2452   006E32  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2453   006E34  6ED9               	movwf	fsr2l,c
  2454   006E36  6ADA               	clrf	fsr2h,c
  2455   006E38  2ADE               	incf	postinc2,f,c
  2456   006E3A  0E00               	movlw	0
  2457   006E3C  22DD               	addwfc	postdec2,f,c
  2458   006E3E  EF34  F037         	goto	l967
  2459   006E42                     l1639:
  2460                           
  2461                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2462   006E42  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2463   006E44  6ED9               	movwf	fsr2l,c
  2464   006E46  6ADA               	clrf	fsr2h,c
  2465   006E48  CFDE FFF6          	movff	postinc2,tblptrl
  2466   006E4C  CFDD FFF7          	movff	postdec2,tblptrh
  2467   006E50                     	if	0	;tblptru may be non-zero
  2468   006E50                     	endif
  2469   006E50                     	if	0	;tblptru may be non-zero
  2470   006E50                     	endif
  2471   006E50  0008               	tblrd		*
  2472   006E52  50F5               	movf	tablat,w,c
  2473   006E54  6E02               	movwf	fputc@c^0,c
  2474   006E56  6A03               	clrf	(fputc@c+1)^0,c
  2475   006E58  C00B  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2476   006E5C  C00C  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2477   006E60  EC70  F032         	call	_fputc	;wreg free
  2478   006E64  EF19  F037         	goto	l1635
  2479   006E68                     l967:
  2480   006E68  0012               	return		;funcret
  2481   006E6A                     __end_of_vfpfcnvrt:
  2482                           	callstack 0
  2483                           
  2484 ;; *************** function _fputc *****************
  2485 ;; Defined at:
  2486 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;  c               2    1[COMRAM] int 
  2489 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  2490 ;;		 -> NULL(0), 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;		None
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  2    1[COMRAM] int 
  2495 ;; Registers used:
  2496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2502 ;;      Params:         4       0       0       0       0       0       0
  2503 ;;      Locals:         0       0       0       0       0       0       0
  2504 ;;      Temps:          5       0       0       0       0       0       0
  2505 ;;      Totals:         9       0       0       0       0       0       0
  2506 ;;Total ram usage:        9 bytes
  2507 ;; Hardware stack levels used: 1
  2508 ;; Hardware stack levels required when called: 1
  2509 ;; This function calls:
  2510 ;;		_putch
  2511 ;; This function is called by:
  2512 ;;		_vfpfcnvrt
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text9
  2517   0064E0                     __ptext9:
  2518                           	callstack 0
  2519   0064E0                     _fputc:
  2520                           	callstack 25
  2521   0064E0  5004               	movf	fputc@fp^0,w,c
  2522   0064E2  1005               	iorwf	(fputc@fp+1)^0,w,c
  2523   0064E4  B4D8               	btfsc	status,2,c
  2524   0064E6  EF77  F032         	goto	u821
  2525   0064EA  EF79  F032         	goto	u820
  2526   0064EE                     u821:
  2527   0064EE  EF82  F032         	goto	l1561
  2528   0064F2                     u820:
  2529   0064F2  5004               	movf	fputc@fp^0,w,c
  2530   0064F4  1005               	iorwf	(fputc@fp+1)^0,w,c
  2531   0064F6  A4D8               	btfss	status,2,c
  2532   0064F8  EF80  F032         	goto	u831
  2533   0064FC  EF82  F032         	goto	u830
  2534   006500                     u831:
  2535   006500  EF87  F032         	goto	l1563
  2536   006504                     u830:
  2537   006504                     l1561:
  2538   006504  5002               	movf	fputc@c^0,w,c
  2539   006506  EC96  F030         	call	_putch
  2540   00650A  EFD4  F032         	goto	l993
  2541   00650E                     l1563:
  2542   00650E  EE20 F00A          	lfsr	2,10
  2543   006512  5004               	movf	fputc@fp^0,w,c
  2544   006514  26D9               	addwf	fsr2l,f,c
  2545   006516  5005               	movf	(fputc@fp+1)^0,w,c
  2546   006518  22DA               	addwfc	fsr2h,f,c
  2547   00651A  50DE               	movf	postinc2,w,c
  2548   00651C  10DE               	iorwf	postinc2,w,c
  2549   00651E  B4D8               	btfsc	status,2,c
  2550   006520  EF94  F032         	goto	u841
  2551   006524  EF96  F032         	goto	u840
  2552   006528                     u841:
  2553   006528  EFB1  F032         	goto	l1567
  2554   00652C                     u840:
  2555   00652C  EE20 F00A          	lfsr	2,10
  2556   006530  5004               	movf	fputc@fp^0,w,c
  2557   006532  26D9               	addwf	fsr2l,f,c
  2558   006534  5005               	movf	(fputc@fp+1)^0,w,c
  2559   006536  22DA               	addwfc	fsr2h,f,c
  2560   006538  EE10 F003          	lfsr	1,3
  2561   00653C  5004               	movf	fputc@fp^0,w,c
  2562   00653E  26E1               	addwf	fsr1l,f,c
  2563   006540  5005               	movf	(fputc@fp+1)^0,w,c
  2564   006542  22E2               	addwfc	fsr1h,f,c
  2565   006544  50DE               	movf	postinc2,w,c
  2566   006546  5CE6               	subwf	postinc1,w,c
  2567   006548  50E6               	movf	postinc1,w,c
  2568   00654A  0A80               	xorlw	128
  2569   00654C  6E0A               	movwf	(??_fputc+4)^0,c
  2570   00654E  50DE               	movf	postinc2,w,c
  2571   006550  0A80               	xorlw	128
  2572   006552  580A               	subwfb	(??_fputc+4)^0,w,c
  2573   006554  B0D8               	btfsc	status,0,c
  2574   006556  EFAF  F032         	goto	u851
  2575   00655A  EFB1  F032         	goto	u850
  2576   00655E                     u851:
  2577   00655E  EFD4  F032         	goto	l993
  2578   006562                     u850:
  2579   006562                     l1567:
  2580   006562  EE20 F003          	lfsr	2,3
  2581   006566  5004               	movf	fputc@fp^0,w,c
  2582   006568  26D9               	addwf	fsr2l,f,c
  2583   00656A  5005               	movf	(fputc@fp+1)^0,w,c
  2584   00656C  22DA               	addwfc	fsr2h,f,c
  2585   00656E  CFDE F006          	movff	postinc2,??_fputc
  2586   006572  CFDD F007          	movff	postdec2,??_fputc+1
  2587   006576  C004  FFD9         	movff	fputc@fp,fsr2l
  2588   00657A  C005  FFDA         	movff	fputc@fp+1,fsr2h
  2589   00657E  CFDE F008          	movff	postinc2,??_fputc+2
  2590   006582  CFDD F009          	movff	postdec2,??_fputc+3
  2591   006586  5006               	movf	??_fputc^0,w,c
  2592   006588  2408               	addwf	(??_fputc+2)^0,w,c
  2593   00658A  6ED9               	movwf	fsr2l,c
  2594   00658C  5007               	movf	(??_fputc+1)^0,w,c
  2595   00658E  2009               	addwfc	(??_fputc+3)^0,w,c
  2596   006590  6EDA               	movwf	fsr2h,c
  2597   006592  C002  FFDF         	movff	fputc@c,indf2
  2598   006596  EE20 F003          	lfsr	2,3
  2599   00659A  5004               	movf	fputc@fp^0,w,c
  2600   00659C  26D9               	addwf	fsr2l,f,c
  2601   00659E  5005               	movf	(fputc@fp+1)^0,w,c
  2602   0065A0  22DA               	addwfc	fsr2h,f,c
  2603   0065A2  2ADE               	incf	postinc2,f,c
  2604   0065A4  0E00               	movlw	0
  2605   0065A6  22DD               	addwfc	postdec2,f,c
  2606   0065A8                     l993:
  2607   0065A8  0012               	return		;funcret
  2608   0065AA                     __end_of_fputc:
  2609                           	callstack 0
  2610                           
  2611 ;; *************** function _putch *****************
  2612 ;; Defined at:
  2613 ;;		line 63 in file "main.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  byte            1    wreg     unsigned char 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  byte            1    0[COMRAM] unsigned char 
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      void 
  2620 ;; Registers used:
  2621 ;;		wreg
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2627 ;;      Params:         0       0       0       0       0       0       0
  2628 ;;      Locals:         1       0       0       0       0       0       0
  2629 ;;      Temps:          0       0       0       0       0       0       0
  2630 ;;      Totals:         1       0       0       0       0       0       0
  2631 ;;Total ram usage:        1 bytes
  2632 ;; Hardware stack levels used: 1
  2633 ;; This function calls:
  2634 ;;		Nothing
  2635 ;; This function is called by:
  2636 ;;		_fputc
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text10
  2641   00612C                     __ptext10:
  2642                           	callstack 0
  2643   00612C                     _putch:
  2644                           	callstack 25
  2645                           
  2646                           ;incstack = 0
  2647                           ;putch@byte stored from wreg
  2648   00612C  6E01               	movwf	putch@byte^0,c
  2649   00612E                     l58:
  2650                           
  2651                           ;main.c: 64:         }
  2652   00612E  A2AC               	btfss	172,1,c	;volatile
  2653   006130  EF9C  F030         	goto	u751
  2654   006134  EF9E  F030         	goto	u750
  2655   006138                     u751:
  2656   006138  EF97  F030         	goto	l58
  2657   00613C                     u750:
  2658   00613C                     
  2659                           ;main.c: 67:         I2C_STOP();
  2660   00613C  C001  FFAD         	movff	putch@byte,4013	;volatile
  2661   006140  0012               	return		;funcret
  2662   006142                     __end_of_putch:
  2663                           	callstack 0
  2664                           
  2665 ;; *************** function ___lwmod *****************
  2666 ;; Defined at:
  2667 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  dividend        2    0[COMRAM] unsigned int 
  2670 ;;  divisor         2    2[COMRAM] unsigned int 
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;  counter         1    4[COMRAM] unsigned char 
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  2    0[COMRAM] unsigned int 
  2675 ;; Registers used:
  2676 ;;		wreg, status,2, status,0
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2682 ;;      Params:         4       0       0       0       0       0       0
  2683 ;;      Locals:         1       0       0       0       0       0       0
  2684 ;;      Temps:          0       0       0       0       0       0       0
  2685 ;;      Totals:         5       0       0       0       0       0       0
  2686 ;;Total ram usage:        5 bytes
  2687 ;; Hardware stack levels used: 1
  2688 ;; This function calls:
  2689 ;;		Nothing
  2690 ;; This function is called by:
  2691 ;;		_vfpfcnvrt
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text11
  2696   006366                     __ptext11:
  2697                           	callstack 0
  2698   006366                     ___lwmod:
  2699                           	callstack 26
  2700   006366  5003               	movf	___lwmod@divisor^0,w,c
  2701   006368  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2702   00636A  B4D8               	btfsc	status,2,c
  2703   00636C  EFBA  F031         	goto	u791
  2704   006370  EFBC  F031         	goto	u790
  2705   006374                     u791:
  2706   006374  EFE0  F031         	goto	l753
  2707   006378                     u790:
  2708   006378  0E01               	movlw	1
  2709   00637A  6E05               	movwf	___lwmod@counter^0,c
  2710   00637C  EFC4  F031         	goto	l1547
  2711   006380                     l1545:
  2712   006380  90D8               	bcf	status,0,c
  2713   006382  3603               	rlcf	___lwmod@divisor^0,f,c
  2714   006384  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2715   006386  2A05               	incf	___lwmod@counter^0,f,c
  2716   006388                     l1547:
  2717   006388  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2718   00638A  EFC9  F031         	goto	u801
  2719   00638E  EFCB  F031         	goto	u800
  2720   006392                     u801:
  2721   006392  EFC0  F031         	goto	l1545
  2722   006396                     u800:
  2723   006396                     l1549:
  2724   006396  5003               	movf	___lwmod@divisor^0,w,c
  2725   006398  5C01               	subwf	___lwmod@dividend^0,w,c
  2726   00639A  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2727   00639C  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2728   00639E  A0D8               	btfss	status,0,c
  2729   0063A0  EFD4  F031         	goto	u811
  2730   0063A4  EFD6  F031         	goto	u810
  2731   0063A8                     u811:
  2732   0063A8  EFDA  F031         	goto	l1553
  2733   0063AC                     u810:
  2734   0063AC  5003               	movf	___lwmod@divisor^0,w,c
  2735   0063AE  5E01               	subwf	___lwmod@dividend^0,f,c
  2736   0063B0  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2737   0063B2  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2738   0063B4                     l1553:
  2739   0063B4  90D8               	bcf	status,0,c
  2740   0063B6  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2741   0063B8  3203               	rrcf	___lwmod@divisor^0,f,c
  2742   0063BA  2E05               	decfsz	___lwmod@counter^0,f,c
  2743   0063BC  EFCB  F031         	goto	l1549
  2744   0063C0                     l753:
  2745   0063C0  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2746   0063C4  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2747   0063C8  0012               	return		;funcret
  2748   0063CA                     __end_of___lwmod:
  2749                           	callstack 0
  2750                           
  2751 ;; *************** function ___lwdiv *****************
  2752 ;; Defined at:
  2753 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;  dividend        2    0[COMRAM] unsigned int 
  2756 ;;  divisor         2    2[COMRAM] unsigned int 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;  quotient        2    4[COMRAM] unsigned int 
  2759 ;;  counter         1    6[COMRAM] unsigned char 
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  2    0[COMRAM] unsigned int 
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, status,0
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2769 ;;      Params:         4       0       0       0       0       0       0
  2770 ;;      Locals:         3       0       0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0
  2772 ;;      Totals:         7       0       0       0       0       0       0
  2773 ;;Total ram usage:        7 bytes
  2774 ;; Hardware stack levels used: 1
  2775 ;; This function calls:
  2776 ;;		Nothing
  2777 ;; This function is called by:
  2778 ;;		_vfpfcnvrt
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	text12
  2783   0063CA                     __ptext12:
  2784                           	callstack 0
  2785   0063CA                     ___lwdiv:
  2786                           	callstack 26
  2787   0063CA  0E00               	movlw	0
  2788   0063CC  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2789   0063CE  0E00               	movlw	0
  2790   0063D0  6E05               	movwf	___lwdiv@quotient^0,c
  2791   0063D2  5003               	movf	___lwdiv@divisor^0,w,c
  2792   0063D4  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2793   0063D6  B4D8               	btfsc	status,2,c
  2794   0063D8  EFF0  F031         	goto	u761
  2795   0063DC  EFF2  F031         	goto	u760
  2796   0063E0                     u761:
  2797   0063E0  EF1A  F032         	goto	l743
  2798   0063E4                     u760:
  2799   0063E4  0E01               	movlw	1
  2800   0063E6  6E07               	movwf	___lwdiv@counter^0,c
  2801   0063E8  EFFA  F031         	goto	l1527
  2802   0063EC                     l1525:
  2803   0063EC  90D8               	bcf	status,0,c
  2804   0063EE  3603               	rlcf	___lwdiv@divisor^0,f,c
  2805   0063F0  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2806   0063F2  2A07               	incf	___lwdiv@counter^0,f,c
  2807   0063F4                     l1527:
  2808   0063F4  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2809   0063F6  EFFF  F031         	goto	u771
  2810   0063FA  EF01  F032         	goto	u770
  2811   0063FE                     u771:
  2812   0063FE  EFF6  F031         	goto	l1525
  2813   006402                     u770:
  2814   006402                     l1529:
  2815   006402  90D8               	bcf	status,0,c
  2816   006404  3605               	rlcf	___lwdiv@quotient^0,f,c
  2817   006406  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2818   006408  5003               	movf	___lwdiv@divisor^0,w,c
  2819   00640A  5C01               	subwf	___lwdiv@dividend^0,w,c
  2820   00640C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2821   00640E  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2822   006410  A0D8               	btfss	status,0,c
  2823   006412  EF0D  F032         	goto	u781
  2824   006416  EF0F  F032         	goto	u780
  2825   00641A                     u781:
  2826   00641A  EF14  F032         	goto	l1537
  2827   00641E                     u780:
  2828   00641E  5003               	movf	___lwdiv@divisor^0,w,c
  2829   006420  5E01               	subwf	___lwdiv@dividend^0,f,c
  2830   006422  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2831   006424  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2832   006426  8005               	bsf	___lwdiv@quotient^0,0,c
  2833   006428                     l1537:
  2834   006428  90D8               	bcf	status,0,c
  2835   00642A  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2836   00642C  3203               	rrcf	___lwdiv@divisor^0,f,c
  2837   00642E  2E07               	decfsz	___lwdiv@counter^0,f,c
  2838   006430  EF01  F032         	goto	l1529
  2839   006434                     l743:
  2840   006434  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2841   006438  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2842   00643C  0012               	return		;funcret
  2843   00643E                     __end_of___lwdiv:
  2844                           	callstack 0
  2845                           
  2846 ;; *************** function _I2C_TRANSMITE *****************
  2847 ;; Defined at:
  2848 ;;		line 43 in file "I2C_Master.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;  DADO_I2C        1    wreg     unsigned char 
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;  DADO_I2C        1    0[COMRAM] unsigned char 
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  1    wreg      void 
  2855 ;; Registers used:
  2856 ;;		wreg
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2862 ;;      Params:         0       0       0       0       0       0       0
  2863 ;;      Locals:         1       0       0       0       0       0       0
  2864 ;;      Temps:          0       0       0       0       0       0       0
  2865 ;;      Totals:         1       0       0       0       0       0       0
  2866 ;;Total ram usage:        1 bytes
  2867 ;; Hardware stack levels used: 1
  2868 ;; This function calls:
  2869 ;;		Nothing
  2870 ;; This function is called by:
  2871 ;;		_i2c_write
  2872 ;;		_i2c_read
  2873 ;;		_I2C_ESCRITA
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text13
  2878   006194                     __ptext13:
  2879                           	callstack 0
  2880   006194                     _I2C_TRANSMITE:
  2881                           	callstack 28
  2882                           
  2883                           ;incstack = 0
  2884                           ;I2C_TRANSMITE@DADO_I2C stored from wreg
  2885   006194  6E01               	movwf	I2C_TRANSMITE@DADO_I2C^0,c
  2886   006196                     
  2887                           ;I2C_Master.c: 43: void I2C_TRANSMITE (unsigned char DADO_I2C);I2C_Master.c: 44: {;I2C_M
      +                          aster.c: 45:  SSPBUF = DADO_I2C;
  2888   006196  C001  FFC9         	movff	I2C_TRANSMITE@DADO_I2C,4041	;volatile
  2889   00619A                     l204:
  2890   00619A  B0C7               	btfsc	199,0,c	;volatile
  2891   00619C  EFD2  F030         	goto	u1011
  2892   0061A0  EFD4  F030         	goto	u1010
  2893   0061A4                     u1011:
  2894   0061A4  EFCD  F030         	goto	l204
  2895   0061A8                     u1010:
  2896   0061A8                     l207:
  2897   0061A8  B4C7               	btfsc	199,2,c	;volatile
  2898   0061AA  EFD9  F030         	goto	u1021
  2899   0061AE  EFDB  F030         	goto	u1020
  2900   0061B2                     u1021:
  2901   0061B2  EFD4  F030         	goto	l207
  2902   0061B6                     u1020:
  2903   0061B6  0012               	return		;funcret
  2904   0061B8                     __end_of_I2C_TRANSMITE:
  2905                           	callstack 0
  2906                           
  2907 ;; *************** function _I2C_STOP *****************
  2908 ;; Defined at:
  2909 ;;		line 54 in file "I2C_Master.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;		None
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;		None
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		None
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2923 ;;      Params:         0       0       0       0       0       0       0
  2924 ;;      Locals:         0       0       0       0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0       0       0
  2926 ;;      Totals:         0       0       0       0       0       0       0
  2927 ;;Total ram usage:        0 bytes
  2928 ;; Hardware stack levels used: 1
  2929 ;; This function calls:
  2930 ;;		Nothing
  2931 ;; This function is called by:
  2932 ;;		_i2c_write
  2933 ;;		_i2c_read
  2934 ;;		_I2C_ESCRITA
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text14
  2939   0060F2                     __ptext14:
  2940                           	callstack 0
  2941   0060F2                     _I2C_STOP:
  2942                           	callstack 28
  2943   0060F2                     
  2944                           ;I2C_Master.c: 56:  SSPCON2bits.PEN = 1;
  2945   0060F2  84C5               	bsf	197,2,c	;volatile
  2946   0060F4                     l218:
  2947   0060F4  B4C5               	btfsc	197,2,c	;volatile
  2948   0060F6  EF7F  F030         	goto	u1031
  2949   0060FA  EF81  F030         	goto	u1030
  2950   0060FE                     u1031:
  2951   0060FE  EF7A  F030         	goto	l218
  2952   006102                     u1030:
  2953   006102  0012               	return		;funcret
  2954   006104                     __end_of_I2C_STOP:
  2955                           	callstack 0
  2956                           
  2957 ;; *************** function _I2C_START *****************
  2958 ;; Defined at:
  2959 ;;		line 33 in file "I2C_Master.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;		None
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;		None
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  1    wreg      void 
  2966 ;; Registers used:
  2967 ;;		None
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2973 ;;      Params:         0       0       0       0       0       0       0
  2974 ;;      Locals:         0       0       0       0       0       0       0
  2975 ;;      Temps:          0       0       0       0       0       0       0
  2976 ;;      Totals:         0       0       0       0       0       0       0
  2977 ;;Total ram usage:        0 bytes
  2978 ;; Hardware stack levels used: 1
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_i2c_write
  2983 ;;		_i2c_read
  2984 ;;		_I2C_ESCRITA
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text15
  2989   0060E0                     __ptext15:
  2990                           	callstack 0
  2991   0060E0                     _I2C_START:
  2992                           	callstack 28
  2993   0060E0                     
  2994                           ;I2C_Master.c: 35:  SSPCON2bits.SEN = 1;
  2995   0060E0  80C5               	bsf	197,0,c	;volatile
  2996   0060E2                     l192:
  2997   0060E2  B0C5               	btfsc	197,0,c	;volatile
  2998   0060E4  EF76  F030         	goto	u1001
  2999   0060E8  EF78  F030         	goto	u1000
  3000   0060EC                     u1001:
  3001   0060EC  EF71  F030         	goto	l192
  3002   0060F0                     u1000:
  3003   0060F0  0012               	return		;funcret
  3004   0060F2                     __end_of_I2C_START:
  3005                           	callstack 0
  3006                           
  3007 ;; *************** function _I2C_RESTART *****************
  3008 ;; Defined at:
  3009 ;;		line 38 in file "I2C_Master.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;		None
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;		None
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      void 
  3016 ;; Registers used:
  3017 ;;		None
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3023 ;;      Params:         0       0       0       0       0       0       0
  3024 ;;      Locals:         0       0       0       0       0       0       0
  3025 ;;      Temps:          0       0       0       0       0       0       0
  3026 ;;      Totals:         0       0       0       0       0       0       0
  3027 ;;Total ram usage:        0 bytes
  3028 ;; Hardware stack levels used: 1
  3029 ;; This function calls:
  3030 ;;		Nothing
  3031 ;; This function is called by:
  3032 ;;		_i2c_read
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           	psect	text16
  3037   0060CE                     __ptext16:
  3038                           	callstack 0
  3039   0060CE                     _I2C_RESTART:
  3040                           	callstack 28
  3041   0060CE                     
  3042                           ;I2C_Master.c: 40:  SSPCON2bits.RSEN = 1;
  3043   0060CE  82C5               	bsf	197,1,c	;volatile
  3044   0060D0                     l198:
  3045   0060D0  B2C5               	btfsc	197,1,c	;volatile
  3046   0060D2  EF6D  F030         	goto	u1041
  3047   0060D6  EF6F  F030         	goto	u1040
  3048   0060DA                     u1041:
  3049   0060DA  EF68  F030         	goto	l198
  3050   0060DE                     u1040:
  3051   0060DE  0012               	return		;funcret
  3052   0060E0                     __end_of_I2C_RESTART:
  3053                           	callstack 0
  3054                           
  3055 ;; *************** function _I2C_RECEBE *****************
  3056 ;; Defined at:
  3057 ;;		line 89 in file "I2C_Master.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;		None
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;  x               1    0[COMRAM] unsigned char 
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  1    wreg      unsigned char 
  3064 ;; Registers used:
  3065 ;;		wreg, status,2
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3071 ;;      Params:         0       0       0       0       0       0       0
  3072 ;;      Locals:         1       0       0       0       0       0       0
  3073 ;;      Temps:          0       0       0       0       0       0       0
  3074 ;;      Totals:         1       0       0       0       0       0       0
  3075 ;;Total ram usage:        1 bytes
  3076 ;; Hardware stack levels used: 1
  3077 ;; This function calls:
  3078 ;;		Nothing
  3079 ;; This function is called by:
  3080 ;;		_i2c_read
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text17
  3085   0062C2                     __ptext17:
  3086                           	callstack 0
  3087   0062C2                     _I2C_RECEBE:
  3088                           	callstack 28
  3089   0062C2                     
  3090                           ;I2C_Master.c: 91: unsigned char x;;I2C_Master.c: 92:  SSPCON2bits.RCEN = 1;
  3091   0062C2  86C5               	bsf	197,3,c	;volatile
  3092   0062C4                     l231:
  3093   0062C4  B6C5               	btfsc	197,3,c	;volatile
  3094   0062C6  EF67  F031         	goto	u1051
  3095   0062CA  EF69  F031         	goto	u1050
  3096   0062CE                     u1051:
  3097   0062CE  EF62  F031         	goto	l231
  3098   0062D2                     u1050:
  3099   0062D2                     l234:
  3100   0062D2  A0C7               	btfss	199,0,c	;volatile
  3101   0062D4  EF6E  F031         	goto	u1061
  3102   0062D8  EF70  F031         	goto	u1060
  3103   0062DC                     u1061:
  3104   0062DC  EF69  F031         	goto	l234
  3105   0062E0                     u1060:
  3106   0062E0                     
  3107                           ;I2C_Master.c: 95:  __nop();
  3108   0062E0  0000               	nop	
  3109                           
  3110                           ;I2C_Master.c: 96:     __nop();
  3111   0062E2  0000               	nop	
  3112                           
  3113                           ;I2C_Master.c: 97:     __nop();
  3114   0062E4  0000               	nop	
  3115                           
  3116                           ;I2C_Master.c: 98:     __nop();
  3117   0062E6  0000               	nop	
  3118                           
  3119                           ;I2C_Master.c: 99:     __nop();
  3120   0062E8  0000               	nop	
  3121                           
  3122                           ;I2C_Master.c: 100:     __nop();
  3123   0062EA  0000               	nop	
  3124                           
  3125                           ;I2C_Master.c: 101:     __nop();
  3126   0062EC  0000               	nop	
  3127                           
  3128                           ;I2C_Master.c: 102:     __nop();
  3129   0062EE  0000               	nop	
  3130                           
  3131                           ;I2C_Master.c: 103:     __nop();
  3132   0062F0  0000               	nop	
  3133                           
  3134                           ;I2C_Master.c: 104:     __nop();
  3135   0062F2  0000               	nop	
  3136                           
  3137                           ;I2C_Master.c: 105:     __nop();
  3138   0062F4  0000               	nop	
  3139                           
  3140                           ;I2C_Master.c: 106:     __nop();
  3141   0062F6  0000               	nop	
  3142                           
  3143                           ;I2C_Master.c: 107:     __nop();
  3144   0062F8  0000               	nop	
  3145                           
  3146                           ;I2C_Master.c: 108:     __nop();
  3147   0062FA  0000               	nop	
  3148                           
  3149                           ;I2C_Master.c: 109:     __nop();
  3150   0062FC  0000               	nop	
  3151                           
  3152                           ;I2C_Master.c: 110:     __nop();
  3153   0062FE  0000               	nop	
  3154                           
  3155                           ;I2C_Master.c: 111:     __nop();
  3156   006300  0000               	nop	
  3157                           
  3158                           ;I2C_Master.c: 112:     __nop();
  3159   006302  0000               	nop	
  3160                           
  3161                           ;I2C_Master.c: 113:     __nop();
  3162   006304  0000               	nop	
  3163                           
  3164                           ;I2C_Master.c: 114:     __nop();
  3165   006306  0000               	nop	
  3166                           
  3167                           ;I2C_Master.c: 115:     __nop();
  3168   006308  0000               	nop	
  3169                           
  3170                           ;I2C_Master.c: 116:     __nop();
  3171   00630A  0000               	nop	
  3172                           
  3173                           ;I2C_Master.c: 118:  x = SSPBUF;
  3174   00630C  CFC9 F001          	movff	4041,I2C_RECEBE@x	;volatile
  3175   006310                     
  3176                           ;I2C_Master.c: 119:  return x;
  3177   006310  5001               	movf	I2C_RECEBE@x^0,w,c
  3178   006312  0012               	return		;funcret
  3179   006314                     __end_of_I2C_RECEBE:
  3180                           	callstack 0
  3181                           
  3182 ;; *************** function _I2C_NACK *****************
  3183 ;; Defined at:
  3184 ;;		line 127 in file "I2C_Master.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;		None
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      void 
  3191 ;; Registers used:
  3192 ;;		None
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3198 ;;      Params:         0       0       0       0       0       0       0
  3199 ;;      Locals:         0       0       0       0       0       0       0
  3200 ;;      Temps:          0       0       0       0       0       0       0
  3201 ;;      Totals:         0       0       0       0       0       0       0
  3202 ;;Total ram usage:        0 bytes
  3203 ;; Hardware stack levels used: 1
  3204 ;; This function calls:
  3205 ;;		Nothing
  3206 ;; This function is called by:
  3207 ;;		_i2c_read
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text18
  3212   006118                     __ptext18:
  3213                           	callstack 0
  3214   006118                     _I2C_NACK:
  3215                           	callstack 28
  3216   006118                     
  3217                           ;I2C_Master.c: 129:  SSPCON2bits.ACKDT = 1;
  3218   006118  8AC5               	bsf	197,5,c	;volatile
  3219                           
  3220                           ;I2C_Master.c: 130:  SSPCON2bits.ACKEN = 1;
  3221   00611A  88C5               	bsf	197,4,c	;volatile
  3222   00611C                     l246:
  3223   00611C  B8C5               	btfsc	197,4,c	;volatile
  3224   00611E  EF93  F030         	goto	u1081
  3225   006122  EF95  F030         	goto	u1080
  3226   006126                     u1081:
  3227   006126  EF8E  F030         	goto	l246
  3228   00612A                     u1080:
  3229   00612A  0012               	return		;funcret
  3230   00612C                     __end_of_I2C_NACK:
  3231                           	callstack 0
  3232                           
  3233 ;; *************** function _I2C_ACK *****************
  3234 ;; Defined at:
  3235 ;;		line 121 in file "I2C_Master.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;		None
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;		None
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  1    wreg      void 
  3242 ;; Registers used:
  3243 ;;		None
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3249 ;;      Params:         0       0       0       0       0       0       0
  3250 ;;      Locals:         0       0       0       0       0       0       0
  3251 ;;      Temps:          0       0       0       0       0       0       0
  3252 ;;      Totals:         0       0       0       0       0       0       0
  3253 ;;Total ram usage:        0 bytes
  3254 ;; Hardware stack levels used: 1
  3255 ;; This function calls:
  3256 ;;		Nothing
  3257 ;; This function is called by:
  3258 ;;		_i2c_read
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           	psect	text19
  3263   006104                     __ptext19:
  3264                           	callstack 0
  3265   006104                     _I2C_ACK:
  3266                           	callstack 28
  3267   006104                     
  3268                           ;I2C_Master.c: 123:  SSPCON2bits.ACKDT = 0;
  3269   006104  9AC5               	bcf	197,5,c	;volatile
  3270                           
  3271                           ;I2C_Master.c: 124:  SSPCON2bits.ACKEN = 1;
  3272   006106  88C5               	bsf	197,4,c	;volatile
  3273   006108                     l240:
  3274   006108  B8C5               	btfsc	197,4,c	;volatile
  3275   00610A  EF89  F030         	goto	u1071
  3276   00610E  EF8B  F030         	goto	u1070
  3277   006112                     u1071:
  3278   006112  EF84  F030         	goto	l240
  3279   006116                     u1070:
  3280   006116  0012               	return		;funcret
  3281   006118                     __end_of_I2C_ACK:
  3282                           	callstack 0
  3283                           
  3284 ;; *************** function _initUART *****************
  3285 ;; Defined at:
  3286 ;;		line 50 in file "main.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;		None
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;		None
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		wreg, status,2
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3300 ;;      Params:         0       0       0       0       0       0       0
  3301 ;;      Locals:         0       0       0       0       0       0       0
  3302 ;;      Temps:          0       0       0       0       0       0       0
  3303 ;;      Totals:         0       0       0       0       0       0       0
  3304 ;;Total ram usage:        0 bytes
  3305 ;; Hardware stack levels used: 1
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_main
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text20
  3314   00615C                     __ptext20:
  3315                           	callstack 0
  3316   00615C                     _initUART:
  3317                           	callstack 30
  3318   00615C                     
  3319                           ;main.c: 51: 
  3320   00615C  9C94               	bcf	148,6,c	;volatile
  3321                           
  3322                           ;main.c: 52: 
  3323   00615E  8E94               	bsf	148,7,c	;volatile
  3324   006160                     
  3325                           ;main.c: 53: 
  3326   006160  0E22               	movlw	34
  3327   006162  6EAF               	movwf	175,c	;volatile
  3328                           
  3329                           ;main.c: 54: 
  3330   006164  0E00               	movlw	0
  3331   006166  6EB0               	movwf	176,c	;volatile
  3332   006168                     
  3333                           ;main.c: 55: 
  3334   006168  86B8               	bsf	184,3,c	;volatile
  3335   00616A                     
  3336                           ;main.c: 56: void i2c_write(uint16_t address, const uint8_t *data, uint16_t length) {
  3337   00616A  84AC               	bsf	172,2,c	;volatile
  3338   00616C                     
  3339                           ;main.c: 57:     for (uint16_t i = 0; i < length; i++) {
  3340   00616C  98AC               	bcf	172,4,c	;volatile
  3341   00616E                     
  3342                           ;main.c: 58:         I2C_START();
  3343   00616E  8AAC               	bsf	172,5,c	;volatile
  3344   006170                     
  3345                           ;main.c: 59:         I2C_TRANSMITE(0xA0);
  3346   006170  8EAB               	bsf	171,7,c	;volatile
  3347   006172                     
  3348                           ;main.c: 60:         I2C_TRANSMITE((address >> 8) & 0xFF);
  3349   006172  88AB               	bsf	171,4,c	;volatile
  3350   006174  0012               	return		;funcret
  3351   006176                     __end_of_initUART:
  3352                           	callstack 0
  3353                           
  3354 ;; *************** function _init *****************
  3355 ;; Defined at:
  3356 ;;		line 187 in file "main.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  1    wreg      void 
  3363 ;; Registers used:
  3364 ;;		wreg, status,2
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3370 ;;      Params:         0       0       0       0       0       0       0
  3371 ;;      Locals:         0       0       0       0       0       0       0
  3372 ;;      Temps:          0       0       0       0       0       0       0
  3373 ;;      Totals:         0       0       0       0       0       0       0
  3374 ;;Total ram usage:        0 bytes
  3375 ;; Hardware stack levels used: 1
  3376 ;; This function calls:
  3377 ;;		Nothing
  3378 ;; This function is called by:
  3379 ;;		_main
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           	psect	text21
  3384   006142                     __ptext21:
  3385                           	callstack 0
  3386   006142                     _init:
  3387                           	callstack 30
  3388   006142                     
  3389                           ;main.c: 188:     LATB &= 0x0F;
  3390   006142  0E06               	movlw	6
  3391   006144  6EC1               	movwf	193,c	;volatile
  3392                           
  3393                           ;main.c: 189: }
  3394   006146  0E00               	movlw	0
  3395   006148  6E95               	movwf	149,c	;volatile
  3396                           
  3397                           ;main.c: 191: 
  3398   00614A  0E00               	movlw	0
  3399   00614C  6E93               	movwf	147,c	;volatile
  3400                           
  3401                           ;main.c: 192: 
  3402   00614E  0E00               	movlw	0
  3403   006150  6E8C               	movwf	140,c	;volatile
  3404                           
  3405                           ;main.c: 194: void display_sequence(const char* sequence, uint8_t length) {
  3406   006152  0E00               	movlw	0
  3407   006154  6E8A               	movwf	138,c	;volatile
  3408   006156                     
  3409                           ;main.c: 195:     for (uint8_t i = 0; i <= length; i++) {
  3410   006156  8093               	bsf	147,0,c	;volatile
  3411   006158                     
  3412                           ;main.c: 196:         uint8_t digits[4] = {0xFF, 0xFF, 0xFF, 0xFF};
  3413   006158  8293               	bsf	147,1,c	;volatile
  3414   00615A  0012               	return		;funcret
  3415   00615C                     __end_of_init:
  3416                           	callstack 0
  3417                           
  3418 ;; *************** function _display_sequence *****************
  3419 ;; Defined at:
  3420 ;;		line 213 in file "main.c"
  3421 ;; Parameters:    Size  Location     Type
  3422 ;;  sequence        2    0[COMRAM] PTR const unsigned char 
  3423 ;;		 -> STR_13(6), main@read_buffer(100), STR_8(5), 
  3424 ;;  length          1    2[COMRAM] unsigned char 
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;  j               1   14[COMRAM] unsigned char 
  3427 ;;  ch              1   15[COMRAM] unsigned char 
  3428 ;;  refresh         1   12[COMRAM] unsigned char 
  3429 ;;  j               1   16[COMRAM] unsigned char 
  3430 ;;  digits          4    8[COMRAM] unsigned char [4]
  3431 ;;  i               1   13[COMRAM] unsigned char 
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1    wreg      void 
  3434 ;; Registers used:
  3435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3441 ;;      Params:         3       0       0       0       0       0       0
  3442 ;;      Locals:         9       0       0       0       0       0       0
  3443 ;;      Temps:          5       0       0       0       0       0       0
  3444 ;;      Totals:        17       0       0       0       0       0       0
  3445 ;;Total ram usage:       17 bytes
  3446 ;; Hardware stack levels used: 1
  3447 ;; This function calls:
  3448 ;;		Nothing
  3449 ;; This function is called by:
  3450 ;;		_main
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           	psect	text22
  3455   006766                     __ptext22:
  3456                           	callstack 0
  3457   006766                     _display_sequence:
  3458                           	callstack 30
  3459   006766                     
  3460                           ;main.c: 214:                 if (digits[j] == 0xFF) {
  3461   006766  0E00               	movlw	0
  3462   006768  6E0E               	movwf	display_sequence@i^0,c
  3463   00676A  EFA5  F034         	goto	l1893
  3464   00676E                     l113:
  3465                           
  3466                           ;main.c: 215:                     LATD = 0x00;
  3467   00676E  C064  F009         	movff	display_sequence@F2951,display_sequence@digits
  3468   006772  C065  F00A         	movff	display_sequence@F2951+1,display_sequence@digits+1
  3469   006776  C066  F00B         	movff	display_sequence@F2951+2,display_sequence@digits+2
  3470   00677A  C067  F00C         	movff	display_sequence@F2951+3,display_sequence@digits+3
  3471   00677E                     
  3472                           ;main.c: 216:                 } else {
  3473   00677E  0E00               	movlw	0
  3474   006780  6E11               	movwf	display_sequence@j^0,c
  3475   006782  EF31  F034         	goto	l1855
  3476   006786                     l1831:
  3477                           
  3478                           ;main.c: 217:                     LATD = segment_map[digits[j]];
  3479   006786  500E               	movf	display_sequence@i^0,w,c
  3480   006788  2401               	addwf	display_sequence@sequence^0,w,c
  3481   00678A  6E04               	movwf	??_display_sequence^0,c
  3482   00678C  0E00               	movlw	0
  3483   00678E  2002               	addwfc	(display_sequence@sequence+1)^0,w,c
  3484   006790  6E05               	movwf	(??_display_sequence+1)^0,c
  3485   006792  5011               	movf	display_sequence@j^0,w,c
  3486   006794  2604               	addwf	??_display_sequence^0,f,c
  3487   006796  0E00               	movlw	0
  3488   006798  2205               	addwfc	(??_display_sequence+1)^0,f,c
  3489   00679A  C004  FFF6         	movff	??_display_sequence,tblptrl
  3490   00679E  C005  FFF7         	movff	??_display_sequence+1,tblptrh
  3491   0067A2  6AF8               	clrf	tblptru,c
  3492   0067A4  0E05               	movlw	(high __ramtop+-1)
  3493   0067A6  64F7               	cpfsgt	tblptrh,c
  3494   0067A8  D003               	bra	u1187
  3495   0067AA  0008               	tblrd		*
  3496   0067AC  50F5               	movf	tablat,w,c
  3497   0067AE  D005               	bra	u1180
  3498   0067B0                     u1187:
  3499   0067B0  CFF6 FFE1          	movff	tblptrl,fsr1l
  3500   0067B4  CFF7 FFE2          	movff	tblptrh,fsr1h
  3501   0067B8  50E7               	movf	indf1,w,c
  3502   0067BA                     u1180:
  3503   0067BA  6E10               	movwf	display_sequence@ch^0,c
  3504   0067BC                     
  3505                           ;main.c: 218:                 }
  3506   0067BC  0E2F               	movlw	47
  3507   0067BE  6410               	cpfsgt	display_sequence@ch^0,c
  3508   0067C0  EFE4  F033         	goto	u1191
  3509   0067C4  EFE6  F033         	goto	u1190
  3510   0067C8                     u1191:
  3511   0067C8  EFF7  F033         	goto	l1839
  3512   0067CC                     u1190:
  3513   0067CC  0E3A               	movlw	58
  3514   0067CE  6010               	cpfslt	display_sequence@ch^0,c
  3515   0067D0  EFEC  F033         	goto	u1201
  3516   0067D4  EFEE  F033         	goto	u1200
  3517   0067D8                     u1201:
  3518   0067D8  EFF7  F033         	goto	l1839
  3519   0067DC                     u1200:
  3520   0067DC                     
  3521                           ;main.c: 219:                 LATB = (LATB & 0x0F) | (1 << (j + 4));
  3522   0067DC  5011               	movf	display_sequence@j^0,w,c
  3523   0067DE  0F09               	addlw	low display_sequence@digits
  3524   0067E0  6ED9               	movwf	fsr2l,c
  3525   0067E2  6ADA               	clrf	fsr2h,c
  3526   0067E4  5010               	movf	display_sequence@ch^0,w,c
  3527   0067E6  0FD0               	addlw	208
  3528   0067E8  6EDF               	movwf	indf2,c
  3529                           
  3530                           ;main.c: 220:                 _delay((unsigned long)((1)*(16000000/4000.0)));
  3531   0067EA  EF30  F034         	goto	l1853
  3532   0067EE                     l1839:
  3533   0067EE  0E45               	movlw	69
  3534   0067F0  1810               	xorwf	display_sequence@ch^0,w,c
  3535   0067F2  A4D8               	btfss	status,2,c
  3536   0067F4  EFFE  F033         	goto	u1211
  3537   0067F8  EF00  F034         	goto	u1210
  3538   0067FC                     u1211:
  3539   0067FC  EF08  F034         	goto	l1843
  3540   006800                     u1210:
  3541   006800                     
  3542                           ;main.c: 221:                 LATB &= 0x0F;
  3543   006800  5011               	movf	display_sequence@j^0,w,c
  3544   006802  0F09               	addlw	low display_sequence@digits
  3545   006804  6ED9               	movwf	fsr2l,c
  3546   006806  6ADA               	clrf	fsr2h,c
  3547   006808  0E0A               	movlw	10
  3548   00680A  6EDF               	movwf	indf2,c
  3549                           
  3550                           ;main.c: 222:             }
  3551   00680C  EF30  F034         	goto	l1853
  3552   006810                     l1843:
  3553   006810  0E52               	movlw	82
  3554   006812  1810               	xorwf	display_sequence@ch^0,w,c
  3555   006814  A4D8               	btfss	status,2,c
  3556   006816  EF0F  F034         	goto	u1221
  3557   00681A  EF11  F034         	goto	u1220
  3558   00681E                     u1221:
  3559   00681E  EF19  F034         	goto	l1847
  3560   006822                     u1220:
  3561   006822                     
  3562                           ;main.c: 223:         }
  3563   006822  5011               	movf	display_sequence@j^0,w,c
  3564   006824  0F09               	addlw	low display_sequence@digits
  3565   006826  6ED9               	movwf	fsr2l,c
  3566   006828  6ADA               	clrf	fsr2h,c
  3567   00682A  0E0B               	movlw	11
  3568   00682C  6EDF               	movwf	indf2,c
  3569                           
  3570                           ;main.c: 224:     }
  3571   00682E  EF30  F034         	goto	l1853
  3572   006832                     l1847:
  3573   006832  0E4F               	movlw	79
  3574   006834  1810               	xorwf	display_sequence@ch^0,w,c
  3575   006836  A4D8               	btfss	status,2,c
  3576   006838  EF20  F034         	goto	u1231
  3577   00683C  EF22  F034         	goto	u1230
  3578   006840                     u1231:
  3579   006840  EF2A  F034         	goto	l1851
  3580   006844                     u1230:
  3581   006844                     
  3582                           ;main.c: 225: }
  3583   006844  5011               	movf	display_sequence@j^0,w,c
  3584   006846  0F09               	addlw	low display_sequence@digits
  3585   006848  6ED9               	movwf	fsr2l,c
  3586   00684A  6ADA               	clrf	fsr2h,c
  3587   00684C  0E0C               	movlw	12
  3588   00684E  6EDF               	movwf	indf2,c
  3589                           
  3590                           ;main.c: 226: 
  3591   006850  EF30  F034         	goto	l1853
  3592   006854                     l1851:
  3593                           
  3594                           ;main.c: 227: 
  3595   006854  5011               	movf	display_sequence@j^0,w,c
  3596   006856  0F09               	addlw	low display_sequence@digits
  3597   006858  6ED9               	movwf	fsr2l,c
  3598   00685A  6ADA               	clrf	fsr2h,c
  3599   00685C  0EFF               	movlw	255
  3600   00685E  6EDF               	movwf	indf2,c
  3601   006860                     l1853:
  3602                           
  3603                           ;main.c: 229: int main(void) {
  3604   006860  2A11               	incf	display_sequence@j^0,f,c
  3605   006862                     l1855:
  3606   006862  0E05               	movlw	5
  3607   006864  6011               	cpfslt	display_sequence@j^0,c
  3608   006866  EF37  F034         	goto	u1241
  3609   00686A  EF39  F034         	goto	u1240
  3610   00686E                     u1241:
  3611   00686E  EF52  F034         	goto	l1859
  3612   006872                     u1240:
  3613   006872  5003               	movf	display_sequence@length^0,w,c
  3614   006874  6E04               	movwf	??_display_sequence^0,c
  3615   006876  6A05               	clrf	(??_display_sequence+1)^0,c
  3616   006878  5011               	movf	display_sequence@j^0,w,c
  3617   00687A  C00E  F006         	movff	display_sequence@i,??_display_sequence+2
  3618   00687E  6A07               	clrf	(??_display_sequence+3)^0,c
  3619   006880  2606               	addwf	(??_display_sequence+2)^0,f,c
  3620   006882  0E00               	movlw	0
  3621   006884  2207               	addwfc	(??_display_sequence+3)^0,f,c
  3622   006886  5004               	movf	??_display_sequence^0,w,c
  3623   006888  5C06               	subwf	(??_display_sequence+2)^0,w,c
  3624   00688A  5007               	movf	(??_display_sequence+3)^0,w,c
  3625   00688C  0A80               	xorlw	128
  3626   00688E  6E08               	movwf	(??_display_sequence+4)^0,c
  3627   006890  5005               	movf	(??_display_sequence+1)^0,w,c
  3628   006892  0A80               	xorlw	128
  3629   006894  5808               	subwfb	(??_display_sequence+4)^0,w,c
  3630   006896  A0D8               	btfss	status,0,c
  3631   006898  EF50  F034         	goto	u1251
  3632   00689C  EF52  F034         	goto	u1250
  3633   0068A0                     u1251:
  3634   0068A0  EFC3  F033         	goto	l1831
  3635   0068A4                     u1250:
  3636   0068A4                     l1859:
  3637                           
  3638                           ;main.c: 231:     I2C_INICIA();
  3639   0068A4  0E00               	movlw	0
  3640   0068A6  6E0D               	movwf	display_sequence@refresh^0,c
  3641   0068A8                     l1865:
  3642                           
  3643                           ;main.c: 232:     init();
  3644   0068A8  0E00               	movlw	0
  3645   0068AA  6E0F               	movwf	display_sequence@j_470^0,c
  3646   0068AC                     l1871:
  3647                           
  3648                           ;main.c: 233:     int erro_mem = 0;
  3649   0068AC  500F               	movf	display_sequence@j_470^0,w,c
  3650   0068AE  0F09               	addlw	low display_sequence@digits
  3651   0068B0  6ED9               	movwf	fsr2l,c
  3652   0068B2  6ADA               	clrf	fsr2h,c
  3653   0068B4  28DE               	incf	postinc2,w,c
  3654   0068B6  A4D8               	btfss	status,2,c
  3655   0068B8  EF60  F034         	goto	u1261
  3656   0068BC  EF62  F034         	goto	u1260
  3657   0068C0                     u1261:
  3658   0068C0  EF66  F034         	goto	l1875
  3659   0068C4                     u1260:
  3660   0068C4                     
  3661                           ;main.c: 234: 
  3662   0068C4  0E00               	movlw	0
  3663   0068C6  6E8C               	movwf	140,c	;volatile
  3664                           
  3665                           ;main.c: 235:     const char *message = "1234";
  3666   0068C8  EF76  F034         	goto	l1877
  3667   0068CC                     l1875:
  3668                           
  3669                           ;main.c: 236: 
  3670   0068CC  500F               	movf	display_sequence@j_470^0,w,c
  3671   0068CE  0F09               	addlw	low display_sequence@digits
  3672   0068D0  6ED9               	movwf	fsr2l,c
  3673   0068D2  6ADA               	clrf	fsr2h,c
  3674   0068D4  50DF               	movf	indf2,w,c
  3675   0068D6  6E04               	movwf	??_display_sequence^0,c
  3676   0068D8  6A05               	clrf	(??_display_sequence+1)^0,c
  3677   0068DA  0E6B               	movlw	low _segment_map
  3678   0068DC  2404               	addwf	??_display_sequence^0,w,c
  3679   0068DE  6EF6               	movwf	tblptrl,c
  3680   0068E0  0E6E               	movlw	high _segment_map
  3681   0068E2  2005               	addwfc	(??_display_sequence+1)^0,w,c
  3682   0068E4  6EF7               	movwf	tblptrh,c
  3683   0068E6                     	if	0	;There are less than 3 active tblptr bytes
  3684   0068E6                     	endif
  3685   0068E6  0008               	tblrd		*
  3686   0068E8  CFF5 FF8C          	movff	tablat,3980	;volatile
  3687   0068EC                     l1877:
  3688                           
  3689                           ;main.c: 238: 
  3690   0068EC  C00F  F004         	movff	display_sequence@j_470,??_display_sequence
  3691   0068F0  0E04               	movlw	4
  3692   0068F2  2604               	addwf	??_display_sequence^0,f,c
  3693   0068F4  0E01               	movlw	1
  3694   0068F6  6E05               	movwf	(??_display_sequence+1)^0,c
  3695   0068F8  2A04               	incf	??_display_sequence^0,f,c
  3696   0068FA  EF81  F034         	goto	u1274
  3697   0068FE                     u1275:
  3698   0068FE  90D8               	bcf	status,0,c
  3699   006900  3605               	rlcf	(??_display_sequence+1)^0,f,c
  3700   006902                     u1274:
  3701   006902  2E04               	decfsz	??_display_sequence^0,f,c
  3702   006904  EF7F  F034         	goto	u1275
  3703   006908  508A               	movf	138,w,c	;volatile
  3704   00690A  0B0F               	andlw	15
  3705   00690C  1005               	iorwf	(??_display_sequence+1)^0,w,c
  3706   00690E  6E8A               	movwf	138,c	;volatile
  3707   006910                     
  3708                           ;main.c: 239:     if (message_length + 1 > 100) {
  3709   006910  0E06               	movlw	6
  3710   006912  6E04               	movwf	??_display_sequence^0,c
  3711   006914  0E30               	movlw	48
  3712   006916                     u1477:
  3713   006916  2EE8               	decfsz	wreg,f,c
  3714   006918  D7FE               	bra	u1477
  3715   00691A  2E04               	decfsz	??_display_sequence^0,f,c
  3716   00691C  D7FC               	bra	u1477
  3717   00691E  D000               	nop2	
  3718   006920                     
  3719                           ;main.c: 240: 
  3720   006920  0E0F               	movlw	15
  3721   006922  168A               	andwf	138,f,c	;volatile
  3722   006924                     
  3723                           ;main.c: 241:         printf("Erro: mensagem muito longa.\n");
  3724   006924  2A0F               	incf	display_sequence@j_470^0,f,c
  3725   006926  0E03               	movlw	3
  3726   006928  640F               	cpfsgt	display_sequence@j_470^0,c
  3727   00692A  EF99  F034         	goto	u1281
  3728   00692E  EF9B  F034         	goto	u1280
  3729   006932                     u1281:
  3730   006932  EF56  F034         	goto	l1871
  3731   006936                     u1280:
  3732   006936                     
  3733                           ;main.c: 242:         erro_mem = 1;
  3734   006936  2A0D               	incf	display_sequence@refresh^0,f,c
  3735   006938  0EC7               	movlw	199
  3736   00693A  640D               	cpfsgt	display_sequence@refresh^0,c
  3737   00693C  EFA2  F034         	goto	u1291
  3738   006940  EFA4  F034         	goto	u1290
  3739   006944                     u1291:
  3740   006944  EF54  F034         	goto	l1865
  3741   006948                     u1290:
  3742   006948                     
  3743                           ;main.c: 243:     }
  3744   006948  2A0E               	incf	display_sequence@i^0,f,c
  3745   00694A                     l1893:
  3746   00694A  500E               	movf	display_sequence@i^0,w,c
  3747   00694C  5C03               	subwf	display_sequence@length^0,w,c
  3748   00694E  B0D8               	btfsc	status,0,c
  3749   006950  EFAC  F034         	goto	u1301
  3750   006954  EFAE  F034         	goto	u1300
  3751   006958                     u1301:
  3752   006958  EFB7  F033         	goto	l113
  3753   00695C                     u1300:
  3754   00695C  0012               	return		;funcret
  3755   00695E                     __end_of_display_sequence:
  3756                           	callstack 0
  3757                           
  3758 ;; *************** function _count_characters *****************
  3759 ;; Defined at:
  3760 ;;		line 177 in file "main.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;  message         2    0[COMRAM] PTR const unsigned char 
  3763 ;;		 -> STR_8(5), 
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;  i               2    6[COMRAM] int 
  3766 ;;  count           2    4[COMRAM] int 
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  2    0[COMRAM] int 
  3769 ;; Registers used:
  3770 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3776 ;;      Params:         2       0       0       0       0       0       0
  3777 ;;      Locals:         4       0       0       0       0       0       0
  3778 ;;      Temps:          2       0       0       0       0       0       0
  3779 ;;      Totals:         8       0       0       0       0       0       0
  3780 ;;Total ram usage:        8 bytes
  3781 ;; Hardware stack levels used: 1
  3782 ;; This function calls:
  3783 ;;		Nothing
  3784 ;; This function is called by:
  3785 ;;		_main
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           	psect	text23
  3790   006274                     __ptext23:
  3791                           	callstack 0
  3792   006274                     _count_characters:
  3793                           	callstack 30
  3794   006274                     
  3795                           ;main.c: 178: }
  3796   006274  0E00               	movlw	0
  3797   006276  6E06               	movwf	(count_characters@count+1)^0,c
  3798   006278  0E00               	movlw	0
  3799   00627A  6E05               	movwf	count_characters@count^0,c
  3800                           
  3801                           ;main.c: 181:     if (value < 13) {
  3802   00627C  0E00               	movlw	0
  3803   00627E  6E08               	movwf	(count_characters@i+1)^0,c
  3804   006280  0E00               	movlw	0
  3805   006282  6E07               	movwf	count_characters@i^0,c
  3806   006284  EF48  F031         	goto	l1819
  3807   006288                     l1817:
  3808                           
  3809                           ;main.c: 182:         LATD = segment_map[value];
  3810   006288  4A05               	infsnz	count_characters@count^0,f,c
  3811   00628A  2A06               	incf	(count_characters@count+1)^0,f,c
  3812                           
  3813                           ;main.c: 183:     } else {
  3814   00628C  4A07               	infsnz	count_characters@i^0,f,c
  3815   00628E  2A08               	incf	(count_characters@i+1)^0,f,c
  3816   006290                     l1819:
  3817   006290  5007               	movf	count_characters@i^0,w,c
  3818   006292  2401               	addwf	count_characters@message^0,w,c
  3819   006294  6E03               	movwf	??_count_characters^0,c
  3820   006296  5008               	movf	(count_characters@i+1)^0,w,c
  3821   006298  2002               	addwfc	(count_characters@message+1)^0,w,c
  3822   00629A  6E04               	movwf	(??_count_characters+1)^0,c
  3823   00629C  C003  FFF6         	movff	??_count_characters,tblptrl
  3824   0062A0  C004  FFF7         	movff	??_count_characters+1,tblptrh
  3825   0062A4                     	if	0	;tblptru may be non-zero
  3826   0062A4                     	endif
  3827   0062A4                     	if	0	;tblptru may be non-zero
  3828   0062A4                     	endif
  3829   0062A4  0008               	tblrd		*
  3830   0062A6  50F5               	movf	tablat,w,c
  3831   0062A8  0900               	iorlw	0
  3832   0062AA  A4D8               	btfss	status,2,c
  3833   0062AC  EF5A  F031         	goto	u1171
  3834   0062B0  EF5C  F031         	goto	u1170
  3835   0062B4                     u1171:
  3836   0062B4  EF44  F031         	goto	l1817
  3837   0062B8                     u1170:
  3838   0062B8                     
  3839                           ;main.c: 185:     }
  3840   0062B8  C005  F001         	movff	count_characters@count,?_count_characters
  3841   0062BC  C006  F002         	movff	count_characters@count+1,?_count_characters+1
  3842   0062C0  0012               	return		;funcret
  3843   0062C2                     __end_of_count_characters:
  3844                           	callstack 0
  3845                           
  3846 ;; *************** function _I2C_INICIA *****************
  3847 ;; Defined at:
  3848 ;;		line 17 in file "I2C_Master.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;		None
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      void 
  3855 ;; Registers used:
  3856 ;;		wreg, status,2
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3862 ;;      Params:         0       0       0       0       0       0       0
  3863 ;;      Locals:         0       0       0       0       0       0       0
  3864 ;;      Temps:          0       0       0       0       0       0       0
  3865 ;;      Totals:         0       0       0       0       0       0       0
  3866 ;;Total ram usage:        0 bytes
  3867 ;; Hardware stack levels used: 1
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_main
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           	psect	text24
  3876   0060BE                     __ptext24:
  3877                           	callstack 0
  3878   0060BE                     _I2C_INICIA:
  3879                           	callstack 30
  3880   0060BE                     
  3881                           ;I2C_Master.c: 18:     TRISC = 0xff;
  3882   0060BE  6894               	setf	148,c	;volatile
  3883   0060C0                     
  3884                           ;I2C_Master.c: 20:  SSPCON1 = 0b00101000;
  3885   0060C0  0E28               	movlw	40
  3886   0060C2  6EC6               	movwf	198,c	;volatile
  3887                           
  3888                           ;I2C_Master.c: 23:  SSPADD = 20;
  3889   0060C4  0E14               	movlw	20
  3890   0060C6  6EC8               	movwf	200,c	;volatile
  3891                           
  3892                           ;I2C_Master.c: 24:  SSPSTAT = 0b10000000;
  3893   0060C8  0E80               	movlw	128
  3894   0060CA  6EC7               	movwf	199,c	;volatile
  3895   0060CC  0012               	return		;funcret
  3896   0060CE                     __end_of_I2C_INICIA:
  3897                           	callstack 0
  3898                           
  3899                           	psect	rparam
  3900   000000                     
  3901                           	psect	idloc
  3902                           
  3903                           ;Config register IDLOC0 @ 0x200000
  3904                           ;	unspecified, using default values
  3905   200000                     	org	2097152
  3906   200000  FF                 	db	255
  3907                           
  3908                           ;Config register IDLOC1 @ 0x200001
  3909                           ;	unspecified, using default values
  3910   200001                     	org	2097153
  3911   200001  FF                 	db	255
  3912                           
  3913                           ;Config register IDLOC2 @ 0x200002
  3914                           ;	unspecified, using default values
  3915   200002                     	org	2097154
  3916   200002  FF                 	db	255
  3917                           
  3918                           ;Config register IDLOC3 @ 0x200003
  3919                           ;	unspecified, using default values
  3920   200003                     	org	2097155
  3921   200003  FF                 	db	255
  3922                           
  3923                           ;Config register IDLOC4 @ 0x200004
  3924                           ;	unspecified, using default values
  3925   200004                     	org	2097156
  3926   200004  FF                 	db	255
  3927                           
  3928                           ;Config register IDLOC5 @ 0x200005
  3929                           ;	unspecified, using default values
  3930   200005                     	org	2097157
  3931   200005  FF                 	db	255
  3932                           
  3933                           ;Config register IDLOC6 @ 0x200006
  3934                           ;	unspecified, using default values
  3935   200006                     	org	2097158
  3936   200006  FF                 	db	255
  3937                           
  3938                           ;Config register IDLOC7 @ 0x200007
  3939                           ;	unspecified, using default values
  3940   200007                     	org	2097159
  3941   200007  FF                 	db	255
  3942                           
  3943                           	psect	config
  3944                           
  3945                           ; Padding undefined space
  3946   300000                     	org	3145728
  3947   300000  FF                 	db	255
  3948                           
  3949                           ;Config register CONFIG1H @ 0x300001
  3950                           ;	Oscillator Selection bits
  3951                           ;	OSC = HS, HS oscillator
  3952                           ;	Fail-Safe Clock Monitor Enable bit
  3953                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3954                           ;	Internal/External Oscillator Switchover bit
  3955                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3956   300001                     	org	3145729
  3957   300001  02                 	db	2
  3958                           
  3959                           ;Config register CONFIG2L @ 0x300002
  3960                           ;	Power-up Timer Enable bit
  3961                           ;	PWRT = OFF, PWRT disabled
  3962                           ;	Brown-out Reset Enable bits
  3963                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3964                           ;	Brown Out Reset Voltage bits
  3965                           ;	BORV = 0x3, unprogrammed default
  3966   300002                     	org	3145730
  3967   300002  19                 	db	25
  3968                           
  3969                           ;Config register CONFIG2H @ 0x300003
  3970                           ;	Watchdog Timer Enable bit
  3971                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3972                           ;	Watchdog Timer Postscale Select bits
  3973                           ;	WDTPS = 0xF, unprogrammed default
  3974   300003                     	org	3145731
  3975   300003  1E                 	db	30
  3976                           
  3977                           ; Padding undefined space
  3978   300004                     	org	3145732
  3979   300004  FF                 	db	255
  3980                           
  3981                           ;Config register CONFIG3H @ 0x300005
  3982                           ;	CCP2 MUX bit
  3983                           ;	CCP2MX = 0x1, unprogrammed default
  3984                           ;	PORTB A/D Enable bit
  3985                           ;	PBADEN = 0x1, unprogrammed default
  3986                           ;	Low-Power Timer1 Oscillator Enable bit
  3987                           ;	LPT1OSC = 0x0, unprogrammed default
  3988                           ;	MCLR Pin Enable bit
  3989                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3990   300005                     	org	3145733
  3991   300005  83                 	db	131
  3992                           
  3993                           ;Config register CONFIG4L @ 0x300006
  3994                           ;	Stack Full/Underflow Reset Enable bit
  3995                           ;	STVREN = 0x1, unprogrammed default
  3996                           ;	Single-Supply ICSP Enable bit
  3997                           ;	LVP = OFF, Single-Supply ICSP disabled
  3998                           ;	Extended Instruction Set Enable bit
  3999                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4000                           ;	Background Debugger Enable bit
  4001                           ;	DEBUG = 0x1, unprogrammed default
  4002   300006                     	org	3145734
  4003   300006  81                 	db	129
  4004                           
  4005                           ; Padding undefined space
  4006   300007                     	org	3145735
  4007   300007  FF                 	db	255
  4008                           
  4009                           ;Config register CONFIG5L @ 0x300008
  4010                           ;	unspecified, using default values
  4011                           ;	Code Protection bit
  4012                           ;	CP0 = 0x1, unprogrammed default
  4013                           ;	Code Protection bit
  4014                           ;	CP1 = 0x1, unprogrammed default
  4015                           ;	Code Protection bit
  4016                           ;	CP2 = 0x1, unprogrammed default
  4017                           ;	Code Protection bit
  4018                           ;	CP3 = 0x1, unprogrammed default
  4019   300008                     	org	3145736
  4020   300008  0F                 	db	15
  4021                           
  4022                           ;Config register CONFIG5H @ 0x300009
  4023                           ;	unspecified, using default values
  4024                           ;	Boot Block Code Protection bit
  4025                           ;	CPB = 0x1, unprogrammed default
  4026                           ;	Data EEPROM Code Protection bit
  4027                           ;	CPD = 0x1, unprogrammed default
  4028   300009                     	org	3145737
  4029   300009  C0                 	db	192
  4030                           
  4031                           ;Config register CONFIG6L @ 0x30000A
  4032                           ;	unspecified, using default values
  4033                           ;	Write Protection bit
  4034                           ;	WRT0 = 0x1, unprogrammed default
  4035                           ;	Write Protection bit
  4036                           ;	WRT1 = 0x1, unprogrammed default
  4037                           ;	Write Protection bit
  4038                           ;	WRT2 = 0x1, unprogrammed default
  4039                           ;	Write Protection bit
  4040                           ;	WRT3 = 0x1, unprogrammed default
  4041   30000A                     	org	3145738
  4042   30000A  0F                 	db	15
  4043                           
  4044                           ;Config register CONFIG6H @ 0x30000B
  4045                           ;	unspecified, using default values
  4046                           ;	Configuration Register Write Protection bit
  4047                           ;	WRTC = 0x1, unprogrammed default
  4048                           ;	Boot Block Write Protection bit
  4049                           ;	WRTB = 0x1, unprogrammed default
  4050                           ;	Data EEPROM Write Protection bit
  4051                           ;	WRTD = 0x1, unprogrammed default
  4052   30000B                     	org	3145739
  4053   30000B  E0                 	db	224
  4054                           
  4055                           ;Config register CONFIG7L @ 0x30000C
  4056                           ;	unspecified, using default values
  4057                           ;	Table Read Protection bit
  4058                           ;	EBTR0 = 0x1, unprogrammed default
  4059                           ;	Table Read Protection bit
  4060                           ;	EBTR1 = 0x1, unprogrammed default
  4061                           ;	Table Read Protection bit
  4062                           ;	EBTR2 = 0x1, unprogrammed default
  4063                           ;	Table Read Protection bit
  4064                           ;	EBTR3 = 0x1, unprogrammed default
  4065   30000C                     	org	3145740
  4066   30000C  0F                 	db	15
  4067                           
  4068                           ;Config register CONFIG7H @ 0x30000D
  4069                           ;	unspecified, using default values
  4070                           ;	Boot Block Table Read Protection bit
  4071                           ;	EBTRB = 0x1, unprogrammed default
  4072   30000D                     	org	3145741
  4073   30000D  40                 	db	64
  4074                           tosu	equ	0xFFF
  4075                           tosh	equ	0xFFE
  4076                           tosl	equ	0xFFD
  4077                           stkptr	equ	0xFFC
  4078                           pclatu	equ	0xFFB
  4079                           pclath	equ	0xFFA
  4080                           pcl	equ	0xFF9
  4081                           tblptru	equ	0xFF8
  4082                           tblptrh	equ	0xFF7
  4083                           tblptrl	equ	0xFF6
  4084                           tablat	equ	0xFF5
  4085                           prodh	equ	0xFF4
  4086                           prodl	equ	0xFF3
  4087                           indf0	equ	0xFEF
  4088                           postinc0	equ	0xFEE
  4089                           postdec0	equ	0xFED
  4090                           preinc0	equ	0xFEC
  4091                           plusw0	equ	0xFEB
  4092                           fsr0h	equ	0xFEA
  4093                           fsr0l	equ	0xFE9
  4094                           wreg	equ	0xFE8
  4095                           indf1	equ	0xFE7
  4096                           postinc1	equ	0xFE6
  4097                           postdec1	equ	0xFE5
  4098                           preinc1	equ	0xFE4
  4099                           plusw1	equ	0xFE3
  4100                           fsr1h	equ	0xFE2
  4101                           fsr1l	equ	0xFE1
  4102                           bsr	equ	0xFE0
  4103                           indf2	equ	0xFDF
  4104                           postinc2	equ	0xFDE
  4105                           postdec2	equ	0xFDD
  4106                           preinc2	equ	0xFDC
  4107                           plusw2	equ	0xFDB
  4108                           fsr2h	equ	0xFDA
  4109                           fsr2l	equ	0xFD9
  4110                           status	equ	0xFD8

Data Sizes:
    Strings     390
    Constant    13
    Data        4
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     60     103
    BANK0           128    108     108
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    count_characters@message	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), 

    display_sequence@sequence	PTR const unsigned char  size(2) Largest target is 100
		 -> main@read_buffer(BANK0[100]), STR_13(CODE[6]), STR_8(CODE[5]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    i2c_read@data	PTR unsigned char  size(1) Largest target is 100
		 -> main@read_buffer(BANK0[100]), 

    i2c_write@data	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), 

    main@error_message	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_13(CODE[6]), 

    main@message	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_1(CODE[41]), STR_10(CODE[25]), STR_11(CODE[42]), STR_12(CODE[25]), 
		 -> STR_2(CODE[41]), STR_3(CODE[55]), STR_4(CODE[60]), STR_5(CODE[24]), 
		 -> STR_6(CODE[45]), STR_7(CODE[33]), STR_9(CODE[29]), 

    S1155$buffer	PTR unsigned char  size(2) Largest target is 0

    S1155$source	PTR const unsigned char  size(2) Largest target is 0

    serial_memory_read@buffer	PTR unsigned char  size(1) Largest target is 100
		 -> main@read_buffer(BANK0[100]), 

    serial_memory_write@data	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 60
		 -> STR_1(CODE[41]), STR_10(CODE[25]), STR_11(CODE[42]), STR_12(CODE[25]), 
		 -> STR_2(CODE[41]), STR_3(CODE[55]), STR_4(CODE[60]), STR_5(CODE[24]), 
		 -> STR_6(CODE[45]), STR_7(CODE[33]), STR_9(CODE[29]), 

    vfpfcnvrt@cp_1219	PTR unsigned char  size(2) Largest target is 100
		 -> main@read_buffer(BANK0[100]), ?_printf(COMRAM[2]), STR_8(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 60
		 -> STR_1(CODE[41]), STR_10(CODE[25]), STR_11(CODE[42]), STR_12(CODE[25]), 
		 -> STR_2(CODE[41]), STR_3(CODE[55]), STR_4(CODE[60]), STR_5(CODE[24]), 
		 -> STR_6(CODE[45]), STR_7(CODE[33]), STR_9(CODE[29]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_1(CODE[41]), STR_10(CODE[25]), STR_11(CODE[42]), STR_12(CODE[25]), 
		 -> STR_2(CODE[41]), STR_3(CODE[55]), STR_4(CODE[60]), STR_5(CODE[24]), 
		 -> STR_6(CODE[45]), STR_7(CODE[33]), STR_9(CODE[29]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_serial_memory_write
    _serial_memory_write->_i2c_write
    _i2c_write->_printf
    _serial_memory_seek->_printf
    _serial_memory_read->_i2c_read
    _i2c_read->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               110   110      0   26115
                                             58 COMRAM     2     2      0
                                              0 BANK0    108   108      0
                         _I2C_INICIA
                   _count_characters
                   _display_sequence
                               _init
                           _initUART
                             _printf
                 _serial_memory_read
                 _serial_memory_seek
                _serial_memory_write
 ---------------------------------------------------------------------------------
 (1) _serial_memory_write                                  6     2      4    8259
                                             52 COMRAM     6     2      4
                          _i2c_write
                             _printf
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                           10     4      6    4290
                                             42 COMRAM    10     4      6
                          _I2C_START
                           _I2C_STOP
                      _I2C_TRANSMITE
                             _printf
 ---------------------------------------------------------------------------------
 (1) _serial_memory_seek                                   5     2      3    4060
                                             42 COMRAM     5     2      3
                             _printf
 ---------------------------------------------------------------------------------
 (1) _serial_memory_read                                   3     0      3    8326
                                             51 COMRAM     3     0      3
                           _i2c_read
                             _printf
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             9     4      5    4357
                                             42 COMRAM     9     4      5
                            _I2C_ACK
                           _I2C_NACK
                         _I2C_RECEBE
                        _I2C_RESTART
                          _I2C_START
                           _I2C_STOP
                      _I2C_TRANSMITE
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              11     3      8    3751
                                             33 COMRAM     9     1      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     2      5    2859
                                             26 COMRAM     7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           16    12      4    2501
                                             10 COMRAM    16    12      4
                            ___lwdiv
                            ___lwmod
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     956
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _I2C_TRANSMITE                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_STOP                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_START                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_RESTART                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_RECEBE                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_sequence                                    17    14      3    1226
                                              0 COMRAM    17    14      3
 ---------------------------------------------------------------------------------
 (1) _count_characters                                     8     6      2     146
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _I2C_INICIA                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_INICIA
   _count_characters
   _display_sequence
   _init
   _initUART
   _printf
     _vfprintf
       _vfpfcnvrt
         ___lwdiv
         ___lwmod
         _fputc
           _putch
   _serial_memory_read
     _i2c_read
       _I2C_ACK
       _I2C_NACK
       _I2C_RECEBE
       _I2C_RESTART
       _I2C_START
       _I2C_STOP
       _I2C_TRANSMITE
       _printf
     _printf
   _serial_memory_seek
     _printf
   _serial_memory_write
     _i2c_write
       _I2C_START
       _I2C_STOP
       _I2C_TRANSMITE
       _printf
     _printf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     6C      6C       5       84.4%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3C      67       1       81.1%
BITBIGSFRhhhhhh     36      0       0      16        0.0%
BITBIGSFRhll        15      0       0      21        0.0%
BITBIGSFRlllh        8      0       0      24        0.0%
BITBIGSFRhhhl        8      0       0      18        0.0%
BITBIGSFRhhl         7      0       0      19        0.0%
BITBIGSFRlh          6      0       0      22        0.0%
BITBIGSFRhhhhl       3      0       0      17        0.0%
BITBIGSFRllh         1      0       0      23        0.0%
BITBIGSFRhlh         1      0       0      20        0.0%
BITBIGSFRllll        1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D3      26        0.0%
DATA                 0      0      D3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue May 21 23:24:47 2024

                  _SSPSTATbits 0FC7                             l61 6140                             l55 6174  
                           l81 622C                             l58 612E                             l76 665C  
                           l68 6764                             l77 6686                             l85 6364  
                           l94 64DE                             l89 6442                            l100 62B8  
                          l101 62C0                            l104 615A                            l113 676E  
                          l201 60DE                            l210 61B6                            l204 619A  
                          l221 6102                            l150 6B1A                            l231 62C4  
                          l207 61A8                            l136 695C                            l240 6108  
                          l152 6B0C                            l234 62D2                            l218 60F4  
                          l243 6116                            l236 62E0                            l237 6312  
                          l157 6B5C                            l246 611C                            l183 60CC  
                          l192 60E2                            l249 612A                            l195 60F0  
                          l198 60D0                            l750 643C                            l743 6434  
                          l760 63C8                            l753 63C0                            l930 6192  
                          l981 6272                            l967 6E68                            l993 65A8  
                          u800 6396                            u801 6392                            u810 63AC  
                          u811 63A8                            u820 64F2                            u900 6CAC  
                          u821 64EE                            u901 6CA8                            u750 613C  
                          u830 6504                            u910 6CEE                            u751 6138  
                          u831 6500                            u911 6CEA                            u760 63E4  
                          u840 652C                            u920 6D24                            u761 63E0  
                          u841 6528                            u921 6D20                            u770 6402  
                          u850 6562                            u930 6D56                            u771 63FE  
                          u851 655E                            u931 6D52                            u780 641E  
                          u940 6D88                            u860 6B94                            u781 641A  
                          u941 6D84                            u861 6B90                            u790 6378  
                          u950 6DAA                            u870 6BDA                            u791 6374  
                          u951 6DA6                            u871 6BD6                            u960 6DE6  
                          u880 6C66                            u881 6C62                            u970 6E1E  
                          u890 6C76                            u891 6C72                            u980 6E2E  
                          u981 6E2A                            u990 626A                            u967 6DDC  
                          u991 6266                            u977 6E14                __end_of_I2C_ACK 6118  
                          wreg 0FE8                           l1521 63D2                           l1601 6C9A  
                         l1531 6408                           l1523 63E4                           l1515 612E  
                         l1611 6CEE                           l1533 641E                           l1525 63EC  
                         l1541 6366                           l1517 613C                           l1621 6D88  
                         l1613 6CFA                           l1605 6CB0                           l1701 673E  
                         l1535 6426                           l1527 63F4                           l1519 63CA  
                         l1551 63AC                           l1543 6378                           l1631 6DFA  
                         l1615 6D02                           l1607 6CC8                           l1711 65BA  
                         l1703 674A                           l1537 6428                           l1529 6402  
                         l1553 63B4                           l1545 6380                           l1561 6504  
                         l1633 6DFE                           l1617 6D24                           l1625 6D9A  
                         l1609 6CCC                           l1721 65E4                           l1713 65C0  
                         l1801 64B0                           l1705 674E                           l1539 642E  
                         l1555 63BA                           l1547 6388                           l1563 650E  
                         l1627 6DAA                           l1635 6E32                           l1619 6D56  
                         l1571 6B72                           l1651 626A                           l1731 6658  
                         l1715 65C6                           l1707 65AA                           l1811 64DC  
                         l1821 6142                           l1741 6160                           l1549 6396  
                         l1565 652C                           l1557 64E0                           l1629 6DC6  
                         l1581 6BBE                           l1573 6B94                           l1645 622E  
                         l1661 617A                           l1733 6660                           l1725 6600  
                         l1717 65CC                           l1709 65B6                           l1901 696A  
                         l1815 6274                           l1831 6786                           l1823 6156  
                         l1751 6170                           l1743 6168                           l1671 6310  
                         l1655 60E0                           l1567 6562                           l1559 64F2  
                         l1591 6C38                           l1583 6BDA                           l1575 6BA0  
                         l1639 6E42                           l1647 623A                           l1735 666C  
                         l1727 662E                           l1719 65D6                           l1807 64C0  
                         l1911 69C6                           l1903 6974                           l1817 6288  
                         l1841 6800                           l1833 67BC                           l1825 6158  
                         l1753 6172                           l1745 616A                           l1665 60F2  
                         l1657 6196                           l1593 6C54                           l1585 6BF2  
                         l1577 6BAC                           l1649 624E                           l1729 6650  
                         l1737 6670                           l1809 64D4                           l1681 6694  
                         l1921 6A36                           l1913 69D0                           l1905 697C  
                         l1819 6290                           l1851 6854                           l1843 6810  
                         l1835 67CC                           l1827 6766                           l1747 616C  
                         l1739 615C                           l1675 6104                           l1667 60CE  
                         l1595 6C66                           l1587 6C10                           l1579 6BB0  
                         l1659 6176                           l1763 6212                           l1755 61EE  
                         l1683 6698                           l1771 6334                           l1931 6A92  
                         l1923 6A46                           l1915 69F4                           l1907 6990  
                         l1845 6822                           l1853 6860                           l1837 67DC  
                         l1829 677E                           l1749 616E                           l1677 6118  
                         l1669 62C2                           l1597 6C7A                           l1589 6C14  
                         l1765 622A                           l1757 6200                           l1693 66D6  
                         l1685 669E                           l1773 6340                           l1941 6AD6  
                         l1933 6A9C                           l1925 6A50                           l1917 6A0C  
                         l1909 69BA                           l1871 68AC                           l1847 6832  
                         l1839 67EE                           l1855 6862                           l1599 6C98  
                         l1759 620C                           l1791 647A                           l1783 643E  
                         l1695 66F2                           l1687 66A4                           l1679 6688  
                         l1951 6B4E                           l1943 6AEE                           l1935 6AB0  
                         l1927 6A70                           l1919 6A16                           l1881 6920  
                         l1873 68C4                           l1865 68A8                           l1857 6872  
                         l1849 6844                           l1785 644E                           l1697 672A  
                         l1689 66AA                           l1777 6346                           l1769 6314  
                         l1945 6AFC                           l1937 6AB8                           l1929 6A7C  
                         l1891 6948                           l1883 6924                           l1875 68CC  
                         l1859 68A4                           l1787 645E                           l1699 672E  
                         l1779 6362                           l1947 6B28                           l1939 6AC8  
                         l1885 6926                           l1877 68EC                           l1893 694A  
                         l1789 646E                           l1797 6480                           l1949 6B40  
                         l1895 60BE                           l1887 6936                           l1879 6910  
                         l1799 649E                           l1897 60C0                           l1889 6938  
                         l1899 695E                           STR_1 6F42                           STR_2 6F42  
                         STR_3 6EB4                           STR_4 6E78                           STR_5 6FDB  
                         STR_6 6EEB                           STR_7 6F6B                           STR_8 6FF9  
                         STR_9 6F8C                           u1000 60F0                           u1001 60EC  
                         u1010 61A8                           u1011 61A4                           u1020 61B6  
                         u1100 6764                           u1021 61B2                           u1101 6760  
                         u1030 6102                           u1110 65FC                           u1031 60FE  
                         u1111 65F8                           u1200 67DC                           u1040 60DE  
                         u1120 6650                           u1201 67D8                           u1041 60DA  
                         u1121 664C                           u1210 6800                           u1050 62D2  
                         u1130 6686                           u1211 67FC                           u1051 62CE  
                         u1131 6682                           u1300 695C                           u1220 6822  
                         u1060 62E0                           u1140 6200                           u1301 6958  
                         u1221 681E                           u1061 62DC                           u1141 61FC  
                         u1230 6844                           u1070 6116                           u1150 6334  
                         u1310 69BA                           u1231 6840                           u1071 6112  
                         u1151 6330                           u1311 69B6                           u1240 6872  
                         u1080 612A                           u1160 64B0                           u1400 6B4E  
                         u1320 69F4                           u1241 686E                           u1081 6126  
                         u1161 64AC                           u1401 6B4A                           u1321 69F0  
                         u1170 62B8                           u1250 68A4                           u1090 66D2  
                         u1410 6B6A                           u1330 6A36                           u1171 62B4  
                         u1251 68A0                           u1091 66CE                           u1411 6B66  
                         u1331 6A32                           u1260 68C4                           u1180 67BA  
                         u1340 6A70                           u1261 68C0                           u1341 6A6C  
                         u1190 67CC                           u1350 6AB0                           _LATB 0F8A  
                         u1191 67C8                           u1351 6AAC                           u1280 6936  
                         u1360 6AD6                           _LATD 0F8C                           u1281 6932  
                         u1361 6AD2                           u1290 6948                           u1274 6902  
                         u1370 6AFC                           u1291 6944                           u1275 68FE  
                         u1187 67B0                           u1371 6AF8                           u1380 6B1A  
                         u1381 6B16                           u1390 6B28                           u1391 6B24  
                         u1447 6AE0                           u1457 6B32                           u1467 6734  
                         u1477 6916                    main@message 00E8               __end_of_I2C_NACK 612C  
                         _dbuf 003D               __end_of_I2C_STOP 6104                           _main 695E  
                         _init 6142                           _prec 005F                           fsr1h 0FE2  
                         fsr2h 0FDA                           indf1 0FE7                           indf2 0FDF  
                         fsr1l 0FE1                           fsr2l 0FD9                           start 0000  
                   i2c_write@i 0033                   ___param_bank 0000              main@error_message 00E4  
                        ?_main 0001                          ?_init 0001                          STR_10 6FC2  
                        STR_11 6F18                          STR_12 6FA9                          STR_13 6FF3  
              __end_of___lwdiv 643E                __end_of___lwmod 63CA                   vfpfcnvrt@fmt 000D  
                        _SPBRG 0FAF                          _TRISB 0F93                          _TRISC 0F94  
                        _TRISD 0F95                   main@erro_mem 00E6                          _TXREG 0FAD  
            __end_of_I2C_START 60F2                          _flags 0063                          _fputc 64E0  
                        _width 005D                          _putch 612C       __end_of_display_sequence 695E  
                        tablat 0FF5                          status 0FD8                  _I2C_TRANSMITE 6194  
  serial_memory_read@num_bytes 0035                __initialization 61B8                   __end_of_main 6B72  
                 __end_of_init 615C               __end_of_i2c_read 6688                      ??_I2C_ACK 0001  
             _count_characters 6274                         ??_main 003B                         ??_init 0001  
        display_sequence@F2951 0064                  __activetblptr 0002                   ??_I2C_INICIA 0001  
                 ??_I2C_RECEBE 0001          display_sequence@j_470 000F                         _ADCON1 0FC1  
                       ?_fputc 0002                         ?_putch 0001                   i2c_read@data 002D  
               ?_I2C_TRANSMITE 0001                  vfpfcnvrt@done 0011                         _SPBRGH 0FB0  
                       _SSPADD 0FC8                         _SSPBUF 0FC9             __end_of_I2C_INICIA 60CE  
           __end_of_I2C_RECEBE 6314                   vfprintf@cfmt 0020               __end_of_initUART 6176  
                    ??___lwdiv 0005                      ??___lwmod 0005                         clear_0 61DE  
                       isa$std 0001                         _printf 6176                      ?_I2C_NACK 0001  
                    ?_I2C_STOP 0001                         fputc@c 0002                   __pdataCOMRAM 0064  
                 __mediumconst 6E6A                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8               __end_of_vfprintf 6274                     __accesstop 0080  
      __end_of__initialization 61E4                  ___rparam_used 0001                _current_pointer 0061  
               __pcstackCOMRAM 0001                  __end_of_fputc 65AA                  __end_of_putch 6142  
 serial_memory_write@num_bytes 0037                     ??_I2C_NACK 0001              __end_of_i2c_write 6766  
                   ??_I2C_STOP 0001                        ??_fputc 0006                ??_I2C_TRANSMITE 0001  
                      ??_putch 0001             main@message_length 00EA                      ?_i2c_read 002B  
                ??_I2C_RESTART 0001                        _I2C_ACK 6104         display_sequence@digits 0009  
                      ?_printf 0022         display_sequence@length 0003                        _SSPCON1 0FC6  
                      _SSPCON2 0FC5                        _SSPSTAT 0FC7              ?_display_sequence 0001  
                    ?_initUART 0001       __end_of_count_characters 62C2                     ??_i2c_read 0030  
                    _I2C_START 60E0             ??_display_sequence 0004        count_characters@message 0001  
                      __Hparam 0000                        __Lparam 0000            __end_of_I2C_RESTART 60E0  
                      ___lwdiv 63CA                        ___lwmod 6366                      ?_vfprintf 001B  
                      __pcinit 61B8                        __ramtop 0600                i2c_read@address 002B  
                      __ptext0 695E                        __ptext1 6314                        __ptext2 6688  
                      __ptext3 643E                        __ptext4 61EE                        __ptext5 65AA  
                      __ptext6 6176                        __ptext7 622E                        __ptext8 6B72  
                      __ptext9 64E0        serial_memory_write@data 0035       display_sequence@sequence 0001  
         end_of_initialization 61E4                     ??_initUART 0001                     ?_I2C_START 0001  
                      fputc@fp 0004                  __Lmediumconst 6E6A               vfpfcnvrt@cp_1219 0012  
        I2C_TRANSMITE@DADO_I2C 0001              __end_of_vfpfcnvrt 6E6A     __end_of_serial_memory_read 622E  
   __end_of_serial_memory_seek 64E0                      _RCSTAbits 0FAB                        postdec1 0FE5  
                      postdec2 0FDD                        postinc0 0FEE                        postinc1 0FE6  
                      postinc2 0FDE               vfpfcnvrt@convarg 0016                     ??_vfprintf 0020  
                    _PORTBbits 0F81                  i2c_write@data 002D                      _TRISBbits 0F93  
                    _TRISCbits 0F94                      i2c_read@i 0032                      _TXSTAbits 0FAC  
                  _I2C_RESTART 60CE            _serial_memory_write 6314                    vfpfcnvrt@ap 000E  
                  vfpfcnvrt@cp 0014                    vfpfcnvrt@fp 000B                    _BAUDCONbits 0FB8  
                __pidataCOMRAM 60BA                 __end_of_printf 6194           ?_serial_memory_write 0035  
          start_initialization 61B8       serial_memory_read@buffer 0034                      _i2c_write 6688  
                  ??_I2C_START 0001          count_characters@count 0005                    vfprintf@fmt 001D  
                  I2C_RECEBE@x 0001                       ?_I2C_ACK 0001                       ??_printf 002A  
     serial_memory_seek@offset 002B       serial_memory_seek@origin 002D          ??_serial_memory_write 0039  
                  __pbssCOMRAM 003D                  __pcstackBANK0 0080                     ?_i2c_write 002B  
           display_sequence@ch 0010          __end_of_I2C_TRANSMITE 61B8              ?_count_characters 0001  
           ??_count_characters 0003               ___lwdiv@dividend 0001                  __pmediumconst 6E6A  
                     ?___lwdiv 0001                       ?___lwmod 0001                       _I2C_NACK 6118  
                     _I2C_STOP 60F2               ___lwdiv@quotient 0005        display_sequence@refresh 000D  
               i2c_read@length 002E                      _vfpfcnvrt 6B72                     _I2C_INICIA 60BE  
                   _I2C_RECEBE 62C2             _serial_memory_read 61EE             _serial_memory_seek 643E  
              main@read_buffer 0080                    ??_i2c_write 0031                     vfpfcnvrt@c 001A  
serial_memory_seek@new_pointer 002E                      copy_data0 61CC            ?_serial_memory_read 0034  
          ?_serial_memory_seek 002B                       _i2c_read 65AA            __end_of_segment_map 6E78  
                 ?_I2C_RESTART 0001                       __Hrparam 0000                     vfprintf@ap 001F  
                     __Lrparam 0000                     vfprintf@fp 001B           ??_serial_memory_read 0037  
         ??_serial_memory_seek 002E                     ?_vfpfcnvrt 000B              display_sequence@i 000E  
            display_sequence@j 0011                ___lwdiv@divisor 0003                ___lwdiv@counter 0007  
                     __ptext10 612C                       __ptext11 6366                       __ptext20 615C  
                     __ptext12 63CA                       __ptext21 6142                       __ptext13 6194  
                     __ptext22 6766                       __ptext14 60F2                       __ptext23 6274  
                     __ptext15 60E0                       __ptext24 60BE                       __ptext16 60CE  
                     __ptext17 62C2                       __ptext18 6118                       __ptext19 6104  
                     _initUART 615C                       isa$xinst 0000               _display_sequence 6766  
                     _vfprintf 622E                      printf@fmt 0022                    ?_I2C_INICIA 0001  
                  ?_I2C_RECEBE 0001                      putch@byte 0001                    _segment_map 6E6B  
            count_characters@i 0007               ___lwmod@dividend 0001                       printf@ap 002A  
  __end_of_serial_memory_write 6366                    ??_vfpfcnvrt 000F                ___lwmod@divisor 0003  
              ___lwmod@counter 0005               i2c_write@address 002B                    _SSPCON2bits 0FC5  
              i2c_write@length 002F  

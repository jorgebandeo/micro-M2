

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue May 21 21:56:47 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    41   000000                     
    42                           ; Version 2.20
    43                           ; Generated 12/02/2020 GMT
    44                           ; 
    45                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F4520 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76   000000                     
    77                           	psect	idataBANK0
    78   006316                     __pidataBANK0:
    79                           	callstack 0
    80                           
    81                           ;initializer for main@F2959
    82   006316  01                 	db	1
    83   006317  02                 	db	2
    84   006318  03                 	db	3
    85   006319  04                 	db	4
    86                           
    87                           	psect	mediumconst
    88   006E60                     __pmediumconst:
    89                           	callstack 0
    90   006E60  00                 	db	0
    91   006E61                     _segment_map:
    92                           	callstack 0
    93   006E61  3F                 	db	63
    94   006E62  06                 	db	6
    95   006E63  5B                 	db	91
    96   006E64  4F                 	db	79
    97   006E65  66                 	db	102
    98   006E66  6D                 	db	109
    99   006E67  7D                 	db	125
   100   006E68  07                 	db	7
   101   006E69  7F                 	db	127
   102   006E6A  6F                 	db	111
   103   006E6B  77                 	db	119
   104   006E6C  7C                 	db	124
   105   006E6D  39                 	db	57
   106   006E6E  5E                 	db	94
   107   006E6F  79                 	db	121
   108   006E70  71                 	db	113
   109   006E71  6F                 	db	111
   110   006E72  74                 	db	116
   111   006E73  04                 	db	4
   112   006E74  1E                 	db	30
   113   006E75  38                 	db	56
   114   006E76  37                 	db	55
   115   006E77  3F                 	db	63
   116   006E78  73                 	db	115
   117   006E79  6D                 	db	109
   118   006E7A  3E                 	db	62
   119   006E7B  3B                 	db	59
   120   006E7C                     __end_of_segment_map:
   121                           	callstack 0
   122   000000                     _SSPSTAT	set	4039
   123   000000                     _SSPADD	set	4040
   124   000000                     _SSPCON2bits	set	4037
   125   000000                     _SSPSTATbits	set	4039
   126   000000                     _TRISC	set	3988
   127   000000                     _TRISBbits	set	3987
   128   000000                     _LATB	set	3978
   129   000000                     _LATD	set	3980
   130   000000                     _TRISB	set	3987
   131   000000                     _TRISCbits	set	3988
   132   000000                     _TRISD	set	3989
   133   000000                     _RCSTAbits	set	4011
   134   000000                     _TXSTAbits	set	4012
   135   000000                     _SPBRG	set	4015
   136   000000                     _BAUDCONbits	set	4024
   137   000000                     _SPBRGH	set	4016
   138   000000                     _SSPCON2	set	4037
   139   000000                     _SSPCON1	set	4038
   140   000000                     _TXREG	set	4013
   141   000000                     _SSPBUF	set	4041
   142   006E7C                     STR_4:
   143   006E7C  45                 	db	69	;'E'
   144   006E7D  72                 	db	114	;'r'
   145   006E7E  72                 	db	114	;'r'
   146   006E7F  6F                 	db	111	;'o'
   147   006E80  3A                 	db	58	;':'
   148   006E81  20                 	db	32
   149   006E82  54                 	db	84	;'T'
   150   006E83  65                 	db	101	;'e'
   151   006E84  6E                 	db	110	;'n'
   152   006E85  74                 	db	116	;'t'
   153   006E86  61                 	db	97	;'a'
   154   006E87  74                 	db	116	;'t'
   155   006E88  69                 	db	105	;'i'
   156   006E89  76                 	db	118	;'v'
   157   006E8A  61                 	db	97	;'a'
   158   006E8B  20                 	db	32
   159   006E8C  64                 	db	100	;'d'
   160   006E8D  65                 	db	101	;'e'
   161   006E8E  20                 	db	32
   162   006E8F  65                 	db	101	;'e'
   163   006E90  73                 	db	115	;'s'
   164   006E91  63                 	db	99	;'c'
   165   006E92  72                 	db	114	;'r'
   166   006E93  65                 	db	101	;'e'
   167   006E94  76                 	db	118	;'v'
   168   006E95  65                 	db	101	;'e'
   169   006E96  72                 	db	114	;'r'
   170   006E97  20                 	db	32
   171   006E98  61                 	db	97	;'a'
   172   006E99  6C                 	db	108	;'l'
   173   006E9A  65                 	db	101	;'e'
   174   006E9B  6D                 	db	109	;'m'
   175   006E9C  20                 	db	32
   176   006E9D  64                 	db	100	;'d'
   177   006E9E  61                 	db	97	;'a'
   178   006E9F  20                 	db	32
   179   006EA0  63                 	db	99	;'c'
   180   006EA1  61                 	db	97	;'a'
   181   006EA2  70                 	db	112	;'p'
   182   006EA3  61                 	db	97	;'a'
   183   006EA4  63                 	db	99	;'c'
   184   006EA5  69                 	db	105	;'i'
   185   006EA6  64                 	db	100	;'d'
   186   006EA7  61                 	db	97	;'a'
   187   006EA8  64                 	db	100	;'d'
   188   006EA9  65                 	db	101	;'e'
   189   006EAA  20                 	db	32
   190   006EAB  64                 	db	100	;'d'
   191   006EAC  61                 	db	97	;'a'
   192   006EAD  20                 	db	32
   193   006EAE  6D                 	db	109	;'m'
   194   006EAF  65                 	db	101	;'e'
   195   006EB0  6D                 	db	109	;'m'
   196   006EB1  6F                 	db	111	;'o'
   197   006EB2  72                 	db	114	;'r'
   198   006EB3  69                 	db	105	;'i'
   199   006EB4  61                 	db	97	;'a'
   200   006EB5  0D                 	db	13
   201   006EB6  0A                 	db	10
   202   006EB7  00                 	db	0
   203   006EB8                     STR_3:
   204   006EB8  45                 	db	69	;'E'
   205   006EB9  72                 	db	114	;'r'
   206   006EBA  72                 	db	114	;'r'
   207   006EBB  6F                 	db	111	;'o'
   208   006EBC  3A                 	db	58	;':'
   209   006EBD  20                 	db	32
   210   006EBE  54                 	db	84	;'T'
   211   006EBF  65                 	db	101	;'e'
   212   006EC0  6E                 	db	110	;'n'
   213   006EC1  74                 	db	116	;'t'
   214   006EC2  61                 	db	97	;'a'
   215   006EC3  74                 	db	116	;'t'
   216   006EC4  69                 	db	105	;'i'
   217   006EC5  76                 	db	118	;'v'
   218   006EC6  61                 	db	97	;'a'
   219   006EC7  20                 	db	32
   220   006EC8  64                 	db	100	;'d'
   221   006EC9  65                 	db	101	;'e'
   222   006ECA  20                 	db	32
   223   006ECB  6C                 	db	108	;'l'
   224   006ECC  65                 	db	101	;'e'
   225   006ECD  72                 	db	114	;'r'
   226   006ECE  20                 	db	32
   227   006ECF  61                 	db	97	;'a'
   228   006ED0  6C                 	db	108	;'l'
   229   006ED1  65                 	db	101	;'e'
   230   006ED2  6D                 	db	109	;'m'
   231   006ED3  20                 	db	32
   232   006ED4  64                 	db	100	;'d'
   233   006ED5  61                 	db	97	;'a'
   234   006ED6  20                 	db	32
   235   006ED7  63                 	db	99	;'c'
   236   006ED8  61                 	db	97	;'a'
   237   006ED9  70                 	db	112	;'p'
   238   006EDA  61                 	db	97	;'a'
   239   006EDB  63                 	db	99	;'c'
   240   006EDC  69                 	db	105	;'i'
   241   006EDD  64                 	db	100	;'d'
   242   006EDE  61                 	db	97	;'a'
   243   006EDF  64                 	db	100	;'d'
   244   006EE0  65                 	db	101	;'e'
   245   006EE1  20                 	db	32
   246   006EE2  64                 	db	100	;'d'
   247   006EE3  61                 	db	97	;'a'
   248   006EE4  20                 	db	32
   249   006EE5  6D                 	db	109	;'m'
   250   006EE6  65                 	db	101	;'e'
   251   006EE7  6D                 	db	109	;'m'
   252   006EE8  6F                 	db	111	;'o'
   253   006EE9  72                 	db	114	;'r'
   254   006EEA  69                 	db	105	;'i'
   255   006EEB  61                 	db	97	;'a'
   256   006EEC  0D                 	db	13
   257   006EED  0A                 	db	10
   258   006EEE  00                 	db	0
   259   006EEF                     STR_6:
   260   006EEF  45                 	db	69	;'E'
   261   006EF0  72                 	db	114	;'r'
   262   006EF1  72                 	db	114	;'r'
   263   006EF2  6F                 	db	111	;'o'
   264   006EF3  3A                 	db	58	;':'
   265   006EF4  20                 	db	32
   266   006EF5  50                 	db	80	;'P'
   267   006EF6  6F                 	db	111	;'o'
   268   006EF7  6E                 	db	110	;'n'
   269   006EF8  74                 	db	116	;'t'
   270   006EF9  65                 	db	101	;'e'
   271   006EFA  69                 	db	105	;'i'
   272   006EFB  72                 	db	114	;'r'
   273   006EFC  6F                 	db	111	;'o'
   274   006EFD  20                 	db	32
   275   006EFE  66                 	db	102	;'f'
   276   006EFF  6F                 	db	111	;'o'
   277   006F00  72                 	db	114	;'r'
   278   006F01  61                 	db	97	;'a'
   279   006F02  20                 	db	32
   280   006F03  64                 	db	100	;'d'
   281   006F04  6F                 	db	111	;'o'
   282   006F05  73                 	db	115	;'s'
   283   006F06  20                 	db	32
   284   006F07  6C                 	db	108	;'l'
   285   006F08  69                 	db	105	;'i'
   286   006F09  6D                 	db	109	;'m'
   287   006F0A  69                 	db	105	;'i'
   288   006F0B  74                 	db	116	;'t'
   289   006F0C  65                 	db	101	;'e'
   290   006F0D  73                 	db	115	;'s'
   291   006F0E  20                 	db	32
   292   006F0F  64                 	db	100	;'d'
   293   006F10  61                 	db	97	;'a'
   294   006F11  20                 	db	32
   295   006F12  6D                 	db	109	;'m'
   296   006F13  65                 	db	101	;'e'
   297   006F14  6D                 	db	109	;'m'
   298   006F15  6F                 	db	111	;'o'
   299   006F16  72                 	db	114	;'r'
   300   006F17  69                 	db	105	;'i'
   301   006F18  61                 	db	97	;'a'
   302   006F19  0D                 	db	13
   303   006F1A  0A                 	db	10
   304   006F1B  00                 	db	0
   305   006F1C                     STR_11:
   306   006F1C  53                 	db	83	;'S'
   307   006F1D  75                 	db	117	;'u'
   308   006F1E  63                 	db	99	;'c'
   309   006F1F  65                 	db	101	;'e'
   310   006F20  73                 	db	115	;'s'
   311   006F21  73                 	db	115	;'s'
   312   006F22  6F                 	db	111	;'o'
   313   006F23  20                 	db	32
   314   006F24  6E                 	db	110	;'n'
   315   006F25  6F                 	db	111	;'o'
   316   006F26  20                 	db	32
   317   006F27  72                 	db	114	;'r'
   318   006F28  65                 	db	101	;'e'
   319   006F29  70                 	db	112	;'p'
   320   006F2A  6F                 	db	111	;'o'
   321   006F2B  73                 	db	115	;'s'
   322   006F2C  69                 	db	105	;'i'
   323   006F2D  63                 	db	99	;'c'
   324   006F2E  69                 	db	105	;'i'
   325   006F2F  6F                 	db	111	;'o'
   326   006F30  6E                 	db	110	;'n'
   327   006F31  61                 	db	97	;'a'
   328   006F32  6D                 	db	109	;'m'
   329   006F33  65                 	db	101	;'e'
   330   006F34  6E                 	db	110	;'n'
   331   006F35  74                 	db	116	;'t'
   332   006F36  6F                 	db	111	;'o'
   333   006F37  20                 	db	32
   334   006F38  64                 	db	100	;'d'
   335   006F39  6F                 	db	111	;'o'
   336   006F3A  20                 	db	32
   337   006F3B  70                 	db	112	;'p'
   338   006F3C  6F                 	db	111	;'o'
   339   006F3D  6E                 	db	110	;'n'
   340   006F3E  74                 	db	116	;'t'
   341   006F3F  65                 	db	101	;'e'
   342   006F40  69                 	db	105	;'i'
   343   006F41  72                 	db	114	;'r'
   344   006F42  6F                 	db	111	;'o'
   345   006F43  0D                 	db	13
   346   006F44  0A                 	db	10
   347   006F45  00                 	db	0
   348   006F46                     STR_1:
   349   006F46  45                 	db	69	;'E'
   350   006F47  6E                 	db	110	;'n'
   351   006F48  64                 	db	100	;'d'
   352   006F49  65                 	db	101	;'e'
   353   006F4A  72                 	db	114	;'r'
   354   006F4B  65                 	db	101	;'e'
   355   006F4C  63                 	db	99	;'c'
   356   006F4D  6F                 	db	111	;'o'
   357   006F4E  20                 	db	32
   358   006F4F  61                 	db	97	;'a'
   359   006F50  74                 	db	116	;'t'
   360   006F51  75                 	db	117	;'u'
   361   006F52  61                 	db	97	;'a'
   362   006F53  6C                 	db	108	;'l'
   363   006F54  3A                 	db	58	;':'
   364   006F55  20                 	db	32
   365   006F56  25                 	db	37
   366   006F57  75                 	db	117	;'u'
   367   006F58  2C                 	db	44
   368   006F59  20                 	db	32
   369   006F5A  4C                 	db	76	;'L'
   370   006F5B  65                 	db	101	;'e'
   371   006F5C  69                 	db	105	;'i'
   372   006F5D  74                 	db	116	;'t'
   373   006F5E  75                 	db	117	;'u'
   374   006F5F  72                 	db	114	;'r'
   375   006F60  61                 	db	97	;'a'
   376   006F61  20                 	db	32
   377   006F62  5B                 	db	91	;'['
   378   006F63  25                 	db	37
   379   006F64  75                 	db	117	;'u'
   380   006F65  5D                 	db	93	;']'
   381   006F66  20                 	db	32
   382   006F67  3D                 	db	61	;'='
   383   006F68  20                 	db	32
   384   006F69  25                 	db	37
   385   006F6A  75                 	db	117	;'u'
   386   006F6B  20                 	db	32
   387   006F6C  0D                 	db	13
   388   006F6D  0A                 	db	10
   389   006F6E  00                 	db	0
   390   006F6F                     STR_7:
   391   006F6F  53                 	db	83	;'S'
   392   006F70  65                 	db	101	;'e'
   393   006F71  65                 	db	101	;'e'
   394   006F72  6B                 	db	107	;'k'
   395   006F73  3A                 	db	58	;':'
   396   006F74  20                 	db	32
   397   006F75  50                 	db	80	;'P'
   398   006F76  6F                 	db	111	;'o'
   399   006F77  73                 	db	115	;'s'
   400   006F78  69                 	db	105	;'i'
   401   006F79  63                 	db	99	;'c'
   402   006F7A  61                 	db	97	;'a'
   403   006F7B  6F                 	db	111	;'o'
   404   006F7C  20                 	db	32
   405   006F7D  61                 	db	97	;'a'
   406   006F7E  6C                 	db	108	;'l'
   407   006F7F  74                 	db	116	;'t'
   408   006F80  65                 	db	101	;'e'
   409   006F81  72                 	db	114	;'r'
   410   006F82  61                 	db	97	;'a'
   411   006F83  64                 	db	100	;'d'
   412   006F84  61                 	db	97	;'a'
   413   006F85  20                 	db	32
   414   006F86  70                 	db	112	;'p'
   415   006F87  61                 	db	97	;'a'
   416   006F88  72                 	db	114	;'r'
   417   006F89  61                 	db	97	;'a'
   418   006F8A  20                 	db	32
   419   006F8B  25                 	db	37
   420   006F8C  75                 	db	117	;'u'
   421   006F8D  0D                 	db	13
   422   006F8E  0A                 	db	10
   423   006F8F  00                 	db	0
   424   006F90                     STR_9:
   425   006F90  45                 	db	69	;'E'
   426   006F91  72                 	db	114	;'r'
   427   006F92  72                 	db	114	;'r'
   428   006F93  6F                 	db	111	;'o'
   429   006F94  3A                 	db	58	;':'
   430   006F95  20                 	db	32
   431   006F96  6D                 	db	109	;'m'
   432   006F97  65                 	db	101	;'e'
   433   006F98  6E                 	db	110	;'n'
   434   006F99  73                 	db	115	;'s'
   435   006F9A  61                 	db	97	;'a'
   436   006F9B  67                 	db	103	;'g'
   437   006F9C  65                 	db	101	;'e'
   438   006F9D  6D                 	db	109	;'m'
   439   006F9E  20                 	db	32
   440   006F9F  6D                 	db	109	;'m'
   441   006FA0  75                 	db	117	;'u'
   442   006FA1  69                 	db	105	;'i'
   443   006FA2  74                 	db	116	;'t'
   444   006FA3  6F                 	db	111	;'o'
   445   006FA4  20                 	db	32
   446   006FA5  6C                 	db	108	;'l'
   447   006FA6  6F                 	db	111	;'o'
   448   006FA7  6E                 	db	110	;'n'
   449   006FA8  67                 	db	103	;'g'
   450   006FA9  61                 	db	97	;'a'
   451   006FAA  2E                 	db	46
   452   006FAB  0A                 	db	10
   453   006FAC  00                 	db	0
   454   006FAD                     STR_12:
   455   006FAD  53                 	db	83	;'S'
   456   006FAE  75                 	db	117	;'u'
   457   006FAF  63                 	db	99	;'c'
   458   006FB0  65                 	db	101	;'e'
   459   006FB1  73                 	db	115	;'s'
   460   006FB2  73                 	db	115	;'s'
   461   006FB3  6F                 	db	111	;'o'
   462   006FB4  20                 	db	32
   463   006FB5  6E                 	db	110	;'n'
   464   006FB6  61                 	db	97	;'a'
   465   006FB7  20                 	db	32
   466   006FB8  6C                 	db	108	;'l'
   467   006FB9  65                 	db	101	;'e'
   468   006FBA  69                 	db	105	;'i'
   469   006FBB  74                 	db	116	;'t'
   470   006FBC  75                 	db	117	;'u'
   471   006FBD  72                 	db	114	;'r'
   472   006FBE  61                 	db	97	;'a'
   473   006FBF  3A                 	db	58	;':'
   474   006FC0  20                 	db	32
   475   006FC1  25                 	db	37
   476   006FC2  73                 	db	115	;'s'
   477   006FC3  0D                 	db	13
   478   006FC4  0A                 	db	10
   479   006FC5  00                 	db	0
   480   006FC6                     STR_10:
   481   006FC6  53                 	db	83	;'S'
   482   006FC7  75                 	db	117	;'u'
   483   006FC8  63                 	db	99	;'c'
   484   006FC9  65                 	db	101	;'e'
   485   006FCA  73                 	db	115	;'s'
   486   006FCB  73                 	db	115	;'s'
   487   006FCC  6F                 	db	111	;'o'
   488   006FCD  20                 	db	32
   489   006FCE  6E                 	db	110	;'n'
   490   006FCF  61                 	db	97	;'a'
   491   006FD0  20                 	db	32
   492   006FD1  65                 	db	101	;'e'
   493   006FD2  73                 	db	115	;'s'
   494   006FD3  63                 	db	99	;'c'
   495   006FD4  72                 	db	114	;'r'
   496   006FD5  69                 	db	105	;'i'
   497   006FD6  74                 	db	116	;'t'
   498   006FD7  61                 	db	97	;'a'
   499   006FD8  3A                 	db	58	;':'
   500   006FD9  20                 	db	32
   501   006FDA  25                 	db	37
   502   006FDB  73                 	db	115	;'s'
   503   006FDC  0D                 	db	13
   504   006FDD  0A                 	db	10
   505   006FDE  00                 	db	0
   506   006FDF                     STR_5:
   507   006FDF  45                 	db	69	;'E'
   508   006FE0  72                 	db	114	;'r'
   509   006FE1  72                 	db	114	;'r'
   510   006FE2  6F                 	db	111	;'o'
   511   006FE3  3A                 	db	58	;':'
   512   006FE4  20                 	db	32
   513   006FE5  4F                 	db	79	;'O'
   514   006FE6  72                 	db	114	;'r'
   515   006FE7  69                 	db	105	;'i'
   516   006FE8  67                 	db	103	;'g'
   517   006FE9  65                 	db	101	;'e'
   518   006FEA  6D                 	db	109	;'m'
   519   006FEB  20                 	db	32
   520   006FEC  69                 	db	105	;'i'
   521   006FED  6E                 	db	110	;'n'
   522   006FEE  76                 	db	118	;'v'
   523   006FEF  61                 	db	97	;'a'
   524   006FF0  6C                 	db	108	;'l'
   525   006FF1  69                 	db	105	;'i'
   526   006FF2  64                 	db	100	;'d'
   527   006FF3  61                 	db	97	;'a'
   528   006FF4  0D                 	db	13
   529   006FF5  0A                 	db	10
   530   006FF6  00                 	db	0
   531   006FF7                     STR_8:
   532   006FF7  31                 	db	49	;'1'
   533   006FF8  32                 	db	50	;'2'
   534   006FF9  33                 	db	51	;'3'
   535   006FFA  34                 	db	52	;'4'
   536   006FFB  35                 	db	53	;'5'
   537   006FFC  36                 	db	54	;'6'
   538   006FFD  37                 	db	55	;'7'
   539   006FFE  00                 	db	0
   540   006FFF  00                 	db	0	; dummy byte at the end
   541   000000                     
   542                           ; #config settings
   543                           
   544                           	psect	cinit
   545   00640E                     __pcinit:
   546                           	callstack 0
   547   00640E                     start_initialization:
   548                           	callstack 0
   549   00640E                     __initialization:
   550                           	callstack 0
   551                           
   552                           ; Initialize objects allocated to BANK0 (4 bytes)
   553                           ; load TBLPTR registers with __pidataBANK0
   554   00640E  0E16               	movlw	low __pidataBANK0
   555   006410  6EF6               	movwf	tblptrl,c
   556   006412  0E63               	movlw	high __pidataBANK0
   557   006414  6EF7               	movwf	tblptrh,c
   558   006416  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   559   006418  6EF8               	movwf	tblptru,c
   560   00641A  EE00  F0ED         	lfsr	0,__pdataBANK0
   561   00641E  EE10 F004          	lfsr	1,4
   562   006422                     copy_data0:
   563   006422  0009               	tblrd		*+
   564   006424  CFF5 FFEE          	movff	tablat,postinc0
   565   006428  50E5               	movf	postdec1,w,c
   566   00642A  50E1               	movf	fsr1l,w,c
   567   00642C  E1FA               	bnz	copy_data0
   568                           
   569                           ; Clear objects allocated to COMRAM (43 bytes)
   570   00642E  EE00  F03D         	lfsr	0,__pbssCOMRAM
   571   006432  0E2B               	movlw	43
   572   006434                     clear_0:
   573   006434  6AEE               	clrf	postinc0,c
   574   006436  06E8               	decf	wreg,f,c
   575   006438  E1FD               	bnz	clear_0
   576   00643A                     end_of_initialization:
   577                           	callstack 0
   578   00643A                     __end_of__initialization:
   579                           	callstack 0
   580   00643A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   581   00643C  6EF8               	movwf	tblptru,c
   582   00643E  0100               	movlb	0
   583   006440  EF0D  F035         	goto	_main	;jump to C main() function
   584                           
   585                           	psect	bssCOMRAM
   586   00003D                     __pbssCOMRAM:
   587                           	callstack 0
   588   00003D                     _dbuf:
   589                           	callstack 0
   590   00003D                     	ds	32
   591   00005D                     	ds	4
   592   000061                     _width:
   593                           	callstack 0
   594   000061                     	ds	2
   595   000063                     _prec:
   596                           	callstack 0
   597   000063                     	ds	2
   598   000065                     _current_pointer:
   599                           	callstack 0
   600   000065                     	ds	2
   601   000067                     _flags:
   602                           	callstack 0
   603   000067                     	ds	1
   604                           
   605                           	psect	dataBANK0
   606   0000ED                     __pdataBANK0:
   607                           	callstack 0
   608   0000ED                     main@F2959:
   609                           	callstack 0
   610   0000ED                     	ds	4
   611                           
   612                           	psect	cstackBANK0
   613   000080                     __pcstackBANK0:
   614                           	callstack 0
   615   000080                     main@read_buffer:
   616                           	callstack 0
   617                           
   618                           ; 100 bytes @ 0x0
   619   000080                     	ds	100
   620   0000E4                     main@digits:
   621                           	callstack 0
   622                           
   623                           ; 4 bytes @ 0x64
   624   0000E4                     	ds	4
   625   0000E8                     main@message:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x68
   629   0000E8                     	ds	2
   630   0000EA                     main@message_length:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x6A
   634   0000EA                     	ds	2
   635   0000EC                     main@i:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0x6C
   639   0000EC                     	ds	1
   640                           
   641                           	psect	cstackCOMRAM
   642   000001                     __pcstackCOMRAM:
   643                           	callstack 0
   644   000001                     ?_count_characters:
   645                           	callstack 0
   646   000001                     ?___lwdiv:
   647                           	callstack 0
   648   000001                     ?___lwmod:
   649                           	callstack 0
   650   000001                     putch@byte:
   651                           	callstack 0
   652   000001                     display_digit@position:
   653                           	callstack 0
   654   000001                     I2C_TRANSMITE@DADO_I2C:
   655                           	callstack 0
   656   000001                     I2C_RECEBE@x:
   657                           	callstack 0
   658   000001                     count_characters@message:
   659                           	callstack 0
   660   000001                     ___lwdiv@dividend:
   661                           	callstack 0
   662   000001                     ___lwmod@dividend:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x0
   666   000001                     	ds	1
   667   000002                     ??_display_digit:
   668   000002                     fputc@c:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x1
   672   000002                     	ds	1
   673   000003                     ??_count_characters:
   674   000003                     ___lwdiv@divisor:
   675                           	callstack 0
   676   000003                     ___lwmod@divisor:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x2
   680   000003                     	ds	1
   681   000004                     display_digit@digit:
   682                           	callstack 0
   683   000004                     fputc@fp:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x3
   687   000004                     	ds	1
   688   000005                     ___lwmod@counter:
   689                           	callstack 0
   690   000005                     count_characters@count:
   691                           	callstack 0
   692   000005                     ___lwdiv@quotient:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x4
   696   000005                     	ds	1
   697   000006                     ??_fputc:
   698                           
   699                           ; 1 bytes @ 0x5
   700   000006                     	ds	1
   701   000007                     ___lwdiv@counter:
   702                           	callstack 0
   703   000007                     count_characters@i:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x6
   707   000007                     	ds	4
   708   00000B                     vfpfcnvrt@fp:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0xA
   712   00000B                     	ds	2
   713   00000D                     vfpfcnvrt@fmt:
   714                           	callstack 0
   715                           
   716                           ; 1 bytes @ 0xC
   717   00000D                     	ds	1
   718   00000E                     vfpfcnvrt@ap:
   719                           	callstack 0
   720                           
   721                           ; 1 bytes @ 0xD
   722   00000E                     	ds	1
   723   00000F                     ??_vfpfcnvrt:
   724                           
   725                           ; 1 bytes @ 0xE
   726   00000F                     	ds	2
   727   000011                     vfpfcnvrt@done:
   728                           	callstack 0
   729                           
   730                           ; 1 bytes @ 0x10
   731   000011                     	ds	1
   732   000012                     vfpfcnvrt@cp_1137:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x11
   736   000012                     	ds	2
   737   000014                     vfpfcnvrt@cp:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x13
   741   000014                     	ds	2
   742   000016                     vfpfcnvrt@convarg:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0x15
   746   000016                     	ds	4
   747   00001A                     vfpfcnvrt@c:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0x19
   751   00001A                     	ds	1
   752   00001B                     ?_vfprintf:
   753                           	callstack 0
   754   00001B                     vfprintf@fp:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x1A
   758   00001B                     	ds	2
   759   00001D                     vfprintf@fmt:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x1C
   763   00001D                     	ds	2
   764   00001F                     vfprintf@ap:
   765                           	callstack 0
   766                           
   767                           ; 1 bytes @ 0x1E
   768   00001F                     	ds	1
   769   000020                     vfprintf@cfmt:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x1F
   773   000020                     	ds	2
   774   000022                     ?_printf:
   775                           	callstack 0
   776   000022                     printf@fmt:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x21
   780   000022                     	ds	8
   781   00002A                     printf@ap:
   782                           	callstack 0
   783                           
   784                           ; 1 bytes @ 0x29
   785   00002A                     	ds	1
   786   00002B                     i2c_write@address:
   787                           	callstack 0
   788   00002B                     i2c_read@address:
   789                           	callstack 0
   790   00002B                     serial_memory_seek@offset:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x2A
   794   00002B                     	ds	2
   795   00002D                     i2c_read@data:
   796                           	callstack 0
   797   00002D                     serial_memory_seek@origin:
   798                           	callstack 0
   799   00002D                     i2c_write@data:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x2C
   803   00002D                     	ds	1
   804   00002E                     i2c_read@length:
   805                           	callstack 0
   806   00002E                     serial_memory_seek@new_pointer:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x2D
   810   00002E                     	ds	1
   811   00002F                     i2c_write@length:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x2E
   815   00002F                     	ds	1
   816   000030                     ??_i2c_read:
   817                           
   818                           ; 1 bytes @ 0x2F
   819   000030                     	ds	1
   820   000031                     ??_i2c_write:
   821                           
   822                           ; 1 bytes @ 0x30
   823   000031                     	ds	1
   824   000032                     i2c_read@i:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x31
   828   000032                     	ds	1
   829   000033                     i2c_write@i:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x32
   833   000033                     	ds	1
   834   000034                     serial_memory_read@buffer:
   835                           	callstack 0
   836                           
   837                           ; 1 bytes @ 0x33
   838   000034                     	ds	1
   839   000035                     serial_memory_read@num_bytes:
   840                           	callstack 0
   841   000035                     serial_memory_write@data:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x34
   845   000035                     	ds	2
   846   000037                     serial_memory_write@num_bytes:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x36
   850   000037                     	ds	2
   851   000039                     ??_serial_memory_write:
   852                           
   853                           ; 1 bytes @ 0x38
   854   000039                     	ds	2
   855   00003B                     ??_main:
   856                           
   857                           ; 1 bytes @ 0x3A
   858   00003B                     	ds	2
   859                           
   860 ;;
   861 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   862 ;;
   863 ;; *************** function _main *****************
   864 ;; Defined at:
   865 ;;		line 228 in file "main.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;		None
   868 ;; Auto vars:     Size  Location     Type
   869 ;;  i               1  108[BANK0 ] unsigned char 
   870 ;;  read_buffer   100    0[BANK0 ] unsigned char [100]
   871 ;;  digits          4  100[BANK0 ] unsigned char [4]
   872 ;;  message_leng    2  106[BANK0 ] int 
   873 ;;  message         2  104[BANK0 ] PTR const unsigned char 
   874 ;;		 -> STR_8(8), 
   875 ;; Return value:  Size  Location     Type
   876 ;;                  2  123[None  ] int 
   877 ;; Registers used:
   878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   884 ;;      Params:         0       0       0       0       0       0       0
   885 ;;      Locals:         0     109       0       0       0       0       0
   886 ;;      Temps:          2       0       0       0       0       0       0
   887 ;;      Totals:         2     109       0       0       0       0       0
   888 ;;Total ram usage:      111 bytes
   889 ;; Hardware stack levels required when called: 7
   890 ;; This function calls:
   891 ;;		_I2C_INICIA
   892 ;;		_count_characters
   893 ;;		_display_digit
   894 ;;		_init
   895 ;;		_initUART
   896 ;;		_printf
   897 ;;		_serial_memory_read
   898 ;;		_serial_memory_seek
   899 ;;		_serial_memory_write
   900 ;; This function is called by:
   901 ;;		Startup code after reset
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           	psect	text0
   906   006A1A                     __ptext0:
   907                           	callstack 0
   908   006A1A                     _main:
   909                           	callstack 24
   910   006A1A                     
   911                           ;main.c: 229:     }
   912   006A1A  ECD9  F031         	call	_initUART	;wreg free
   913                           
   914                           ;main.c: 230: 
   915   006A1E  EC8D  F031         	call	_I2C_INICIA	;wreg free
   916   006A22                     
   917                           ;main.c: 231: 
   918   006A22  ECB0  F031         	call	_init	;wreg free
   919   006A26                     
   920                           ;main.c: 233:         printf("Sucesso no reposicionamento do ponteiro\r\n");
   921   006A26  0EF7               	movlw	low STR_8
   922   006A28  0100               	movlb	0	; () banked
   923   006A2A  6FE8               	movwf	main@message& (0+255),b
   924   006A2C  0E6F               	movlw	high STR_8
   925   006A2E  6FE9               	movwf	(main@message+1)& (0+255),b
   926   006A30                     
   927                           ; BSR set to: 0
   928                           ;main.c: 235: 
   929   006A30  C0E8  F001         	movff	main@message,count_characters@message
   930   006A34  C0E9  F002         	movff	main@message+1,count_characters@message+1
   931   006A38  EC65  F032         	call	_count_characters	;wreg free
   932   006A3C  C001  F0EA         	movff	?_count_characters,main@message_length
   933   006A40  C002  F0EB         	movff	?_count_characters+1,main@message_length+1
   934   006A44                     
   935                           ;main.c: 237:     if (serial_memory_read(read_buffer, (uint16_t)sizeof(read_buffer)) == 
      +                          0) {
   936   006A44  0E01               	movlw	1
   937   006A46  0100               	movlb	0	; () banked
   938   006A48  25EA               	addwf	main@message_length& (0+255),w,b
   939   006A4A  6E3B               	movwf	??_main^0,c
   940   006A4C  0E00               	movlw	0
   941   006A4E  21EB               	addwfc	(main@message_length+1)& (0+255),w,b
   942   006A50  6E3C               	movwf	(??_main+1)^0,c
   943   006A52  BE3C               	btfsc	(??_main+1)^0,7,c
   944   006A54  EF35  F035         	goto	u1091
   945   006A58  503C               	movf	(??_main+1)^0,w,c
   946   006A5A  E109               	bnz	u1090
   947   006A5C  0E65               	movlw	101
   948   006A5E  5C3B               	subwf	??_main^0,w,c
   949   006A60  A0D8               	btfss	status,0,c
   950   006A62  EF35  F035         	goto	u1091
   951   006A66  EF37  F035         	goto	u1090
   952   006A6A                     u1091:
   953   006A6A  EF3F  F035         	goto	l1804
   954   006A6E                     u1090:
   955   006A6E                     
   956                           ; BSR set to: 0
   957                           ;main.c: 239:         printf("Sucesso na leitura: %s\r\n", read_buffer);
   958   006A6E  0E90               	movlw	low STR_9
   959   006A70  6E22               	movwf	printf@fmt^0,c
   960   006A72  0E6F               	movlw	high STR_9
   961   006A74  6E23               	movwf	(printf@fmt+1)^0,c
   962   006A76  ECE6  F031         	call	_printf	;wreg free
   963   006A7A  EFB2  F035         	goto	l125
   964   006A7E                     l1804:
   965                           
   966                           ; BSR set to: 0
   967                           ;main.c: 244: ;main.c: 246: 
   968   006A7E  C0E8  F035         	movff	main@message,serial_memory_write@data
   969   006A82  C0E9  F036         	movff	main@message+1,serial_memory_write@data+1
   970   006A86  C0EA  F037         	movff	main@message_length,serial_memory_write@num_bytes
   971   006A8A  C0EB  F038         	movff	main@message_length+1,serial_memory_write@num_bytes+1
   972   006A8E  ECB5  F032         	call	_serial_memory_write	;wreg free
   973   006A92  0900               	iorlw	0
   974   006A94  A4D8               	btfss	status,2,c
   975   006A96  EF4F  F035         	goto	u1101
   976   006A9A  EF51  F035         	goto	u1100
   977   006A9E                     u1101:
   978   006A9E  EF5B  F035         	goto	l126
   979   006AA2                     u1100:
   980   006AA2                     
   981                           ;main.c: 247:     while (1) {
   982   006AA2  0EC6               	movlw	low STR_10
   983   006AA4  6E22               	movwf	printf@fmt^0,c
   984   006AA6  0E6F               	movlw	high STR_10
   985   006AA8  6E23               	movwf	(printf@fmt+1)^0,c
   986   006AAA  C0E8  F024         	movff	main@message,?_printf+2
   987   006AAE  C0E9  F025         	movff	main@message+1,?_printf+3
   988   006AB2  ECE6  F031         	call	_printf	;wreg free
   989   006AB6                     l126:
   990                           
   991                           ;main.c: 251:         }
   992   006AB6  0E00               	movlw	0
   993   006AB8  6E2C               	movwf	(serial_memory_seek@offset+1)^0,c
   994   006ABA  0E00               	movlw	0
   995   006ABC  6E2B               	movwf	serial_memory_seek@offset^0,c
   996   006ABE  0E00               	movlw	0
   997   006AC0  6E2D               	movwf	serial_memory_seek@origin^0,c
   998   006AC2  EC79  F033         	call	_serial_memory_seek	;wreg free
   999   006AC6  0900               	iorlw	0
  1000   006AC8  A4D8               	btfss	status,2,c
  1001   006ACA  EF69  F035         	goto	u1111
  1002   006ACE  EF6B  F035         	goto	u1110
  1003   006AD2                     u1111:
  1004   006AD2  EF71  F035         	goto	l127
  1005   006AD6                     u1110:
  1006   006AD6                     
  1007                           ;main.c: 252:     }
  1008   006AD6  0E1C               	movlw	low STR_11
  1009   006AD8  6E22               	movwf	printf@fmt^0,c
  1010   006ADA  0E6F               	movlw	high STR_11
  1011   006ADC  6E23               	movwf	(printf@fmt+1)^0,c
  1012   006ADE  ECE6  F031         	call	_printf	;wreg free
  1013   006AE2                     l127:
  1014   006AE2  0E80               	movlw	low main@read_buffer
  1015   006AE4  6E34               	movwf	serial_memory_read@buffer^0,c
  1016   006AE6  0E00               	movlw	0
  1017   006AE8  6E36               	movwf	(serial_memory_read@num_bytes+1)^0,c
  1018   006AEA  0E64               	movlw	100
  1019   006AEC  6E35               	movwf	serial_memory_read@num_bytes^0,c
  1020   006AEE  EC22  F032         	call	_serial_memory_read	;wreg free
  1021   006AF2  0900               	iorlw	0
  1022   006AF4  A4D8               	btfss	status,2,c
  1023   006AF6  EF7F  F035         	goto	u1121
  1024   006AFA  EF81  F035         	goto	u1120
  1025   006AFE                     u1121:
  1026   006AFE  EF90  F035         	goto	l1814
  1027   006B02                     u1120:
  1028   006B02  0100               	movlb	0	; () banked
  1029   006B04  51EA               	movf	main@message_length& (0+255),w,b
  1030   006B06  0F80               	addlw	low main@read_buffer
  1031   006B08  6ED9               	movwf	fsr2l,c
  1032   006B0A  6ADA               	clrf	fsr2h,c
  1033   006B0C  6ADF               	clrf	indf2,c
  1034   006B0E                     
  1035                           ; BSR set to: 0
  1036   006B0E  0EAD               	movlw	low STR_12
  1037   006B10  6E22               	movwf	printf@fmt^0,c
  1038   006B12  0E6F               	movlw	high STR_12
  1039   006B14  6E23               	movwf	(printf@fmt+1)^0,c
  1040   006B16  0E80               	movlw	low main@read_buffer
  1041   006B18  6E24               	movwf	(?_printf+2)^0,c
  1042   006B1A  6A25               	clrf	(?_printf+3)^0,c
  1043   006B1C  ECE6  F031         	call	_printf	;wreg free
  1044   006B20                     l1814:
  1045   006B20  C0ED  F0E4         	movff	main@F2959,main@digits
  1046   006B24  C0EE  F0E5         	movff	main@F2959+1,main@digits+1
  1047   006B28  C0EF  F0E6         	movff	main@F2959+2,main@digits+2
  1048   006B2C  C0F0  F0E7         	movff	main@F2959+3,main@digits+3
  1049   006B30                     l1816:
  1050   006B30  0E00               	movlw	0
  1051   006B32  0100               	movlb	0	; () banked
  1052   006B34  6FEC               	movwf	main@i& (0+255),b
  1053   006B36                     l1822:
  1054                           
  1055                           ; BSR set to: 0
  1056   006B36  0E0F               	movlw	15
  1057   006B38  168A               	andwf	138,f,c	;volatile
  1058   006B3A                     
  1059                           ; BSR set to: 0
  1060   006B3A  C0EC  F001         	movff	main@i,display_digit@position
  1061   006B3E  51EC               	movf	main@i& (0+255),w,b
  1062   006B40  0FE4               	addlw	low main@digits
  1063   006B42  6ED9               	movwf	fsr2l,c
  1064   006B44  6ADA               	clrf	fsr2h,c
  1065   006B46  50DF               	movf	indf2,w,c
  1066   006B48  ECDE  F032         	call	_display_digit
  1067   006B4C  0100               	movlb	0	; () banked
  1068   006B4E  2BEC               	incf	main@i& (0+255),f,b
  1069   006B50                     
  1070                           ; BSR set to: 0
  1071   006B50  0E03               	movlw	3
  1072   006B52  65EC               	cpfsgt	main@i& (0+255),b
  1073   006B54  EFAE  F035         	goto	u1131
  1074   006B58  EFB0  F035         	goto	u1130
  1075   006B5C                     u1131:
  1076   006B5C  EF9B  F035         	goto	l1822
  1077   006B60                     u1130:
  1078   006B60  EF98  F035         	goto	l1816
  1079   006B64                     l125:
  1080   006B64  EF00  F000         	goto	start
  1081   006B68                     __end_of_main:
  1082                           	callstack 0
  1083                           
  1084 ;; *************** function _serial_memory_write *****************
  1085 ;; Defined at:
  1086 ;;		line 142 in file "main.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;  data            2   52[COMRAM] PTR const unsigned char 
  1089 ;;		 -> STR_8(8), 
  1090 ;;  num_bytes       2   54[COMRAM] unsigned short 
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;		None
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      unsigned char 
  1095 ;; Registers used:
  1096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1102 ;;      Params:         4       0       0       0       0       0       0
  1103 ;;      Locals:         0       0       0       0       0       0       0
  1104 ;;      Temps:          2       0       0       0       0       0       0
  1105 ;;      Totals:         6       0       0       0       0       0       0
  1106 ;;Total ram usage:        6 bytes
  1107 ;; Hardware stack levels used: 1
  1108 ;; Hardware stack levels required when called: 6
  1109 ;; This function calls:
  1110 ;;		_i2c_write
  1111 ;;		_printf
  1112 ;; This function is called by:
  1113 ;;		_main
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	text1
  1118   00656A                     __ptext1:
  1119                           	callstack 0
  1120   00656A                     _serial_memory_write:
  1121                           	callstack 24
  1122   00656A                     
  1123                           ;main.c: 143:     switch (origin) {
  1124   00656A  5037               	movf	serial_memory_write@num_bytes^0,w,c
  1125   00656C  2465               	addwf	_current_pointer^0,w,c
  1126   00656E  6E39               	movwf	??_serial_memory_write^0,c
  1127   006570  5038               	movf	(serial_memory_write@num_bytes+1)^0,w,c
  1128   006572  2066               	addwfc	(_current_pointer+1)^0,w,c
  1129   006574  6E3A               	movwf	(??_serial_memory_write+1)^0,c
  1130   006576  0439               	decf	??_serial_memory_write^0,w,c
  1131   006578  0E80               	movlw	128
  1132   00657A  583A               	subwfb	(??_serial_memory_write+1)^0,w,c
  1133   00657C  A0D8               	btfss	status,0,c
  1134   00657E  EFC3  F032         	goto	u1001
  1135   006582  EFC5  F032         	goto	u1000
  1136   006586                     u1001:
  1137   006586  EFCE  F032         	goto	l1696
  1138   00658A                     u1000:
  1139   00658A                     
  1140                           ;main.c: 144:         case 0:
  1141   00658A  0E7C               	movlw	low STR_4
  1142   00658C  6E22               	movwf	printf@fmt^0,c
  1143   00658E  0E6E               	movlw	high STR_4
  1144   006590  6E23               	movwf	(printf@fmt+1)^0,c
  1145   006592  ECE6  F031         	call	_printf	;wreg free
  1146   006596                     
  1147                           ;main.c: 145:             new_pointer = (uint16_t)offset;
  1148   006596  0EFF               	movlw	255
  1149   006598  EFDD  F032         	goto	l81
  1150   00659C                     l1696:
  1151                           
  1152                           ;main.c: 148:             new_pointer = (uint16_t)(current_pointer) + (uint16_t)(offset)
      +                          ;
  1153   00659C  C065  F02B         	movff	_current_pointer,i2c_write@address
  1154   0065A0  C066  F02C         	movff	_current_pointer+1,i2c_write@address+1
  1155   0065A4  C035  F02D         	movff	serial_memory_write@data,i2c_write@data
  1156   0065A8  C036  F02E         	movff	serial_memory_write@data+1,i2c_write@data+1
  1157   0065AC  C037  F02F         	movff	serial_memory_write@num_bytes,i2c_write@length
  1158   0065B0  C038  F030         	movff	serial_memory_write@num_bytes+1,i2c_write@length+1
  1159   0065B4  EC9E  F034         	call	_i2c_write	;wreg free
  1160   0065B8                     
  1161                           ;main.c: 150:         case 2:
  1162   0065B8  0E00               	movlw	0
  1163   0065BA                     l81:
  1164   0065BA  0012               	return		;funcret
  1165   0065BC                     __end_of_serial_memory_write:
  1166                           	callstack 0
  1167                           
  1168 ;; *************** function _i2c_write *****************
  1169 ;; Defined at:
  1170 ;;		line 85 in file "main.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;  address         2   42[COMRAM] unsigned short 
  1173 ;;  data            2   44[COMRAM] PTR const unsigned char 
  1174 ;;		 -> STR_8(8), 
  1175 ;;  length          2   46[COMRAM] unsigned short 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;  i               2   50[COMRAM] unsigned short 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1187 ;;      Params:         6       0       0       0       0       0       0
  1188 ;;      Locals:         2       0       0       0       0       0       0
  1189 ;;      Temps:          2       0       0       0       0       0       0
  1190 ;;      Totals:        10       0       0       0       0       0       0
  1191 ;;Total ram usage:       10 bytes
  1192 ;; Hardware stack levels used: 1
  1193 ;; Hardware stack levels required when called: 5
  1194 ;; This function calls:
  1195 ;;		_I2C_START
  1196 ;;		_I2C_STOP
  1197 ;;		_I2C_TRANSMITE
  1198 ;;		_printf
  1199 ;; This function is called by:
  1200 ;;		_serial_memory_write
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text2
  1205   00693C                     __ptext2:
  1206                           	callstack 0
  1207   00693C                     _i2c_write:
  1208                           	callstack 24
  1209   00693C                     
  1210                           ;main.c: 86:     for (uint16_t i = 0; i < length; i++) {
  1211   00693C  0E00               	movlw	0
  1212   00693E  6E34               	movwf	(i2c_write@i+1)^0,c
  1213   006940  0E00               	movlw	0
  1214   006942  6E33               	movwf	i2c_write@i^0,c
  1215   006944  EF01  F035         	goto	l1624
  1216   006948                     l1600:
  1217                           
  1218                           ;main.c: 87:         I2C_START();
  1219   006948  EC9E  F031         	call	_I2C_START	;wreg free
  1220   00694C                     
  1221                           ;main.c: 88:         I2C_TRANSMITE(0xA0);
  1222   00694C  0EA0               	movlw	160
  1223   00694E  ECF5  F031         	call	_I2C_TRANSMITE
  1224   006952                     
  1225                           ;main.c: 89:         I2C_TRANSMITE((address >> 8) & 0xFF);
  1226   006952  502C               	movf	(i2c_write@address+1)^0,w,c
  1227   006954  ECF5  F031         	call	_I2C_TRANSMITE
  1228   006958                     
  1229                           ;main.c: 90:         I2C_TRANSMITE(address & 0xFF);
  1230   006958  502B               	movf	i2c_write@address^0,w,c
  1231   00695A  ECF5  F031         	call	_I2C_TRANSMITE
  1232   00695E                     
  1233                           ;main.c: 91:         I2C_RESTART();
  1234   00695E  5033               	movf	i2c_write@i^0,w,c
  1235   006960  242D               	addwf	i2c_write@data^0,w,c
  1236   006962  6E31               	movwf	??_i2c_write^0,c
  1237   006964  5034               	movf	(i2c_write@i+1)^0,w,c
  1238   006966  202E               	addwfc	(i2c_write@data+1)^0,w,c
  1239   006968  6E32               	movwf	(??_i2c_write+1)^0,c
  1240   00696A  C031  FFF6         	movff	??_i2c_write,tblptrl
  1241   00696E  C032  FFF7         	movff	??_i2c_write+1,tblptrh
  1242   006972                     	if	0	;tblptru may be non-zero
  1243   006972                     	endif
  1244   006972                     	if	0	;tblptru may be non-zero
  1245   006972                     	endif
  1246   006972  0008               	tblrd		*
  1247   006974  50F5               	movf	tablat,w,c
  1248   006976  0AFF               	xorlw	255
  1249   006978  A4D8               	btfss	status,2,c
  1250   00697A  EFC1  F034         	goto	u941
  1251   00697E  EFC3  F034         	goto	u940
  1252   006982                     u941:
  1253   006982  EFC5  F034         	goto	l1612
  1254   006986                     u940:
  1255   006986  EF0C  F035         	goto	l64
  1256   00698A                     l1612:
  1257                           
  1258                           ;main.c: 94:         if ((uint8_t)(data[i]) == 255 ){
  1259   00698A  5033               	movf	i2c_write@i^0,w,c
  1260   00698C  242D               	addwf	i2c_write@data^0,w,c
  1261   00698E  6E31               	movwf	??_i2c_write^0,c
  1262   006990  5034               	movf	(i2c_write@i+1)^0,w,c
  1263   006992  202E               	addwfc	(i2c_write@data+1)^0,w,c
  1264   006994  6E32               	movwf	(??_i2c_write+1)^0,c
  1265   006996  C031  FFF6         	movff	??_i2c_write,tblptrl
  1266   00699A  C032  FFF7         	movff	??_i2c_write+1,tblptrh
  1267   00699E                     	if	0	;tblptru may be non-zero
  1268   00699E                     	endif
  1269   00699E                     	if	0	;tblptru may be non-zero
  1270   00699E                     	endif
  1271   00699E  0008               	tblrd		*
  1272   0069A0  50F5               	movf	tablat,w,c
  1273   0069A2  ECF5  F031         	call	_I2C_TRANSMITE
  1274   0069A6                     
  1275                           ;main.c: 95:             break;
  1276   0069A6  0E46               	movlw	low STR_1
  1277   0069A8  6E22               	movwf	printf@fmt^0,c
  1278   0069AA  0E6F               	movlw	high STR_1
  1279   0069AC  6E23               	movwf	(printf@fmt+1)^0,c
  1280   0069AE  C02B  F024         	movff	i2c_write@address,?_printf+2
  1281   0069B2  C02C  F025         	movff	i2c_write@address+1,?_printf+3
  1282   0069B6  C033  F026         	movff	i2c_write@i,?_printf+4
  1283   0069BA  C034  F027         	movff	i2c_write@i+1,?_printf+5
  1284   0069BE  5033               	movf	i2c_write@i^0,w,c
  1285   0069C0  242D               	addwf	i2c_write@data^0,w,c
  1286   0069C2  6E31               	movwf	??_i2c_write^0,c
  1287   0069C4  5034               	movf	(i2c_write@i+1)^0,w,c
  1288   0069C6  202E               	addwfc	(i2c_write@data+1)^0,w,c
  1289   0069C8  6E32               	movwf	(??_i2c_write+1)^0,c
  1290   0069CA  C031  FFF6         	movff	??_i2c_write,tblptrl
  1291   0069CE  C032  FFF7         	movff	??_i2c_write+1,tblptrh
  1292   0069D2                     	if	0	;tblptru may be non-zero
  1293   0069D2                     	endif
  1294   0069D2                     	if	0	;tblptru may be non-zero
  1295   0069D2                     	endif
  1296   0069D2  0008               	tblrd		*
  1297   0069D4  50F5               	movf	tablat,w,c
  1298   0069D6  6E28               	movwf	(?_printf+6)^0,c
  1299   0069D8  6A29               	clrf	(?_printf+7)^0,c
  1300   0069DA  ECE6  F031         	call	_printf	;wreg free
  1301   0069DE                     
  1302                           ;main.c: 96:         }
  1303   0069DE  ECA7  F031         	call	_I2C_STOP	;wreg free
  1304   0069E2                     
  1305                           ;main.c: 97:         printf("Endereco atual: %u, Leitura [%u] = %u \r\n", address, i, (u
      +                          int8_t)(data[i]));
  1306   0069E2  0E68               	movlw	104
  1307   0069E4  6E31               	movwf	??_i2c_write^0,c
  1308   0069E6  0EE4               	movlw	228
  1309   0069E8                     u1167:
  1310   0069E8  2EE8               	decfsz	wreg,f,c
  1311   0069EA  D7FE               	bra	u1167
  1312   0069EC  2E31               	decfsz	??_i2c_write^0,f,c
  1313   0069EE  D7FC               	bra	u1167
  1314   0069F0  D000               	nop2	
  1315   0069F2                     
  1316                           ;main.c: 98:         if (i < length - 1) {
  1317   0069F2  0E02               	movlw	2
  1318   0069F4  242B               	addwf	i2c_write@address^0,w,c
  1319   0069F6  6E2B               	movwf	i2c_write@address^0,c
  1320   0069F8  0E00               	movlw	0
  1321   0069FA  202C               	addwfc	(i2c_write@address+1)^0,w,c
  1322   0069FC  6E2C               	movwf	(i2c_write@address+1)^0,c
  1323   0069FE                     
  1324                           ;main.c: 99:             I2C_ACK();
  1325   0069FE  4A33               	infsnz	i2c_write@i^0,f,c
  1326   006A00  2A34               	incf	(i2c_write@i+1)^0,f,c
  1327   006A02                     l1624:
  1328   006A02  502F               	movf	i2c_write@length^0,w,c
  1329   006A04  5C33               	subwf	i2c_write@i^0,w,c
  1330   006A06  5030               	movf	(i2c_write@length+1)^0,w,c
  1331   006A08  5834               	subwfb	(i2c_write@i+1)^0,w,c
  1332   006A0A  A0D8               	btfss	status,0,c
  1333   006A0C  EF0A  F035         	goto	u951
  1334   006A10  EF0C  F035         	goto	u950
  1335   006A14                     u951:
  1336   006A14  EFA4  F034         	goto	l1600
  1337   006A18                     u950:
  1338   006A18                     l64:
  1339   006A18  0012               	return		;funcret
  1340   006A1A                     __end_of_i2c_write:
  1341                           	callstack 0
  1342                           
  1343 ;; *************** function _serial_memory_seek *****************
  1344 ;; Defined at:
  1345 ;;		line 159 in file "main.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;  offset          2   42[COMRAM] short 
  1348 ;;  origin          1   44[COMRAM] unsigned char 
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;  new_pointer     2   45[COMRAM] unsigned short 
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  1    wreg      unsigned char 
  1353 ;; Registers used:
  1354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1360 ;;      Params:         3       0       0       0       0       0       0
  1361 ;;      Locals:         2       0       0       0       0       0       0
  1362 ;;      Temps:          0       0       0       0       0       0       0
  1363 ;;      Totals:         5       0       0       0       0       0       0
  1364 ;;Total ram usage:        5 bytes
  1365 ;; Hardware stack levels used: 1
  1366 ;; Hardware stack levels required when called: 5
  1367 ;; This function calls:
  1368 ;;		_printf
  1369 ;; This function is called by:
  1370 ;;		_main
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text3
  1375   0066F2                     __ptext3:
  1376                           	callstack 0
  1377   0066F2                     _serial_memory_seek:
  1378                           	callstack 25
  1379   0066F2                     
  1380                           ;main.c: 160:         return (uint8_t)-1;;main.c: 162: 
  1381   0066F2  EF9A  F033         	goto	l1716
  1382   0066F6                     l85:
  1383                           
  1384                           ;main.c: 164:     current_pointer = new_pointer;
  1385   0066F6  C02B  F02E         	movff	serial_memory_seek@offset,serial_memory_seek@new_pointer
  1386   0066FA  C02C  F02F         	movff	serial_memory_seek@offset+1,serial_memory_seek@new_pointer+1
  1387                           
  1388                           ;main.c: 165:     return 0;
  1389   0066FE  EFA9  F033         	goto	l1718
  1390   006702                     l1704:
  1391                           
  1392                           ;main.c: 167: 
  1393   006702  5065               	movf	_current_pointer^0,w,c
  1394   006704  242B               	addwf	serial_memory_seek@offset^0,w,c
  1395   006706  6E2E               	movwf	serial_memory_seek@new_pointer^0,c
  1396   006708  5066               	movf	(_current_pointer+1)^0,w,c
  1397   00670A  202C               	addwfc	(serial_memory_seek@offset+1)^0,w,c
  1398   00670C  6E2F               	movwf	(serial_memory_seek@new_pointer+1)^0,c
  1399                           
  1400                           ;main.c: 168: int count_characters(const char *message) {
  1401   00670E  EFA9  F033         	goto	l1718
  1402   006712                     l1706:
  1403                           
  1404                           ;main.c: 170: 
  1405   006712  0E00               	movlw	0
  1406   006714  242B               	addwf	serial_memory_seek@offset^0,w,c
  1407   006716  6E2E               	movwf	serial_memory_seek@new_pointer^0,c
  1408   006718  0E80               	movlw	128
  1409   00671A  202C               	addwfc	(serial_memory_seek@offset+1)^0,w,c
  1410   00671C  6E2F               	movwf	(serial_memory_seek@new_pointer+1)^0,c
  1411                           
  1412                           ;main.c: 171: 
  1413   00671E  EFA9  F033         	goto	l1718
  1414   006722                     l1708:
  1415                           
  1416                           ;main.c: 173:         count++;
  1417   006722  0EDF               	movlw	low STR_5
  1418   006724  6E22               	movwf	printf@fmt^0,c
  1419   006726  0E6F               	movlw	high STR_5
  1420   006728  6E23               	movwf	(printf@fmt+1)^0,c
  1421   00672A  ECE6  F031         	call	_printf	;wreg free
  1422   00672E                     l1710:
  1423                           
  1424                           ;main.c: 174:     }
  1425   00672E  0EFF               	movlw	255
  1426   006730  EFC9  F033         	goto	l90
  1427   006734                     l1716:
  1428   006734  502D               	movf	serial_memory_seek@origin^0,w,c
  1429                           
  1430                           ; Switch size 1, requested type "simple"
  1431                           ; Number of cases is 3, Range of values is 0 to 2
  1432                           ; switch strategies available:
  1433                           ; Name         Instructions Cycles
  1434                           ; simple_byte           10     6 (average)
  1435                           ;	Chosen strategy is simple_byte
  1436   006736  0A00               	xorlw	0	; case 0
  1437   006738  B4D8               	btfsc	status,2,c
  1438   00673A  EF7B  F033         	goto	l85
  1439   00673E  0A01               	xorlw	1	; case 1
  1440   006740  B4D8               	btfsc	status,2,c
  1441   006742  EF81  F033         	goto	l1704
  1442   006746  0A03               	xorlw	3	; case 2
  1443   006748  B4D8               	btfsc	status,2,c
  1444   00674A  EF89  F033         	goto	l1706
  1445   00674E  EF91  F033         	goto	l1708
  1446   006752                     l1718:
  1447                           
  1448                           ;main.c: 177: }
  1449   006752  0E80               	movlw	128
  1450   006754  5C2F               	subwf	(serial_memory_seek@new_pointer+1)^0,w,c
  1451   006756  A0D8               	btfss	status,0,c
  1452   006758  EFB0  F033         	goto	u1011
  1453   00675C  EFB2  F033         	goto	u1010
  1454   006760                     u1011:
  1455   006760  EFBA  F033         	goto	l1726
  1456   006764                     u1010:
  1457   006764                     
  1458                           ;main.c: 178: void init(void) {
  1459   006764  0EEF               	movlw	low STR_6
  1460   006766  6E22               	movwf	printf@fmt^0,c
  1461   006768  0E6E               	movlw	high STR_6
  1462   00676A  6E23               	movwf	(printf@fmt+1)^0,c
  1463   00676C  ECE6  F031         	call	_printf	;wreg free
  1464   006770  EF97  F033         	goto	l1710
  1465   006774                     l1726:
  1466                           
  1467                           ;main.c: 182:     LATD = 0x00;
  1468   006774  0E6F               	movlw	low STR_7
  1469   006776  6E22               	movwf	printf@fmt^0,c
  1470   006778  0E6F               	movlw	high STR_7
  1471   00677A  6E23               	movwf	(printf@fmt+1)^0,c
  1472   00677C  C02E  F024         	movff	serial_memory_seek@new_pointer,?_printf+2
  1473   006780  C02F  F025         	movff	serial_memory_seek@new_pointer+1,?_printf+3
  1474   006784  ECE6  F031         	call	_printf	;wreg free
  1475   006788                     
  1476                           ;main.c: 183:     LATB &= 0x0F;
  1477   006788  C02E  F065         	movff	serial_memory_seek@new_pointer,_current_pointer
  1478   00678C  C02F  F066         	movff	serial_memory_seek@new_pointer+1,_current_pointer+1
  1479   006790                     
  1480                           ;main.c: 184:     TRISBbits.TRISB0 = 1;
  1481   006790  0E00               	movlw	0
  1482   006792                     l90:
  1483   006792  0012               	return		;funcret
  1484   006794                     __end_of_serial_memory_seek:
  1485                           	callstack 0
  1486                           
  1487 ;; *************** function _serial_memory_read *****************
  1488 ;; Defined at:
  1489 ;;		line 128 in file "main.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;  buffer          1   51[COMRAM] PTR unsigned char 
  1492 ;;		 -> main@read_buffer(100), 
  1493 ;;  num_bytes       2   52[COMRAM] unsigned short 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;		None
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  1    wreg      unsigned char 
  1498 ;; Registers used:
  1499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1505 ;;      Params:         3       0       0       0       0       0       0
  1506 ;;      Locals:         0       0       0       0       0       0       0
  1507 ;;      Temps:          0       0       0       0       0       0       0
  1508 ;;      Totals:         3       0       0       0       0       0       0
  1509 ;;Total ram usage:        3 bytes
  1510 ;; Hardware stack levels used: 1
  1511 ;; Hardware stack levels required when called: 6
  1512 ;; This function calls:
  1513 ;;		_i2c_read
  1514 ;;		_printf
  1515 ;; This function is called by:
  1516 ;;		_main
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           	psect	text4
  1521   006444                     __ptext4:
  1522                           	callstack 0
  1523   006444                     _serial_memory_read:
  1524                           	callstack 24
  1525   006444                     
  1526                           ;main.c: 130: 
  1527   006444  5035               	movf	serial_memory_read@num_bytes^0,w,c
  1528   006446  1036               	iorwf	(serial_memory_read@num_bytes+1)^0,w,c
  1529   006448  A4D8               	btfss	status,2,c
  1530   00644A  EF29  F032         	goto	u991
  1531   00644E  EF2B  F032         	goto	u990
  1532   006452                     u991:
  1533   006452  EF34  F032         	goto	l1682
  1534   006456                     u990:
  1535   006456                     
  1536                           ;main.c: 131:     return 0;
  1537   006456  0EB8               	movlw	low STR_3
  1538   006458  6E22               	movwf	printf@fmt^0,c
  1539   00645A  0E6E               	movlw	high STR_3
  1540   00645C  6E23               	movwf	(printf@fmt+1)^0,c
  1541   00645E  ECE6  F031         	call	_printf	;wreg free
  1542   006462                     
  1543                           ;main.c: 132: }
  1544   006462  0EFF               	movlw	255
  1545   006464  EF41  F032         	goto	l77
  1546   006468                     l1682:
  1547                           
  1548                           ;main.c: 136: 
  1549   006468  C065  F02B         	movff	_current_pointer,i2c_read@address
  1550   00646C  C066  F02C         	movff	_current_pointer+1,i2c_read@address+1
  1551   006470  C034  F02D         	movff	serial_memory_read@buffer,i2c_read@data
  1552   006474  C035  F02E         	movff	serial_memory_read@num_bytes,i2c_read@length
  1553   006478  C036  F02F         	movff	serial_memory_read@num_bytes+1,i2c_read@length+1
  1554   00647C  EC2F  F034         	call	_i2c_read	;wreg free
  1555   006480                     
  1556                           ;main.c: 138: 
  1557   006480  0E00               	movlw	0
  1558   006482                     l77:
  1559   006482  0012               	return		;funcret
  1560   006484                     __end_of_serial_memory_read:
  1561                           	callstack 0
  1562                           
  1563 ;; *************** function _i2c_read *****************
  1564 ;; Defined at:
  1565 ;;		line 104 in file "main.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;  address         2   42[COMRAM] unsigned short 
  1568 ;;  data            1   44[COMRAM] PTR unsigned char 
  1569 ;;		 -> main@read_buffer(100), 
  1570 ;;  length          2   45[COMRAM] unsigned short 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  i               2   49[COMRAM] unsigned short 
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1582 ;;      Params:         5       0       0       0       0       0       0
  1583 ;;      Locals:         2       0       0       0       0       0       0
  1584 ;;      Temps:          2       0       0       0       0       0       0
  1585 ;;      Totals:         9       0       0       0       0       0       0
  1586 ;;Total ram usage:        9 bytes
  1587 ;; Hardware stack levels used: 1
  1588 ;; Hardware stack levels required when called: 5
  1589 ;; This function calls:
  1590 ;;		_I2C_ACK
  1591 ;;		_I2C_NACK
  1592 ;;		_I2C_RECEBE
  1593 ;;		_I2C_RESTART
  1594 ;;		_I2C_START
  1595 ;;		_I2C_STOP
  1596 ;;		_I2C_TRANSMITE
  1597 ;;		_printf
  1598 ;; This function is called by:
  1599 ;;		_serial_memory_read
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           	psect	text5
  1604   00685E                     __ptext5:
  1605                           	callstack 0
  1606   00685E                     _i2c_read:
  1607                           	callstack 24
  1608   00685E                     
  1609                           ;main.c: 105:     }
  1610   00685E  0E00               	movlw	0
  1611   006860  6E33               	movwf	(i2c_read@i+1)^0,c
  1612   006862  0E00               	movlw	0
  1613   006864  6E32               	movwf	i2c_read@i^0,c
  1614   006866  EF92  F034         	goto	l1656
  1615   00686A                     l1628:
  1616                           
  1617                           ;main.c: 106:     return;
  1618   00686A  EC9E  F031         	call	_I2C_START	;wreg free
  1619   00686E                     
  1620                           ;main.c: 107: }
  1621   00686E  0EA0               	movlw	160
  1622   006870  ECF5  F031         	call	_I2C_TRANSMITE
  1623   006874                     
  1624                           ;main.c: 108: 
  1625   006874  502C               	movf	(i2c_read@address+1)^0,w,c
  1626   006876  ECF5  F031         	call	_I2C_TRANSMITE
  1627   00687A                     
  1628                           ;main.c: 109: uint8_t serial_memory_read(uint8_t *buffer, uint16_t num_bytes) {
  1629   00687A  502B               	movf	i2c_read@address^0,w,c
  1630   00687C  ECF5  F031         	call	_I2C_TRANSMITE
  1631   006880                     
  1632                           ;main.c: 110: 
  1633   006880  EC95  F031         	call	_I2C_RESTART	;wreg free
  1634                           
  1635                           ;main.c: 111:     if (num_bytes <= 0) {
  1636   006884  0EA1               	movlw	161
  1637   006886  ECF5  F031         	call	_I2C_TRANSMITE
  1638   00688A                     
  1639                           ;main.c: 112:         printf("Erro: Tentativa de ler alem da capacidade da memoria\r\n")
      +                          ;
  1640   00688A  502D               	movf	i2c_read@data^0,w,c
  1641   00688C  2432               	addwf	i2c_read@i^0,w,c
  1642   00688E  6ED9               	movwf	fsr2l,c
  1643   006890  6ADA               	clrf	fsr2h,c
  1644   006892  EC8C  F032         	call	_I2C_RECEBE	;wreg free
  1645   006896  6EDF               	movwf	indf2,c
  1646   006898                     
  1647                           ;main.c: 113:         return (uint8_t)-1;
  1648   006898  502D               	movf	i2c_read@data^0,w,c
  1649   00689A  2432               	addwf	i2c_read@i^0,w,c
  1650   00689C  6ED9               	movwf	fsr2l,c
  1651   00689E  6ADA               	clrf	fsr2h,c
  1652   0068A0  28DE               	incf	postinc2,w,c
  1653   0068A2  A4D8               	btfss	status,2,c
  1654   0068A4  EF56  F034         	goto	u961
  1655   0068A8  EF58  F034         	goto	u960
  1656   0068AC                     u961:
  1657   0068AC  EF5A  F034         	goto	l1644
  1658   0068B0                     u960:
  1659   0068B0  EF9D  F034         	goto	l73
  1660   0068B4                     l1644:
  1661                           
  1662                           ;main.c: 116: 
  1663   0068B4  0E46               	movlw	low STR_1
  1664   0068B6  6E22               	movwf	printf@fmt^0,c
  1665   0068B8  0E6F               	movlw	high STR_1
  1666   0068BA  6E23               	movwf	(printf@fmt+1)^0,c
  1667   0068BC  C02B  F024         	movff	i2c_read@address,?_printf+2
  1668   0068C0  C02C  F025         	movff	i2c_read@address+1,?_printf+3
  1669   0068C4  C032  F026         	movff	i2c_read@i,?_printf+4
  1670   0068C8  C033  F027         	movff	i2c_read@i+1,?_printf+5
  1671   0068CC  502D               	movf	i2c_read@data^0,w,c
  1672   0068CE  2432               	addwf	i2c_read@i^0,w,c
  1673   0068D0  6ED9               	movwf	fsr2l,c
  1674   0068D2  6ADA               	clrf	fsr2h,c
  1675   0068D4  50DF               	movf	indf2,w,c
  1676   0068D6  6E30               	movwf	??_i2c_read^0,c
  1677   0068D8  5030               	movf	??_i2c_read^0,w,c
  1678   0068DA  6E28               	movwf	(?_printf+6)^0,c
  1679   0068DC  6A29               	clrf	(?_printf+7)^0,c
  1680   0068DE  ECE6  F031         	call	_printf	;wreg free
  1681   0068E2                     
  1682                           ;main.c: 117:     i2c_read(current_pointer, buffer, num_bytes);
  1683   0068E2  0EFF               	movlw	255
  1684   0068E4  242E               	addwf	i2c_read@length^0,w,c
  1685   0068E6  6E30               	movwf	??_i2c_read^0,c
  1686   0068E8  0EFF               	movlw	255
  1687   0068EA  202F               	addwfc	(i2c_read@length+1)^0,w,c
  1688   0068EC  6E31               	movwf	(??_i2c_read+1)^0,c
  1689   0068EE  5030               	movf	??_i2c_read^0,w,c
  1690   0068F0  5C32               	subwf	i2c_read@i^0,w,c
  1691   0068F2  5031               	movf	(??_i2c_read+1)^0,w,c
  1692   0068F4  5833               	subwfb	(i2c_read@i+1)^0,w,c
  1693   0068F6  B0D8               	btfsc	status,0,c
  1694   0068F8  EF80  F034         	goto	u971
  1695   0068FC  EF82  F034         	goto	u970
  1696   006900                     u971:
  1697   006900  EF86  F034         	goto	l1650
  1698   006904                     u970:
  1699   006904                     
  1700                           ;main.c: 118: 
  1701   006904  ECBA  F031         	call	_I2C_ACK	;wreg free
  1702                           
  1703                           ;main.c: 119:     return 0;
  1704   006908  EF88  F034         	goto	l72
  1705   00690C                     l1650:
  1706                           
  1707                           ;main.c: 120: }
  1708   00690C  ECC4  F031         	call	_I2C_NACK	;wreg free
  1709   006910                     l72:
  1710                           
  1711                           ;main.c: 122: 
  1712   006910  ECA7  F031         	call	_I2C_STOP	;wreg free
  1713   006914                     
  1714                           ;main.c: 123: uint8_t serial_memory_write(const uint8_t *data, uint16_t num_bytes) {
  1715   006914  0E02               	movlw	2
  1716   006916  242B               	addwf	i2c_read@address^0,w,c
  1717   006918  6E2B               	movwf	i2c_read@address^0,c
  1718   00691A  0E00               	movlw	0
  1719   00691C  202C               	addwfc	(i2c_read@address+1)^0,w,c
  1720   00691E  6E2C               	movwf	(i2c_read@address+1)^0,c
  1721   006920                     
  1722                           ;main.c: 124:     if (current_pointer + num_bytes > 32768) {
  1723   006920  4A32               	infsnz	i2c_read@i^0,f,c
  1724   006922  2A33               	incf	(i2c_read@i+1)^0,f,c
  1725   006924                     l1656:
  1726   006924  502E               	movf	i2c_read@length^0,w,c
  1727   006926  5C32               	subwf	i2c_read@i^0,w,c
  1728   006928  502F               	movf	(i2c_read@length+1)^0,w,c
  1729   00692A  5833               	subwfb	(i2c_read@i+1)^0,w,c
  1730   00692C  A0D8               	btfss	status,0,c
  1731   00692E  EF9B  F034         	goto	u981
  1732   006932  EF9D  F034         	goto	u980
  1733   006936                     u981:
  1734   006936  EF35  F034         	goto	l1628
  1735   00693A                     u980:
  1736   00693A                     l73:
  1737   00693A  0012               	return		;funcret
  1738   00693C                     __end_of_i2c_read:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function _printf *****************
  1742 ;; Defined at:
  1743 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  fmt             2   33[COMRAM] PTR const unsigned char 
  1746 ;;		 -> STR_12(25), STR_11(42), STR_10(25), STR_9(29), 
  1747 ;;		 -> STR_7(33), STR_6(45), STR_5(24), STR_4(60), 
  1748 ;;		 -> STR_3(55), STR_2(41), STR_1(41), 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;  ret             2    0        int 
  1751 ;;  ap              1   41[COMRAM] PTR void [1]
  1752 ;;		 -> ?_printf(2), 
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  2   33[COMRAM] int 
  1755 ;; Registers used:
  1756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1762 ;;      Params:         8       0       0       0       0       0       0
  1763 ;;      Locals:         1       0       0       0       0       0       0
  1764 ;;      Temps:          0       0       0       0       0       0       0
  1765 ;;      Totals:         9       0       0       0       0       0       0
  1766 ;;Total ram usage:        9 bytes
  1767 ;; Hardware stack levels used: 1
  1768 ;; Hardware stack levels required when called: 4
  1769 ;; This function calls:
  1770 ;;		_vfprintf
  1771 ;; This function is called by:
  1772 ;;		_i2c_write
  1773 ;;		_i2c_read
  1774 ;;		_serial_memory_read
  1775 ;;		_serial_memory_write
  1776 ;;		_serial_memory_seek
  1777 ;;		_main
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           	psect	text6
  1782   0063CC                     __ptext6:
  1783                           	callstack 0
  1784   0063CC                     _printf:
  1785                           	callstack 25
  1786   0063CC  0E24               	movlw	low (?_printf+2)
  1787   0063CE  6E2A               	movwf	printf@ap^0,c
  1788   0063D0  0E00               	movlw	0
  1789   0063D2  6E1B               	movwf	vfprintf@fp^0,c
  1790   0063D4  0E00               	movlw	0
  1791   0063D6  6E1C               	movwf	(vfprintf@fp+1)^0,c
  1792   0063D8  C022  F01D         	movff	printf@fmt,vfprintf@fmt
  1793   0063DC  C023  F01E         	movff	printf@fmt+1,vfprintf@fmt+1
  1794   0063E0  0E2A               	movlw	low printf@ap
  1795   0063E2  6E1F               	movwf	vfprintf@ap^0,c
  1796   0063E4  EC42  F032         	call	_vfprintf	;wreg free
  1797   0063E8  0012               	return		;funcret
  1798   0063EA                     __end_of_printf:
  1799                           	callstack 0
  1800                           
  1801 ;; *************** function _vfprintf *****************
  1802 ;; Defined at:
  1803 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
  1806 ;;		 -> NULL(0), 
  1807 ;;  fmt             2   28[COMRAM] PTR const unsigned char 
  1808 ;;		 -> STR_12(25), STR_11(42), STR_10(25), STR_9(29), 
  1809 ;;		 -> STR_7(33), STR_6(45), STR_5(24), STR_4(60), 
  1810 ;;		 -> STR_3(55), STR_2(41), STR_1(41), 
  1811 ;;  ap              1   30[COMRAM] PTR PTR void 
  1812 ;;		 -> printf@ap(1), 
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;  cfmt            2   31[COMRAM] PTR unsigned char 
  1815 ;;		 -> STR_12(25), STR_11(42), STR_10(25), STR_9(29), 
  1816 ;;		 -> STR_7(33), STR_6(45), STR_5(24), STR_4(60), 
  1817 ;;		 -> STR_3(55), STR_2(41), STR_1(41), 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  2   26[COMRAM] int 
  1820 ;; Registers used:
  1821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1827 ;;      Params:         5       0       0       0       0       0       0
  1828 ;;      Locals:         2       0       0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0
  1830 ;;      Totals:         7       0       0       0       0       0       0
  1831 ;;Total ram usage:        7 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; Hardware stack levels required when called: 3
  1834 ;; This function calls:
  1835 ;;		_vfpfcnvrt
  1836 ;; This function is called by:
  1837 ;;		_printf
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text7
  1842   006484                     __ptext7:
  1843                           	callstack 0
  1844   006484                     _vfprintf:
  1845                           	callstack 25
  1846   006484                     
  1847                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1848   006484  C01D  F020         	movff	vfprintf@fmt,vfprintf@cfmt
  1849   006488  C01E  F021         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1850                           
  1851                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1852   00648C  EF52  F032         	goto	l1568
  1853   006490                     l1566:
  1854                           
  1855                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1856   006490  C01B  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1857   006494  C01C  F00C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1858   006498  0E20               	movlw	low vfprintf@cfmt
  1859   00649A  6E0D               	movwf	vfpfcnvrt@fmt^0,c
  1860   00649C  C01F  F00E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1861   0064A0  ECB4  F035         	call	_vfpfcnvrt	;wreg free
  1862   0064A4                     l1568:
  1863                           
  1864                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1865   0064A4  C020  FFF6         	movff	vfprintf@cfmt,tblptrl
  1866   0064A8  C021  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1867   0064AC                     	if	0	;tblptru may be non-zero
  1868   0064AC                     	endif
  1869   0064AC                     	if	0	;tblptru may be non-zero
  1870   0064AC                     	endif
  1871   0064AC  0008               	tblrd		*
  1872   0064AE  50F5               	movf	tablat,w,c
  1873   0064B0  0900               	iorlw	0
  1874   0064B2  A4D8               	btfss	status,2,c
  1875   0064B4  EF5E  F032         	goto	u841
  1876   0064B8  EF60  F032         	goto	u840
  1877   0064BC                     u841:
  1878   0064BC  EF48  F032         	goto	l1566
  1879   0064C0                     u840:
  1880   0064C0                     
  1881                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1882   0064C0  0E00               	movlw	0
  1883   0064C2  6E1C               	movwf	(?_vfprintf+1)^0,c
  1884   0064C4  0E00               	movlw	0
  1885   0064C6  6E1B               	movwf	?_vfprintf^0,c
  1886   0064C8  0012               	return		;funcret
  1887   0064CA                     __end_of_vfprintf:
  1888                           	callstack 0
  1889                           
  1890 ;; *************** function _vfpfcnvrt *****************
  1891 ;; Defined at:
  1892 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  1895 ;;		 -> NULL(0), 
  1896 ;;  fmt             1   12[COMRAM] PTR PTR unsigned char 
  1897 ;;		 -> vfprintf@cfmt(2), 
  1898 ;;  ap              1   13[COMRAM] PTR PTR void 
  1899 ;;		 -> printf@ap(1), 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  cp              2   17[COMRAM] PTR unsigned char 
  1902 ;;		 -> ?_printf(2), main@read_buffer(100), STR_8(8), 
  1903 ;;  convarg         4   21[COMRAM] struct .
  1904 ;;  cp              2   19[COMRAM] PTR unsigned char 
  1905 ;;		 -> STR_12(25), STR_11(42), STR_10(25), STR_9(29), 
  1906 ;;		 -> STR_7(33), STR_6(45), STR_5(24), STR_4(60), 
  1907 ;;		 -> STR_3(55), STR_2(41), STR_1(41), 
  1908 ;;  c               1   25[COMRAM] unsigned char 
  1909 ;;  done            1   16[COMRAM] _Bool 
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      void 
  1912 ;; Registers used:
  1913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1919 ;;      Params:         4       0       0       0       0       0       0
  1920 ;;      Locals:        10       0       0       0       0       0       0
  1921 ;;      Temps:          2       0       0       0       0       0       0
  1922 ;;      Totals:        16       0       0       0       0       0       0
  1923 ;;Total ram usage:       16 bytes
  1924 ;; Hardware stack levels used: 1
  1925 ;; Hardware stack levels required when called: 2
  1926 ;; This function calls:
  1927 ;;		___lwdiv
  1928 ;;		___lwmod
  1929 ;;		_fputc
  1930 ;; This function is called by:
  1931 ;;		_vfprintf
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text8
  1936   006B68                     __ptext8:
  1937                           	callstack 0
  1938   006B68                     _vfpfcnvrt:
  1939                           	callstack 25
  1940   006B68                     
  1941                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1942   006B68  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1943   006B6A  6ED9               	movwf	fsr2l,c
  1944   006B6C  6ADA               	clrf	fsr2h,c
  1945   006B6E  CFDE FFF6          	movff	postinc2,tblptrl
  1946   006B72  CFDD FFF7          	movff	postdec2,tblptrh
  1947   006B76                     	if	0	;tblptru may be non-zero
  1948   006B76                     	endif
  1949   006B76                     	if	0	;tblptru may be non-zero
  1950   006B76                     	endif
  1951   006B76  0008               	tblrd		*
  1952   006B78  50F5               	movf	tablat,w,c
  1953   006B7A  0A25               	xorlw	37
  1954   006B7C  A4D8               	btfss	status,2,c
  1955   006B7E  EFC3  F035         	goto	u711
  1956   006B82  EFC5  F035         	goto	u710
  1957   006B86                     u711:
  1958   006B86  EF1C  F037         	goto	l1558
  1959   006B8A                     u710:
  1960   006B8A                     
  1961                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1962   006B8A  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1963   006B8C  6ED9               	movwf	fsr2l,c
  1964   006B8E  6ADA               	clrf	fsr2h,c
  1965   006B90  2ADE               	incf	postinc2,f,c
  1966   006B92  0E00               	movlw	0
  1967   006B94  22DD               	addwfc	postdec2,f,c
  1968   006B96                     
  1969                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1970   006B96  0E00               	movlw	0
  1971   006B98  6E62               	movwf	(_width+1)^0,c
  1972   006B9A  0E00               	movlw	0
  1973   006B9C  6E61               	movwf	_width^0,c
  1974   006B9E  C061  F067         	movff	_width,_flags
  1975   006BA2                     
  1976                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1977   006BA2  6863               	setf	_prec^0,c
  1978   006BA4  6864               	setf	(_prec+1)^0,c
  1979   006BA6                     
  1980                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1439:   if (0
  1981   006BA6  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1982   006BA8  6ED9               	movwf	fsr2l,c
  1983   006BAA  6ADA               	clrf	fsr2h,c
  1984   006BAC  CFDE F014          	movff	postinc2,vfpfcnvrt@cp
  1985   006BB0  CFDD F015          	movff	postdec2,vfpfcnvrt@cp+1
  1986   006BB4  C014  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1987   006BB8  C015  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1988   006BBC                     	if	0	;tblptru may be non-zero
  1989   006BBC                     	endif
  1990   006BBC                     	if	0	;tblptru may be non-zero
  1991   006BBC                     	endif
  1992   006BBC  0008               	tblrd		*
  1993   006BBE  50F5               	movf	tablat,w,c
  1994   006BC0  0A75               	xorlw	117
  1995   006BC2  A4D8               	btfss	status,2,c
  1996   006BC4  EFE6  F035         	goto	u721
  1997   006BC8  EFE8  F035         	goto	u720
  1998   006BCC                     u721:
  1999   006BCC  EF5F  F036         	goto	l1526
  2000   006BD0                     u720:
  2001   006BD0                     
  2002                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  2003   006BD0  500E               	movf	vfpfcnvrt@ap^0,w,c
  2004   006BD2  6ED9               	movwf	fsr2l,c
  2005   006BD4  6ADA               	clrf	fsr2h,c
  2006   006BD6  0E02               	movlw	2
  2007   006BD8  26DF               	addwf	indf2,f,c
  2008   006BDA  5CDF               	subwf	indf2,w,c
  2009   006BDC  6ED9               	movwf	fsr2l,c
  2010   006BDE  6ADA               	clrf	fsr2h,c
  2011   006BE0  CFDE F016          	movff	postinc2,vfpfcnvrt@convarg
  2012   006BE4  CFDE F017          	movff	postinc2,vfpfcnvrt@convarg+1
  2013   006BE8                     
  2014                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  2015   006BE8  0E01               	movlw	1
  2016   006BEA  2414               	addwf	vfpfcnvrt@cp^0,w,c
  2017   006BEC  6E0F               	movwf	??_vfpfcnvrt^0,c
  2018   006BEE  0E00               	movlw	0
  2019   006BF0  2015               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2020   006BF2  6E10               	movwf	(??_vfpfcnvrt+1)^0,c
  2021   006BF4  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2022   006BF6  6ED9               	movwf	fsr2l,c
  2023   006BF8  6ADA               	clrf	fsr2h,c
  2024   006BFA  C00F  FFDE         	movff	??_vfpfcnvrt,postinc2
  2025   006BFE  C010  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2026                           
  2027                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  2028   006C02  EF53  F036         	goto	l1524
  2029   006C06                     l1506:
  2030                           
  2031                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  2032   006C06  0E20               	movlw	32
  2033   006C08  6E1A               	movwf	vfpfcnvrt@c^0,c
  2034   006C0A                     l1508:
  2035                           
  2036                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  2037   006C0A  061A               	decf	vfpfcnvrt@c^0,f,c
  2038   006C0C  501A               	movf	vfpfcnvrt@c^0,w,c
  2039   006C0E  0F3D               	addlw	low _dbuf
  2040   006C10  6ED9               	movwf	fsr2l,c
  2041   006C12  6ADA               	clrf	fsr2h,c
  2042   006C14  C016  F001         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  2043   006C18  C017  F002         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  2044   006C1C  0E00               	movlw	0
  2045   006C1E  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2046   006C20  0E0A               	movlw	10
  2047   006C22  6E03               	movwf	___lwmod@divisor^0,c
  2048   006C24  EC0D  F033         	call	___lwmod	;wreg free
  2049   006C28  5001               	movf	?___lwmod^0,w,c
  2050   006C2A  0F30               	addlw	48
  2051   006C2C  6EDF               	movwf	indf2,c
  2052   006C2E                     
  2053                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  2054   006C2E  C016  F001         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  2055   006C32  C017  F002         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  2056   006C36  0E00               	movlw	0
  2057   006C38  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2058   006C3A  0E0A               	movlw	10
  2059   006C3C  6E03               	movwf	___lwdiv@divisor^0,c
  2060   006C3E  EC3F  F033         	call	___lwdiv	;wreg free
  2061   006C42  C001  F016         	movff	?___lwdiv,vfpfcnvrt@convarg
  2062   006C46  C002  F017         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  2063   006C4A                     
  2064                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  2065   006C4A  5016               	movf	vfpfcnvrt@convarg^0,w,c
  2066   006C4C  1017               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2067   006C4E  B4D8               	btfsc	status,2,c
  2068   006C50  EF2C  F036         	goto	u731
  2069   006C54  EF2E  F036         	goto	u730
  2070   006C58                     u731:
  2071   006C58  EF48  F036         	goto	l1520
  2072   006C5C                     u730:
  2073   006C5C  501A               	movf	vfpfcnvrt@c^0,w,c
  2074   006C5E  A4D8               	btfss	status,2,c
  2075   006C60  EF34  F036         	goto	u741
  2076   006C64  EF36  F036         	goto	u740
  2077   006C68                     u741:
  2078   006C68  EF05  F036         	goto	l1508
  2079   006C6C                     u740:
  2080   006C6C  EF48  F036         	goto	l1520
  2081   006C70                     l1516:
  2082                           
  2083                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  2084   006C70  501A               	movf	vfpfcnvrt@c^0,w,c
  2085   006C72  0F3D               	addlw	low _dbuf
  2086   006C74  6ED9               	movwf	fsr2l,c
  2087   006C76  6ADA               	clrf	fsr2h,c
  2088   006C78  50DF               	movf	indf2,w,c
  2089   006C7A  6E0F               	movwf	??_vfpfcnvrt^0,c
  2090   006C7C  500F               	movf	??_vfpfcnvrt^0,w,c
  2091   006C7E  6E02               	movwf	fputc@c^0,c
  2092   006C80  6A03               	clrf	(fputc@c+1)^0,c
  2093   006C82  C00B  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2094   006C86  C00C  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2095   006C8A  ECCA  F033         	call	_fputc	;wreg free
  2096   006C8E  2A1A               	incf	vfpfcnvrt@c^0,f,c
  2097   006C90                     l1520:
  2098                           
  2099                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  2100   006C90  0E20               	movlw	32
  2101   006C92  181A               	xorwf	vfpfcnvrt@c^0,w,c
  2102   006C94  A4D8               	btfss	status,2,c
  2103   006C96  EF4F  F036         	goto	u751
  2104   006C9A  EF51  F036         	goto	u750
  2105   006C9E                     u751:
  2106   006C9E  EF38  F036         	goto	l1516
  2107   006CA2                     u750:
  2108   006CA2  EF2F  F037         	goto	l940
  2109   006CA6                     l1524:
  2110   006CA6  C014  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2111   006CAA  C015  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2112   006CAE                     	if	0	;tblptru may be non-zero
  2113   006CAE                     	endif
  2114   006CAE                     	if	0	;tblptru may be non-zero
  2115   006CAE                     	endif
  2116   006CAE  0008               	tblrd		*
  2117   006CB0  50F5               	movf	tablat,w,c
  2118                           
  2119                           ; Switch size 1, requested type "simple"
  2120                           ; Number of cases is 1, Range of values is 117 to 117
  2121                           ; switch strategies available:
  2122                           ; Name         Instructions Cycles
  2123                           ; simple_byte            4     3 (average)
  2124                           ;	Chosen strategy is simple_byte
  2125   006CB2  0A75               	xorlw	117	; case 117
  2126   006CB4  B4D8               	btfsc	status,2,c
  2127   006CB6  EF03  F036         	goto	l1506
  2128   006CBA  EF5F  F036         	goto	l1526
  2129   006CBE                     l1526:
  2130                           
  2131                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  2132   006CBE  0E00               	movlw	0
  2133   006CC0  6E11               	movwf	vfpfcnvrt@done^0,c
  2134   006CC2                     
  2135                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
  2136   006CC2  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2137   006CC4  6ED9               	movwf	fsr2l,c
  2138   006CC6  6ADA               	clrf	fsr2h,c
  2139   006CC8  CFDE FFF6          	movff	postinc2,tblptrl
  2140   006CCC  CFDD FFF7          	movff	postdec2,tblptrh
  2141   006CD0                     	if	0	;tblptru may be non-zero
  2142   006CD0                     	endif
  2143   006CD0                     	if	0	;tblptru may be non-zero
  2144   006CD0                     	endif
  2145   006CD0  0008               	tblrd		*
  2146   006CD2  50F5               	movf	tablat,w,c
  2147   006CD4  0A73               	xorlw	115
  2148   006CD6  A4D8               	btfss	status,2,c
  2149   006CD8  EF70  F036         	goto	u761
  2150   006CDC  EF72  F036         	goto	u760
  2151   006CE0                     u761:
  2152   006CE0  EF7C  F036         	goto	l1534
  2153   006CE4                     u760:
  2154   006CE4                     
  2155                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  2156   006CE4  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2157   006CE6  6ED9               	movwf	fsr2l,c
  2158   006CE8  6ADA               	clrf	fsr2h,c
  2159   006CEA  2ADE               	incf	postinc2,f,c
  2160   006CEC  0E00               	movlw	0
  2161   006CEE  22DD               	addwfc	postdec2,f,c
  2162   006CF0                     l1532:
  2163                           
  2164                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
  2165   006CF0  0E01               	movlw	1
  2166   006CF2  6E11               	movwf	vfpfcnvrt@done^0,c
  2167                           
  2168                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1660:   }
  2169   006CF4  EFC8  F036         	goto	l1544
  2170   006CF8                     l1534:
  2171   006CF8  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2172   006CFA  6ED9               	movwf	fsr2l,c
  2173   006CFC  6ADA               	clrf	fsr2h,c
  2174   006CFE  CFDE FFF6          	movff	postinc2,tblptrl
  2175   006D02  CFDD FFF7          	movff	postdec2,tblptrh
  2176   006D06                     	if	0	;tblptru may be non-zero
  2177   006D06                     	endif
  2178   006D06                     	if	0	;tblptru may be non-zero
  2179   006D06                     	endif
  2180   006D06  0008               	tblrd		*
  2181   006D08  50F5               	movf	tablat,w,c
  2182   006D0A  0A6C               	xorlw	108
  2183   006D0C  A4D8               	btfss	status,2,c
  2184   006D0E  EF8B  F036         	goto	u771
  2185   006D12  EF8D  F036         	goto	u770
  2186   006D16                     u771:
  2187   006D16  EFC8  F036         	goto	l1544
  2188   006D1A                     u770:
  2189   006D1A  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2190   006D1C  6ED9               	movwf	fsr2l,c
  2191   006D1E  6ADA               	clrf	fsr2h,c
  2192   006D20  CFDE F00F          	movff	postinc2,??_vfpfcnvrt
  2193   006D24  CFDD F010          	movff	postdec2,??_vfpfcnvrt+1
  2194   006D28  0E01               	movlw	1
  2195   006D2A  260F               	addwf	??_vfpfcnvrt^0,f,c
  2196   006D2C  0E00               	movlw	0
  2197   006D2E  2210               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2198   006D30  C00F  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2199   006D34  C010  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2200   006D38                     	if	0	;tblptru may be non-zero
  2201   006D38                     	endif
  2202   006D38                     	if	0	;tblptru may be non-zero
  2203   006D38                     	endif
  2204   006D38  0008               	tblrd		*
  2205   006D3A  50F5               	movf	tablat,w,c
  2206   006D3C  0A6C               	xorlw	108
  2207   006D3E  A4D8               	btfss	status,2,c
  2208   006D40  EFA4  F036         	goto	u781
  2209   006D44  EFA6  F036         	goto	u780
  2210   006D48                     u781:
  2211   006D48  EFC8  F036         	goto	l1544
  2212   006D4C                     u780:
  2213   006D4C  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2214   006D4E  6ED9               	movwf	fsr2l,c
  2215   006D50  6ADA               	clrf	fsr2h,c
  2216   006D52  CFDE F00F          	movff	postinc2,??_vfpfcnvrt
  2217   006D56  CFDD F010          	movff	postdec2,??_vfpfcnvrt+1
  2218   006D5A  0E02               	movlw	2
  2219   006D5C  260F               	addwf	??_vfpfcnvrt^0,f,c
  2220   006D5E  0E00               	movlw	0
  2221   006D60  2210               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2222   006D62  C00F  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2223   006D66  C010  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2224   006D6A                     	if	0	;tblptru may be non-zero
  2225   006D6A                     	endif
  2226   006D6A                     	if	0	;tblptru may be non-zero
  2227   006D6A                     	endif
  2228   006D6A  0008               	tblrd		*
  2229   006D6C  50F5               	movf	tablat,w,c
  2230   006D6E  0A73               	xorlw	115
  2231   006D70  A4D8               	btfss	status,2,c
  2232   006D72  EFBD  F036         	goto	u791
  2233   006D76  EFBF  F036         	goto	u790
  2234   006D7A                     u791:
  2235   006D7A  EFC8  F036         	goto	l1544
  2236   006D7E                     u790:
  2237   006D7E                     
  2238                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
  2239   006D7E  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2240   006D80  6ED9               	movwf	fsr2l,c
  2241   006D82  6ADA               	clrf	fsr2h,c
  2242   006D84  0E03               	movlw	3
  2243   006D86  26DE               	addwf	postinc2,f,c
  2244   006D88  0E00               	movlw	0
  2245   006D8A  22DD               	addwfc	postdec2,f,c
  2246   006D8C  EF78  F036         	goto	l1532
  2247   006D90                     l1544:
  2248                           
  2249                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
  2250   006D90  5011               	movf	vfpfcnvrt@done^0,w,c
  2251   006D92  B4D8               	btfsc	status,2,c
  2252   006D94  EFCE  F036         	goto	u801
  2253   006D98  EFD0  F036         	goto	u800
  2254   006D9C                     u801:
  2255   006D9C  EF14  F037         	goto	l1554
  2256   006DA0                     u800:
  2257   006DA0                     
  2258                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1669:    for (cha
      +                          r * cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0)); *cp != '\0'; cp++) {
  2259   006DA0  500E               	movf	vfpfcnvrt@ap^0,w,c
  2260   006DA2  6ED9               	movwf	fsr2l,c
  2261   006DA4  6ADA               	clrf	fsr2h,c
  2262   006DA6  0E02               	movlw	2
  2263   006DA8  26DF               	addwf	indf2,f,c
  2264   006DAA  5CDF               	subwf	indf2,w,c
  2265   006DAC  6ED9               	movwf	fsr2l,c
  2266   006DAE  6ADA               	clrf	fsr2h,c
  2267   006DB0  CFDE F012          	movff	postinc2,vfpfcnvrt@cp_1137
  2268   006DB4  CFDE F013          	movff	postinc2,vfpfcnvrt@cp_1137+1
  2269   006DB8  EFFA  F036         	goto	l1552
  2270   006DBC                     l1548:
  2271                           
  2272                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1670:     fputc(*
      +                          cp, fp);
  2273   006DBC  C012  FFF6         	movff	vfpfcnvrt@cp_1137,tblptrl
  2274   006DC0  C013  FFF7         	movff	vfpfcnvrt@cp_1137+1,tblptrh
  2275   006DC4  6AF8               	clrf	tblptru,c
  2276   006DC6  0E05               	movlw	(high __ramtop+-1)
  2277   006DC8  64F7               	cpfsgt	tblptrh,c
  2278   006DCA  D003               	bra	u817
  2279   006DCC  0008               	tblrd		*
  2280   006DCE  50F5               	movf	tablat,w,c
  2281   006DD0  D005               	bra	u810
  2282   006DD2                     u817:
  2283   006DD2  CFF6 FFE1          	movff	tblptrl,fsr1l
  2284   006DD6  CFF7 FFE2          	movff	tblptrh,fsr1h
  2285   006DDA  50E7               	movf	indf1,w,c
  2286   006DDC                     u810:
  2287   006DDC  6E0F               	movwf	??_vfpfcnvrt^0,c
  2288   006DDE  500F               	movf	??_vfpfcnvrt^0,w,c
  2289   006DE0  6E02               	movwf	fputc@c^0,c
  2290   006DE2  6A03               	clrf	(fputc@c+1)^0,c
  2291   006DE4  C00B  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2292   006DE8  C00C  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2293   006DEC  ECCA  F033         	call	_fputc	;wreg free
  2294   006DF0                     
  2295                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1674:    }
  2296   006DF0  4A12               	infsnz	vfpfcnvrt@cp_1137^0,f,c
  2297   006DF2  2A13               	incf	(vfpfcnvrt@cp_1137+1)^0,f,c
  2298   006DF4                     l1552:
  2299   006DF4  C012  FFF6         	movff	vfpfcnvrt@cp_1137,tblptrl
  2300   006DF8  C013  FFF7         	movff	vfpfcnvrt@cp_1137+1,tblptrh
  2301   006DFC  6AF8               	clrf	tblptru,c
  2302   006DFE  0E05               	movlw	(high __ramtop+-1)
  2303   006E00  64F7               	cpfsgt	tblptrh,c
  2304   006E02  D003               	bra	u827
  2305   006E04  0008               	tblrd		*
  2306   006E06  50F5               	movf	tablat,w,c
  2307   006E08  D005               	bra	u820
  2308   006E0A                     u827:
  2309   006E0A  CFF6 FFE1          	movff	tblptrl,fsr1l
  2310   006E0E  CFF7 FFE2          	movff	tblptrh,fsr1h
  2311   006E12  50E7               	movf	indf1,w,c
  2312   006E14                     u820:
  2313   006E14  0900               	iorlw	0
  2314   006E16  A4D8               	btfss	status,2,c
  2315   006E18  EF10  F037         	goto	u831
  2316   006E1C  EF12  F037         	goto	u830
  2317   006E20                     u831:
  2318   006E20  EFDE  F036         	goto	l1548
  2319   006E24                     u830:
  2320   006E24  EF2F  F037         	goto	l940
  2321   006E28                     l1554:
  2322                           
  2323                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2324   006E28  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2325   006E2A  6ED9               	movwf	fsr2l,c
  2326   006E2C  6ADA               	clrf	fsr2h,c
  2327   006E2E  2ADE               	incf	postinc2,f,c
  2328   006E30  0E00               	movlw	0
  2329   006E32  22DD               	addwfc	postdec2,f,c
  2330   006E34  EF2F  F037         	goto	l940
  2331   006E38                     l1558:
  2332                           
  2333                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2334   006E38  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2335   006E3A  6ED9               	movwf	fsr2l,c
  2336   006E3C  6ADA               	clrf	fsr2h,c
  2337   006E3E  CFDE FFF6          	movff	postinc2,tblptrl
  2338   006E42  CFDD FFF7          	movff	postdec2,tblptrh
  2339   006E46                     	if	0	;tblptru may be non-zero
  2340   006E46                     	endif
  2341   006E46                     	if	0	;tblptru may be non-zero
  2342   006E46                     	endif
  2343   006E46  0008               	tblrd		*
  2344   006E48  50F5               	movf	tablat,w,c
  2345   006E4A  6E02               	movwf	fputc@c^0,c
  2346   006E4C  6A03               	clrf	(fputc@c+1)^0,c
  2347   006E4E  C00B  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2348   006E52  C00C  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2349   006E56  ECCA  F033         	call	_fputc	;wreg free
  2350   006E5A  EF14  F037         	goto	l1554
  2351   006E5E                     l940:
  2352   006E5E  0012               	return		;funcret
  2353   006E60                     __end_of_vfpfcnvrt:
  2354                           	callstack 0
  2355                           
  2356 ;; *************** function _fputc *****************
  2357 ;; Defined at:
  2358 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  c               2    1[COMRAM] int 
  2361 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  2362 ;;		 -> NULL(0), 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  2    1[COMRAM] int 
  2367 ;; Registers used:
  2368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2374 ;;      Params:         4       0       0       0       0       0       0
  2375 ;;      Locals:         0       0       0       0       0       0       0
  2376 ;;      Temps:          5       0       0       0       0       0       0
  2377 ;;      Totals:         9       0       0       0       0       0       0
  2378 ;;Total ram usage:        9 bytes
  2379 ;; Hardware stack levels used: 1
  2380 ;; Hardware stack levels required when called: 1
  2381 ;; This function calls:
  2382 ;;		_putch
  2383 ;; This function is called by:
  2384 ;;		_vfpfcnvrt
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text9
  2389   006794                     __ptext9:
  2390                           	callstack 0
  2391   006794                     _fputc:
  2392                           	callstack 25
  2393   006794  5004               	movf	fputc@fp^0,w,c
  2394   006796  1005               	iorwf	(fputc@fp+1)^0,w,c
  2395   006798  B4D8               	btfsc	status,2,c
  2396   00679A  EFD1  F033         	goto	u671
  2397   00679E  EFD3  F033         	goto	u670
  2398   0067A2                     u671:
  2399   0067A2  EFDC  F033         	goto	l1480
  2400   0067A6                     u670:
  2401   0067A6  5004               	movf	fputc@fp^0,w,c
  2402   0067A8  1005               	iorwf	(fputc@fp+1)^0,w,c
  2403   0067AA  A4D8               	btfss	status,2,c
  2404   0067AC  EFDA  F033         	goto	u681
  2405   0067B0  EFDC  F033         	goto	u680
  2406   0067B4                     u681:
  2407   0067B4  EFE1  F033         	goto	l1482
  2408   0067B8                     u680:
  2409   0067B8                     l1480:
  2410   0067B8  5002               	movf	fputc@c^0,w,c
  2411   0067BA  ECCE  F031         	call	_putch
  2412   0067BE  EF2E  F034         	goto	l966
  2413   0067C2                     l1482:
  2414   0067C2  EE20 F00A          	lfsr	2,10
  2415   0067C6  5004               	movf	fputc@fp^0,w,c
  2416   0067C8  26D9               	addwf	fsr2l,f,c
  2417   0067CA  5005               	movf	(fputc@fp+1)^0,w,c
  2418   0067CC  22DA               	addwfc	fsr2h,f,c
  2419   0067CE  50DE               	movf	postinc2,w,c
  2420   0067D0  10DE               	iorwf	postinc2,w,c
  2421   0067D2  B4D8               	btfsc	status,2,c
  2422   0067D4  EFEE  F033         	goto	u691
  2423   0067D8  EFF0  F033         	goto	u690
  2424   0067DC                     u691:
  2425   0067DC  EF0B  F034         	goto	l1486
  2426   0067E0                     u690:
  2427   0067E0  EE20 F00A          	lfsr	2,10
  2428   0067E4  5004               	movf	fputc@fp^0,w,c
  2429   0067E6  26D9               	addwf	fsr2l,f,c
  2430   0067E8  5005               	movf	(fputc@fp+1)^0,w,c
  2431   0067EA  22DA               	addwfc	fsr2h,f,c
  2432   0067EC  EE10 F003          	lfsr	1,3
  2433   0067F0  5004               	movf	fputc@fp^0,w,c
  2434   0067F2  26E1               	addwf	fsr1l,f,c
  2435   0067F4  5005               	movf	(fputc@fp+1)^0,w,c
  2436   0067F6  22E2               	addwfc	fsr1h,f,c
  2437   0067F8  50DE               	movf	postinc2,w,c
  2438   0067FA  5CE6               	subwf	postinc1,w,c
  2439   0067FC  50E6               	movf	postinc1,w,c
  2440   0067FE  0A80               	xorlw	128
  2441   006800  6E0A               	movwf	(??_fputc+4)^0,c
  2442   006802  50DE               	movf	postinc2,w,c
  2443   006804  0A80               	xorlw	128
  2444   006806  580A               	subwfb	(??_fputc+4)^0,w,c
  2445   006808  B0D8               	btfsc	status,0,c
  2446   00680A  EF09  F034         	goto	u701
  2447   00680E  EF0B  F034         	goto	u700
  2448   006812                     u701:
  2449   006812  EF2E  F034         	goto	l966
  2450   006816                     u700:
  2451   006816                     l1486:
  2452   006816  EE20 F003          	lfsr	2,3
  2453   00681A  5004               	movf	fputc@fp^0,w,c
  2454   00681C  26D9               	addwf	fsr2l,f,c
  2455   00681E  5005               	movf	(fputc@fp+1)^0,w,c
  2456   006820  22DA               	addwfc	fsr2h,f,c
  2457   006822  CFDE F006          	movff	postinc2,??_fputc
  2458   006826  CFDD F007          	movff	postdec2,??_fputc+1
  2459   00682A  C004  FFD9         	movff	fputc@fp,fsr2l
  2460   00682E  C005  FFDA         	movff	fputc@fp+1,fsr2h
  2461   006832  CFDE F008          	movff	postinc2,??_fputc+2
  2462   006836  CFDD F009          	movff	postdec2,??_fputc+3
  2463   00683A  5006               	movf	??_fputc^0,w,c
  2464   00683C  2408               	addwf	(??_fputc+2)^0,w,c
  2465   00683E  6ED9               	movwf	fsr2l,c
  2466   006840  5007               	movf	(??_fputc+1)^0,w,c
  2467   006842  2009               	addwfc	(??_fputc+3)^0,w,c
  2468   006844  6EDA               	movwf	fsr2h,c
  2469   006846  C002  FFDF         	movff	fputc@c,indf2
  2470   00684A  EE20 F003          	lfsr	2,3
  2471   00684E  5004               	movf	fputc@fp^0,w,c
  2472   006850  26D9               	addwf	fsr2l,f,c
  2473   006852  5005               	movf	(fputc@fp+1)^0,w,c
  2474   006854  22DA               	addwfc	fsr2h,f,c
  2475   006856  2ADE               	incf	postinc2,f,c
  2476   006858  0E00               	movlw	0
  2477   00685A  22DD               	addwfc	postdec2,f,c
  2478   00685C                     l966:
  2479   00685C  0012               	return		;funcret
  2480   00685E                     __end_of_fputc:
  2481                           	callstack 0
  2482                           
  2483 ;; *************** function _putch *****************
  2484 ;; Defined at:
  2485 ;;		line 73 in file "main.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  byte            1    wreg     unsigned char 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  byte            1    0[COMRAM] unsigned char 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  1    wreg      void 
  2492 ;; Registers used:
  2493 ;;		wreg
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2499 ;;      Params:         0       0       0       0       0       0       0
  2500 ;;      Locals:         1       0       0       0       0       0       0
  2501 ;;      Temps:          0       0       0       0       0       0       0
  2502 ;;      Totals:         1       0       0       0       0       0       0
  2503 ;;Total ram usage:        1 bytes
  2504 ;; Hardware stack levels used: 1
  2505 ;; This function calls:
  2506 ;;		Nothing
  2507 ;; This function is called by:
  2508 ;;		_fputc
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text10
  2513   00639C                     __ptext10:
  2514                           	callstack 0
  2515   00639C                     _putch:
  2516                           	callstack 25
  2517                           
  2518                           ;incstack = 0
  2519                           ;putch@byte stored from wreg
  2520   00639C  6E01               	movwf	putch@byte^0,c
  2521   00639E                     l54:
  2522                           
  2523                           ;main.c: 74:         }
  2524   00639E  A2AC               	btfss	172,1,c	;volatile
  2525   0063A0  EFD4  F031         	goto	u601
  2526   0063A4  EFD6  F031         	goto	u600
  2527   0063A8                     u601:
  2528   0063A8  EFCF  F031         	goto	l54
  2529   0063AC                     u600:
  2530   0063AC                     
  2531                           ;main.c: 77:         I2C_STOP();
  2532   0063AC  C001  FFAD         	movff	putch@byte,4013	;volatile
  2533   0063B0  0012               	return		;funcret
  2534   0063B2                     __end_of_putch:
  2535                           	callstack 0
  2536                           
  2537 ;; *************** function ___lwmod *****************
  2538 ;; Defined at:
  2539 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;  dividend        2    0[COMRAM] unsigned int 
  2542 ;;  divisor         2    2[COMRAM] unsigned int 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;  counter         1    4[COMRAM] unsigned char 
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  2    0[COMRAM] unsigned int 
  2547 ;; Registers used:
  2548 ;;		wreg, status,2, status,0
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2554 ;;      Params:         4       0       0       0       0       0       0
  2555 ;;      Locals:         1       0       0       0       0       0       0
  2556 ;;      Temps:          0       0       0       0       0       0       0
  2557 ;;      Totals:         5       0       0       0       0       0       0
  2558 ;;Total ram usage:        5 bytes
  2559 ;; Hardware stack levels used: 1
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_vfpfcnvrt
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text11
  2568   00661A                     __ptext11:
  2569                           	callstack 0
  2570   00661A                     ___lwmod:
  2571                           	callstack 26
  2572   00661A  5003               	movf	___lwmod@divisor^0,w,c
  2573   00661C  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2574   00661E  B4D8               	btfsc	status,2,c
  2575   006620  EF14  F033         	goto	u641
  2576   006624  EF16  F033         	goto	u640
  2577   006628                     u641:
  2578   006628  EF3A  F033         	goto	l726
  2579   00662C                     u640:
  2580   00662C  0E01               	movlw	1
  2581   00662E  6E05               	movwf	___lwmod@counter^0,c
  2582   006630  EF1E  F033         	goto	l1466
  2583   006634                     l1464:
  2584   006634  90D8               	bcf	status,0,c
  2585   006636  3603               	rlcf	___lwmod@divisor^0,f,c
  2586   006638  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2587   00663A  2A05               	incf	___lwmod@counter^0,f,c
  2588   00663C                     l1466:
  2589   00663C  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2590   00663E  EF23  F033         	goto	u651
  2591   006642  EF25  F033         	goto	u650
  2592   006646                     u651:
  2593   006646  EF1A  F033         	goto	l1464
  2594   00664A                     u650:
  2595   00664A                     l1468:
  2596   00664A  5003               	movf	___lwmod@divisor^0,w,c
  2597   00664C  5C01               	subwf	___lwmod@dividend^0,w,c
  2598   00664E  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2599   006650  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2600   006652  A0D8               	btfss	status,0,c
  2601   006654  EF2E  F033         	goto	u661
  2602   006658  EF30  F033         	goto	u660
  2603   00665C                     u661:
  2604   00665C  EF34  F033         	goto	l1472
  2605   006660                     u660:
  2606   006660  5003               	movf	___lwmod@divisor^0,w,c
  2607   006662  5E01               	subwf	___lwmod@dividend^0,f,c
  2608   006664  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2609   006666  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2610   006668                     l1472:
  2611   006668  90D8               	bcf	status,0,c
  2612   00666A  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2613   00666C  3203               	rrcf	___lwmod@divisor^0,f,c
  2614   00666E  2E05               	decfsz	___lwmod@counter^0,f,c
  2615   006670  EF25  F033         	goto	l1468
  2616   006674                     l726:
  2617   006674  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2618   006678  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2619   00667C  0012               	return		;funcret
  2620   00667E                     __end_of___lwmod:
  2621                           	callstack 0
  2622                           
  2623 ;; *************** function ___lwdiv *****************
  2624 ;; Defined at:
  2625 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  dividend        2    0[COMRAM] unsigned int 
  2628 ;;  divisor         2    2[COMRAM] unsigned int 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  quotient        2    4[COMRAM] unsigned int 
  2631 ;;  counter         1    6[COMRAM] unsigned char 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  2    0[COMRAM] unsigned int 
  2634 ;; Registers used:
  2635 ;;		wreg, status,2, status,0
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2641 ;;      Params:         4       0       0       0       0       0       0
  2642 ;;      Locals:         3       0       0       0       0       0       0
  2643 ;;      Temps:          0       0       0       0       0       0       0
  2644 ;;      Totals:         7       0       0       0       0       0       0
  2645 ;;Total ram usage:        7 bytes
  2646 ;; Hardware stack levels used: 1
  2647 ;; This function calls:
  2648 ;;		Nothing
  2649 ;; This function is called by:
  2650 ;;		_vfpfcnvrt
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text12
  2655   00667E                     __ptext12:
  2656                           	callstack 0
  2657   00667E                     ___lwdiv:
  2658                           	callstack 26
  2659   00667E  0E00               	movlw	0
  2660   006680  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2661   006682  0E00               	movlw	0
  2662   006684  6E05               	movwf	___lwdiv@quotient^0,c
  2663   006686  5003               	movf	___lwdiv@divisor^0,w,c
  2664   006688  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2665   00668A  B4D8               	btfsc	status,2,c
  2666   00668C  EF4A  F033         	goto	u611
  2667   006690  EF4C  F033         	goto	u610
  2668   006694                     u611:
  2669   006694  EF74  F033         	goto	l716
  2670   006698                     u610:
  2671   006698  0E01               	movlw	1
  2672   00669A  6E07               	movwf	___lwdiv@counter^0,c
  2673   00669C  EF54  F033         	goto	l1446
  2674   0066A0                     l1444:
  2675   0066A0  90D8               	bcf	status,0,c
  2676   0066A2  3603               	rlcf	___lwdiv@divisor^0,f,c
  2677   0066A4  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2678   0066A6  2A07               	incf	___lwdiv@counter^0,f,c
  2679   0066A8                     l1446:
  2680   0066A8  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2681   0066AA  EF59  F033         	goto	u621
  2682   0066AE  EF5B  F033         	goto	u620
  2683   0066B2                     u621:
  2684   0066B2  EF50  F033         	goto	l1444
  2685   0066B6                     u620:
  2686   0066B6                     l1448:
  2687   0066B6  90D8               	bcf	status,0,c
  2688   0066B8  3605               	rlcf	___lwdiv@quotient^0,f,c
  2689   0066BA  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2690   0066BC  5003               	movf	___lwdiv@divisor^0,w,c
  2691   0066BE  5C01               	subwf	___lwdiv@dividend^0,w,c
  2692   0066C0  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2693   0066C2  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2694   0066C4  A0D8               	btfss	status,0,c
  2695   0066C6  EF67  F033         	goto	u631
  2696   0066CA  EF69  F033         	goto	u630
  2697   0066CE                     u631:
  2698   0066CE  EF6E  F033         	goto	l1456
  2699   0066D2                     u630:
  2700   0066D2  5003               	movf	___lwdiv@divisor^0,w,c
  2701   0066D4  5E01               	subwf	___lwdiv@dividend^0,f,c
  2702   0066D6  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2703   0066D8  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2704   0066DA  8005               	bsf	___lwdiv@quotient^0,0,c
  2705   0066DC                     l1456:
  2706   0066DC  90D8               	bcf	status,0,c
  2707   0066DE  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2708   0066E0  3203               	rrcf	___lwdiv@divisor^0,f,c
  2709   0066E2  2E07               	decfsz	___lwdiv@counter^0,f,c
  2710   0066E4  EF5B  F033         	goto	l1448
  2711   0066E8                     l716:
  2712   0066E8  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2713   0066EC  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2714   0066F0  0012               	return		;funcret
  2715   0066F2                     __end_of___lwdiv:
  2716                           	callstack 0
  2717                           
  2718 ;; *************** function _I2C_TRANSMITE *****************
  2719 ;; Defined at:
  2720 ;;		line 43 in file "I2C_Master.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  DADO_I2C        1    wreg     unsigned char 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  DADO_I2C        1    0[COMRAM] unsigned char 
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2734 ;;      Params:         0       0       0       0       0       0       0
  2735 ;;      Locals:         1       0       0       0       0       0       0
  2736 ;;      Temps:          0       0       0       0       0       0       0
  2737 ;;      Totals:         1       0       0       0       0       0       0
  2738 ;;Total ram usage:        1 bytes
  2739 ;; Hardware stack levels used: 1
  2740 ;; This function calls:
  2741 ;;		Nothing
  2742 ;; This function is called by:
  2743 ;;		_i2c_write
  2744 ;;		_i2c_read
  2745 ;;		_I2C_ESCRITA
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text13
  2750   0063EA                     __ptext13:
  2751                           	callstack 0
  2752   0063EA                     _I2C_TRANSMITE:
  2753                           	callstack 28
  2754                           
  2755                           ;incstack = 0
  2756                           ;I2C_TRANSMITE@DADO_I2C stored from wreg
  2757   0063EA  6E01               	movwf	I2C_TRANSMITE@DADO_I2C^0,c
  2758   0063EC                     
  2759                           ;I2C_Master.c: 43: void I2C_TRANSMITE (unsigned char DADO_I2C);I2C_Master.c: 44: {;I2C_M
      +                          aster.c: 45:  SSPBUF = DADO_I2C;
  2760   0063EC  C001  FFC9         	movff	I2C_TRANSMITE@DADO_I2C,4041	;volatile
  2761   0063F0                     l177:
  2762   0063F0  B0C7               	btfsc	199,0,c	;volatile
  2763   0063F2  EFFD  F031         	goto	u861
  2764   0063F6  EFFF  F031         	goto	u860
  2765   0063FA                     u861:
  2766   0063FA  EFF8  F031         	goto	l177
  2767   0063FE                     u860:
  2768   0063FE                     l180:
  2769   0063FE  B4C7               	btfsc	199,2,c	;volatile
  2770   006400  EF04  F032         	goto	u871
  2771   006404  EF06  F032         	goto	u870
  2772   006408                     u871:
  2773   006408  EFFF  F031         	goto	l180
  2774   00640C                     u870:
  2775   00640C  0012               	return		;funcret
  2776   00640E                     __end_of_I2C_TRANSMITE:
  2777                           	callstack 0
  2778                           
  2779 ;; *************** function _I2C_STOP *****************
  2780 ;; Defined at:
  2781 ;;		line 54 in file "I2C_Master.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;		None
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;		None
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      void 
  2788 ;; Registers used:
  2789 ;;		None
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2795 ;;      Params:         0       0       0       0       0       0       0
  2796 ;;      Locals:         0       0       0       0       0       0       0
  2797 ;;      Temps:          0       0       0       0       0       0       0
  2798 ;;      Totals:         0       0       0       0       0       0       0
  2799 ;;Total ram usage:        0 bytes
  2800 ;; Hardware stack levels used: 1
  2801 ;; This function calls:
  2802 ;;		Nothing
  2803 ;; This function is called by:
  2804 ;;		_i2c_write
  2805 ;;		_i2c_read
  2806 ;;		_I2C_ESCRITA
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text14
  2811   00634E                     __ptext14:
  2812                           	callstack 0
  2813   00634E                     _I2C_STOP:
  2814                           	callstack 28
  2815   00634E                     
  2816                           ;I2C_Master.c: 56:  SSPCON2bits.PEN = 1;
  2817   00634E  84C5               	bsf	197,2,c	;volatile
  2818   006350                     l191:
  2819   006350  B4C5               	btfsc	197,2,c	;volatile
  2820   006352  EFAD  F031         	goto	u881
  2821   006356  EFAF  F031         	goto	u880
  2822   00635A                     u881:
  2823   00635A  EFA8  F031         	goto	l191
  2824   00635E                     u880:
  2825   00635E  0012               	return		;funcret
  2826   006360                     __end_of_I2C_STOP:
  2827                           	callstack 0
  2828                           
  2829 ;; *************** function _I2C_START *****************
  2830 ;; Defined at:
  2831 ;;		line 33 in file "I2C_Master.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;		None
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;		None
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      void 
  2838 ;; Registers used:
  2839 ;;		None
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2845 ;;      Params:         0       0       0       0       0       0       0
  2846 ;;      Locals:         0       0       0       0       0       0       0
  2847 ;;      Temps:          0       0       0       0       0       0       0
  2848 ;;      Totals:         0       0       0       0       0       0       0
  2849 ;;Total ram usage:        0 bytes
  2850 ;; Hardware stack levels used: 1
  2851 ;; This function calls:
  2852 ;;		Nothing
  2853 ;; This function is called by:
  2854 ;;		_i2c_write
  2855 ;;		_i2c_read
  2856 ;;		_I2C_ESCRITA
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           	psect	text15
  2861   00633C                     __ptext15:
  2862                           	callstack 0
  2863   00633C                     _I2C_START:
  2864                           	callstack 28
  2865   00633C                     
  2866                           ;I2C_Master.c: 35:  SSPCON2bits.SEN = 1;
  2867   00633C  80C5               	bsf	197,0,c	;volatile
  2868   00633E                     l165:
  2869   00633E  B0C5               	btfsc	197,0,c	;volatile
  2870   006340  EFA4  F031         	goto	u851
  2871   006344  EFA6  F031         	goto	u850
  2872   006348                     u851:
  2873   006348  EF9F  F031         	goto	l165
  2874   00634C                     u850:
  2875   00634C  0012               	return		;funcret
  2876   00634E                     __end_of_I2C_START:
  2877                           	callstack 0
  2878                           
  2879 ;; *************** function _I2C_RESTART *****************
  2880 ;; Defined at:
  2881 ;;		line 38 in file "I2C_Master.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      void 
  2888 ;; Registers used:
  2889 ;;		None
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2895 ;;      Params:         0       0       0       0       0       0       0
  2896 ;;      Locals:         0       0       0       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0       0       0
  2898 ;;      Totals:         0       0       0       0       0       0       0
  2899 ;;Total ram usage:        0 bytes
  2900 ;; Hardware stack levels used: 1
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_i2c_read
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text16
  2909   00632A                     __ptext16:
  2910                           	callstack 0
  2911   00632A                     _I2C_RESTART:
  2912                           	callstack 28
  2913   00632A                     
  2914                           ;I2C_Master.c: 40:  SSPCON2bits.RSEN = 1;
  2915   00632A  82C5               	bsf	197,1,c	;volatile
  2916   00632C                     l171:
  2917   00632C  B2C5               	btfsc	197,1,c	;volatile
  2918   00632E  EF9B  F031         	goto	u891
  2919   006332  EF9D  F031         	goto	u890
  2920   006336                     u891:
  2921   006336  EF96  F031         	goto	l171
  2922   00633A                     u890:
  2923   00633A  0012               	return		;funcret
  2924   00633C                     __end_of_I2C_RESTART:
  2925                           	callstack 0
  2926                           
  2927 ;; *************** function _I2C_RECEBE *****************
  2928 ;; Defined at:
  2929 ;;		line 89 in file "I2C_Master.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;		None
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;  x               1    0[COMRAM] unsigned char 
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  1    wreg      unsigned char 
  2936 ;; Registers used:
  2937 ;;		wreg, status,2
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2943 ;;      Params:         0       0       0       0       0       0       0
  2944 ;;      Locals:         1       0       0       0       0       0       0
  2945 ;;      Temps:          0       0       0       0       0       0       0
  2946 ;;      Totals:         1       0       0       0       0       0       0
  2947 ;;Total ram usage:        1 bytes
  2948 ;; Hardware stack levels used: 1
  2949 ;; This function calls:
  2950 ;;		Nothing
  2951 ;; This function is called by:
  2952 ;;		_i2c_read
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           	psect	text17
  2957   006518                     __ptext17:
  2958                           	callstack 0
  2959   006518                     _I2C_RECEBE:
  2960                           	callstack 28
  2961   006518                     
  2962                           ;I2C_Master.c: 91: unsigned char x;;I2C_Master.c: 92:  SSPCON2bits.RCEN = 1;
  2963   006518  86C5               	bsf	197,3,c	;volatile
  2964   00651A                     l204:
  2965   00651A  B6C5               	btfsc	197,3,c	;volatile
  2966   00651C  EF92  F032         	goto	u901
  2967   006520  EF94  F032         	goto	u900
  2968   006524                     u901:
  2969   006524  EF8D  F032         	goto	l204
  2970   006528                     u900:
  2971   006528                     l207:
  2972   006528  A0C7               	btfss	199,0,c	;volatile
  2973   00652A  EF99  F032         	goto	u911
  2974   00652E  EF9B  F032         	goto	u910
  2975   006532                     u911:
  2976   006532  EF94  F032         	goto	l207
  2977   006536                     u910:
  2978   006536                     
  2979                           ;I2C_Master.c: 95:  __nop();
  2980   006536  0000               	nop	
  2981                           
  2982                           ;I2C_Master.c: 96:     __nop();
  2983   006538  0000               	nop	
  2984                           
  2985                           ;I2C_Master.c: 97:     __nop();
  2986   00653A  0000               	nop	
  2987                           
  2988                           ;I2C_Master.c: 98:     __nop();
  2989   00653C  0000               	nop	
  2990                           
  2991                           ;I2C_Master.c: 99:     __nop();
  2992   00653E  0000               	nop	
  2993                           
  2994                           ;I2C_Master.c: 100:     __nop();
  2995   006540  0000               	nop	
  2996                           
  2997                           ;I2C_Master.c: 101:     __nop();
  2998   006542  0000               	nop	
  2999                           
  3000                           ;I2C_Master.c: 102:     __nop();
  3001   006544  0000               	nop	
  3002                           
  3003                           ;I2C_Master.c: 103:     __nop();
  3004   006546  0000               	nop	
  3005                           
  3006                           ;I2C_Master.c: 104:     __nop();
  3007   006548  0000               	nop	
  3008                           
  3009                           ;I2C_Master.c: 105:     __nop();
  3010   00654A  0000               	nop	
  3011                           
  3012                           ;I2C_Master.c: 106:     __nop();
  3013   00654C  0000               	nop	
  3014                           
  3015                           ;I2C_Master.c: 107:     __nop();
  3016   00654E  0000               	nop	
  3017                           
  3018                           ;I2C_Master.c: 108:     __nop();
  3019   006550  0000               	nop	
  3020                           
  3021                           ;I2C_Master.c: 109:     __nop();
  3022   006552  0000               	nop	
  3023                           
  3024                           ;I2C_Master.c: 110:     __nop();
  3025   006554  0000               	nop	
  3026                           
  3027                           ;I2C_Master.c: 111:     __nop();
  3028   006556  0000               	nop	
  3029                           
  3030                           ;I2C_Master.c: 112:     __nop();
  3031   006558  0000               	nop	
  3032                           
  3033                           ;I2C_Master.c: 113:     __nop();
  3034   00655A  0000               	nop	
  3035                           
  3036                           ;I2C_Master.c: 114:     __nop();
  3037   00655C  0000               	nop	
  3038                           
  3039                           ;I2C_Master.c: 115:     __nop();
  3040   00655E  0000               	nop	
  3041                           
  3042                           ;I2C_Master.c: 116:     __nop();
  3043   006560  0000               	nop	
  3044                           
  3045                           ;I2C_Master.c: 118:  x = SSPBUF;
  3046   006562  CFC9 F001          	movff	4041,I2C_RECEBE@x	;volatile
  3047   006566                     
  3048                           ;I2C_Master.c: 119:  return x;
  3049   006566  5001               	movf	I2C_RECEBE@x^0,w,c
  3050   006568  0012               	return		;funcret
  3051   00656A                     __end_of_I2C_RECEBE:
  3052                           	callstack 0
  3053                           
  3054 ;; *************** function _I2C_NACK *****************
  3055 ;; Defined at:
  3056 ;;		line 127 in file "I2C_Master.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;		None
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;		None
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  1    wreg      void 
  3063 ;; Registers used:
  3064 ;;		None
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3070 ;;      Params:         0       0       0       0       0       0       0
  3071 ;;      Locals:         0       0       0       0       0       0       0
  3072 ;;      Temps:          0       0       0       0       0       0       0
  3073 ;;      Totals:         0       0       0       0       0       0       0
  3074 ;;Total ram usage:        0 bytes
  3075 ;; Hardware stack levels used: 1
  3076 ;; This function calls:
  3077 ;;		Nothing
  3078 ;; This function is called by:
  3079 ;;		_i2c_read
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083                           	psect	text18
  3084   006388                     __ptext18:
  3085                           	callstack 0
  3086   006388                     _I2C_NACK:
  3087                           	callstack 28
  3088   006388                     
  3089                           ;I2C_Master.c: 129:  SSPCON2bits.ACKDT = 1;
  3090   006388  8AC5               	bsf	197,5,c	;volatile
  3091                           
  3092                           ;I2C_Master.c: 130:  SSPCON2bits.ACKEN = 1;
  3093   00638A  88C5               	bsf	197,4,c	;volatile
  3094   00638C                     l219:
  3095   00638C  B8C5               	btfsc	197,4,c	;volatile
  3096   00638E  EFCB  F031         	goto	u931
  3097   006392  EFCD  F031         	goto	u930
  3098   006396                     u931:
  3099   006396  EFC6  F031         	goto	l219
  3100   00639A                     u930:
  3101   00639A  0012               	return		;funcret
  3102   00639C                     __end_of_I2C_NACK:
  3103                           	callstack 0
  3104                           
  3105 ;; *************** function _I2C_ACK *****************
  3106 ;; Defined at:
  3107 ;;		line 121 in file "I2C_Master.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;		None
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;		None
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		None
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3121 ;;      Params:         0       0       0       0       0       0       0
  3122 ;;      Locals:         0       0       0       0       0       0       0
  3123 ;;      Temps:          0       0       0       0       0       0       0
  3124 ;;      Totals:         0       0       0       0       0       0       0
  3125 ;;Total ram usage:        0 bytes
  3126 ;; Hardware stack levels used: 1
  3127 ;; This function calls:
  3128 ;;		Nothing
  3129 ;; This function is called by:
  3130 ;;		_i2c_read
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           	psect	text19
  3135   006374                     __ptext19:
  3136                           	callstack 0
  3137   006374                     _I2C_ACK:
  3138                           	callstack 28
  3139   006374                     
  3140                           ;I2C_Master.c: 123:  SSPCON2bits.ACKDT = 0;
  3141   006374  9AC5               	bcf	197,5,c	;volatile
  3142                           
  3143                           ;I2C_Master.c: 124:  SSPCON2bits.ACKEN = 1;
  3144   006376  88C5               	bsf	197,4,c	;volatile
  3145   006378                     l213:
  3146   006378  B8C5               	btfsc	197,4,c	;volatile
  3147   00637A  EFC1  F031         	goto	u921
  3148   00637E  EFC3  F031         	goto	u920
  3149   006382                     u921:
  3150   006382  EFBC  F031         	goto	l213
  3151   006386                     u920:
  3152   006386  0012               	return		;funcret
  3153   006388                     __end_of_I2C_ACK:
  3154                           	callstack 0
  3155                           
  3156 ;; *************** function _initUART *****************
  3157 ;; Defined at:
  3158 ;;		line 60 in file "main.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;		None
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;		None
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg, status,2
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3172 ;;      Params:         0       0       0       0       0       0       0
  3173 ;;      Locals:         0       0       0       0       0       0       0
  3174 ;;      Temps:          0       0       0       0       0       0       0
  3175 ;;      Totals:         0       0       0       0       0       0       0
  3176 ;;Total ram usage:        0 bytes
  3177 ;; Hardware stack levels used: 1
  3178 ;; This function calls:
  3179 ;;		Nothing
  3180 ;; This function is called by:
  3181 ;;		_main
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text20
  3186   0063B2                     __ptext20:
  3187                           	callstack 0
  3188   0063B2                     _initUART:
  3189                           	callstack 30
  3190   0063B2                     
  3191                           ;main.c: 61: 
  3192   0063B2  9C94               	bcf	148,6,c	;volatile
  3193                           
  3194                           ;main.c: 62: 
  3195   0063B4  8E94               	bsf	148,7,c	;volatile
  3196   0063B6                     
  3197                           ;main.c: 63: 
  3198   0063B6  0E22               	movlw	34
  3199   0063B8  6EAF               	movwf	175,c	;volatile
  3200                           
  3201                           ;main.c: 64: 
  3202   0063BA  0E00               	movlw	0
  3203   0063BC  6EB0               	movwf	176,c	;volatile
  3204   0063BE                     
  3205                           ;main.c: 65: 
  3206   0063BE  86B8               	bsf	184,3,c	;volatile
  3207   0063C0                     
  3208                           ;main.c: 66: void i2c_write(uint16_t address, const uint8_t *data, uint16_t length) {
  3209   0063C0  84AC               	bsf	172,2,c	;volatile
  3210   0063C2                     
  3211                           ;main.c: 67:     for (uint16_t i = 0; i < length; i++) {
  3212   0063C2  98AC               	bcf	172,4,c	;volatile
  3213   0063C4                     
  3214                           ;main.c: 68:         I2C_START();
  3215   0063C4  8AAC               	bsf	172,5,c	;volatile
  3216   0063C6                     
  3217                           ;main.c: 69:         I2C_TRANSMITE(0xA0);
  3218   0063C6  8EAB               	bsf	171,7,c	;volatile
  3219   0063C8                     
  3220                           ;main.c: 70:         I2C_TRANSMITE((address >> 8) & 0xFF);
  3221   0063C8  88AB               	bsf	171,4,c	;volatile
  3222   0063CA  0012               	return		;funcret
  3223   0063CC                     __end_of_initUART:
  3224                           	callstack 0
  3225                           
  3226 ;; *************** function _init *****************
  3227 ;; Defined at:
  3228 ;;		line 197 in file "main.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;		None
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;		None
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  1    wreg      void 
  3235 ;; Registers used:
  3236 ;;		wreg, status,2, status,0
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3242 ;;      Params:         0       0       0       0       0       0       0
  3243 ;;      Locals:         0       0       0       0       0       0       0
  3244 ;;      Temps:          0       0       0       0       0       0       0
  3245 ;;      Totals:         0       0       0       0       0       0       0
  3246 ;;Total ram usage:        0 bytes
  3247 ;; Hardware stack levels used: 1
  3248 ;; This function calls:
  3249 ;;		Nothing
  3250 ;; This function is called by:
  3251 ;;		_main
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text21
  3256   006360                     __ptext21:
  3257                           	callstack 0
  3258   006360                     _init:
  3259                           	callstack 30
  3260   006360                     
  3261                           ;main.c: 199:         for (uint8_t j = 0; j < 4 && (i + j) < length; j++) {
  3262   006360  0E00               	movlw	0
  3263   006362  6E95               	movwf	149,c	;volatile
  3264   006364                     
  3265                           ;main.c: 200:             digits[j] = (uint8_t)(sequence[i + j] - '0');
  3266   006364  0E0F               	movlw	15
  3267   006366  1693               	andwf	147,f,c	;volatile
  3268   006368                     
  3269                           ;main.c: 201:         }
  3270   006368  0E00               	movlw	0
  3271   00636A  6E8C               	movwf	140,c	;volatile
  3272                           
  3273                           ;main.c: 202:         for (uint8_t j = 0; j < 4; j++) {
  3274   00636C  0E0F               	movlw	15
  3275   00636E  168A               	andwf	138,f,c	;volatile
  3276   006370                     
  3277                           ;main.c: 203:             display_digit(digits[j], j);
  3278   006370  8093               	bsf	147,0,c	;volatile
  3279   006372  0012               	return		;funcret
  3280   006374                     __end_of_init:
  3281                           	callstack 0
  3282                           
  3283 ;; *************** function _display_digit *****************
  3284 ;; Defined at:
  3285 ;;		line 206 in file "main.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;  digit           1    wreg     unsigned char 
  3288 ;;  position        1    0[COMRAM] unsigned char 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;  digit           1    3[COMRAM] unsigned char 
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3300 ;;      Params:         1       0       0       0       0       0       0
  3301 ;;      Locals:         1       0       0       0       0       0       0
  3302 ;;      Temps:          2       0       0       0       0       0       0
  3303 ;;      Totals:         4       0       0       0       0       0       0
  3304 ;;Total ram usage:        4 bytes
  3305 ;; Hardware stack levels used: 1
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_main
  3310 ;;		_display_sequence
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           	psect	text22
  3315   0065BC                     __ptext22:
  3316                           	callstack 0
  3317   0065BC                     _display_digit:
  3318                           	callstack 30
  3319                           
  3320                           ;incstack = 0
  3321                           ;display_digit@digit stored from wreg
  3322   0065BC  6E04               	movwf	display_digit@digit^0,c
  3323   0065BE                     
  3324                           ;main.c: 207: }
  3325   0065BE  0E0A               	movlw	10
  3326   0065C0  6004               	cpfslt	display_digit@digit^0,c
  3327   0065C2  EFE5  F032         	goto	u1031
  3328   0065C6  EFE7  F032         	goto	u1030
  3329   0065CA                     u1031:
  3330   0065CA  EF0C  F033         	goto	l104
  3331   0065CE                     u1030:
  3332   0065CE                     
  3333                           ;main.c: 208: 
  3334   0065CE  0E61               	movlw	low _segment_map
  3335   0065D0  2404               	addwf	display_digit@digit^0,w,c
  3336   0065D2  6EF6               	movwf	tblptrl,c
  3337   0065D4  6AF7               	clrf	tblptrh,c
  3338   0065D6  0E6E               	movlw	high _segment_map
  3339   0065D8  22F7               	addwfc	tblptrh,f,c
  3340   0065DA                     	if	0	;There are less than 3 active tblptr bytes
  3341   0065DA                     	endif
  3342   0065DA  0008               	tblrd		*
  3343   0065DC  CFF5 FF8C          	movff	tablat,3980	;volatile
  3344   0065E0                     
  3345                           ;main.c: 209: int main(void) {
  3346   0065E0  C001  F002         	movff	display_digit@position,??_display_digit
  3347   0065E4  0E04               	movlw	4
  3348   0065E6  2602               	addwf	??_display_digit^0,f,c
  3349   0065E8  0E01               	movlw	1
  3350   0065EA  6E03               	movwf	(??_display_digit+1)^0,c
  3351   0065EC  2A02               	incf	??_display_digit^0,f,c
  3352   0065EE  EFFB  F032         	goto	u1044
  3353   0065F2                     u1045:
  3354   0065F2  90D8               	bcf	status,0,c
  3355   0065F4  3603               	rlcf	(??_display_digit+1)^0,f,c
  3356   0065F6                     u1044:
  3357   0065F6  2E02               	decfsz	??_display_digit^0,f,c
  3358   0065F8  EFF9  F032         	goto	u1045
  3359   0065FC  508A               	movf	138,w,c	;volatile
  3360   0065FE  0B0F               	andlw	15
  3361   006600  1003               	iorwf	(??_display_digit+1)^0,w,c
  3362   006602  6E8A               	movwf	138,c	;volatile
  3363   006604                     
  3364                           ;main.c: 210:     initUART();
  3365   006604  0E1A               	movlw	26
  3366   006606  6E02               	movwf	??_display_digit^0,c
  3367   006608  0EF8               	movlw	248
  3368   00660A                     u1177:
  3369   00660A  2EE8               	decfsz	wreg,f,c
  3370   00660C  D7FE               	bra	u1177
  3371   00660E  2E02               	decfsz	??_display_digit^0,f,c
  3372   006610  D7FC               	bra	u1177
  3373   006612  D000               	nop2	
  3374   006614                     
  3375                           ;main.c: 211:     I2C_INICIA();
  3376   006614  0E0F               	movlw	15
  3377   006616  168A               	andwf	138,f,c	;volatile
  3378   006618                     l104:
  3379   006618  0012               	return		;funcret
  3380   00661A                     __end_of_display_digit:
  3381                           	callstack 0
  3382                           
  3383 ;; *************** function _count_characters *****************
  3384 ;; Defined at:
  3385 ;;		line 187 in file "main.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  message         2    0[COMRAM] PTR const unsigned char 
  3388 ;;		 -> STR_8(8), 
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;  i               2    6[COMRAM] int 
  3391 ;;  count           2    4[COMRAM] int 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  2    0[COMRAM] int 
  3394 ;; Registers used:
  3395 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3401 ;;      Params:         2       0       0       0       0       0       0
  3402 ;;      Locals:         4       0       0       0       0       0       0
  3403 ;;      Temps:          2       0       0       0       0       0       0
  3404 ;;      Totals:         8       0       0       0       0       0       0
  3405 ;;Total ram usage:        8 bytes
  3406 ;; Hardware stack levels used: 1
  3407 ;; This function calls:
  3408 ;;		Nothing
  3409 ;; This function is called by:
  3410 ;;		_main
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           	psect	text23
  3415   0064CA                     __ptext23:
  3416                           	callstack 0
  3417   0064CA                     _count_characters:
  3418                           	callstack 30
  3419   0064CA                     
  3420                           ;main.c: 188:     if (digit < 10) {
  3421   0064CA  0E00               	movlw	0
  3422   0064CC  6E06               	movwf	(count_characters@count+1)^0,c
  3423   0064CE  0E00               	movlw	0
  3424   0064D0  6E05               	movwf	count_characters@count^0,c
  3425                           
  3426                           ;main.c: 191:         _delay((unsigned long)((5)*(16000000/4000.0)));
  3427   0064D2  0E00               	movlw	0
  3428   0064D4  6E08               	movwf	(count_characters@i+1)^0,c
  3429   0064D6  0E00               	movlw	0
  3430   0064D8  6E07               	movwf	count_characters@i^0,c
  3431   0064DA  EF73  F032         	goto	l1738
  3432   0064DE                     l1736:
  3433                           
  3434                           ;main.c: 192:         LATB &= 0x0F;
  3435   0064DE  4A05               	infsnz	count_characters@count^0,f,c
  3436   0064E0  2A06               	incf	(count_characters@count+1)^0,f,c
  3437                           
  3438                           ;main.c: 193:     }
  3439   0064E2  4A07               	infsnz	count_characters@i^0,f,c
  3440   0064E4  2A08               	incf	(count_characters@i+1)^0,f,c
  3441   0064E6                     l1738:
  3442   0064E6  5007               	movf	count_characters@i^0,w,c
  3443   0064E8  2401               	addwf	count_characters@message^0,w,c
  3444   0064EA  6E03               	movwf	??_count_characters^0,c
  3445   0064EC  5008               	movf	(count_characters@i+1)^0,w,c
  3446   0064EE  2002               	addwfc	(count_characters@message+1)^0,w,c
  3447   0064F0  6E04               	movwf	(??_count_characters+1)^0,c
  3448   0064F2  C003  FFF6         	movff	??_count_characters,tblptrl
  3449   0064F6  C004  FFF7         	movff	??_count_characters+1,tblptrh
  3450   0064FA                     	if	0	;tblptru may be non-zero
  3451   0064FA                     	endif
  3452   0064FA                     	if	0	;tblptru may be non-zero
  3453   0064FA                     	endif
  3454   0064FA  0008               	tblrd		*
  3455   0064FC  50F5               	movf	tablat,w,c
  3456   0064FE  0900               	iorlw	0
  3457   006500  A4D8               	btfss	status,2,c
  3458   006502  EF85  F032         	goto	u1021
  3459   006506  EF87  F032         	goto	u1020
  3460   00650A                     u1021:
  3461   00650A  EF6F  F032         	goto	l1736
  3462   00650E                     u1020:
  3463   00650E                     
  3464                           ;main.c: 195: 
  3465   00650E  C005  F001         	movff	count_characters@count,?_count_characters
  3466   006512  C006  F002         	movff	count_characters@count+1,?_count_characters+1
  3467   006516  0012               	return		;funcret
  3468   006518                     __end_of_count_characters:
  3469                           	callstack 0
  3470                           
  3471 ;; *************** function _I2C_INICIA *****************
  3472 ;; Defined at:
  3473 ;;		line 17 in file "I2C_Master.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg, status,2
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3487 ;;      Params:         0       0       0       0       0       0       0
  3488 ;;      Locals:         0       0       0       0       0       0       0
  3489 ;;      Temps:          0       0       0       0       0       0       0
  3490 ;;      Totals:         0       0       0       0       0       0       0
  3491 ;;Total ram usage:        0 bytes
  3492 ;; Hardware stack levels used: 1
  3493 ;; This function calls:
  3494 ;;		Nothing
  3495 ;; This function is called by:
  3496 ;;		_main
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           	psect	text24
  3501   00631A                     __ptext24:
  3502                           	callstack 0
  3503   00631A                     _I2C_INICIA:
  3504                           	callstack 30
  3505   00631A                     
  3506                           ;I2C_Master.c: 18:     TRISC = 0xff;
  3507   00631A  6894               	setf	148,c	;volatile
  3508   00631C                     
  3509                           ;I2C_Master.c: 20:  SSPCON1 = 0b00101000;
  3510   00631C  0E28               	movlw	40
  3511   00631E  6EC6               	movwf	198,c	;volatile
  3512                           
  3513                           ;I2C_Master.c: 23:  SSPADD = 20;
  3514   006320  0E14               	movlw	20
  3515   006322  6EC8               	movwf	200,c	;volatile
  3516                           
  3517                           ;I2C_Master.c: 24:  SSPSTAT = 0b10000000;
  3518   006324  0E80               	movlw	128
  3519   006326  6EC7               	movwf	199,c	;volatile
  3520   006328  0012               	return		;funcret
  3521   00632A                     __end_of_I2C_INICIA:
  3522                           	callstack 0
  3523                           
  3524                           	psect	rparam
  3525   000000                     
  3526                           	psect	idloc
  3527                           
  3528                           ;Config register IDLOC0 @ 0x200000
  3529                           ;	unspecified, using default values
  3530   200000                     	org	2097152
  3531   200000  FF                 	db	255
  3532                           
  3533                           ;Config register IDLOC1 @ 0x200001
  3534                           ;	unspecified, using default values
  3535   200001                     	org	2097153
  3536   200001  FF                 	db	255
  3537                           
  3538                           ;Config register IDLOC2 @ 0x200002
  3539                           ;	unspecified, using default values
  3540   200002                     	org	2097154
  3541   200002  FF                 	db	255
  3542                           
  3543                           ;Config register IDLOC3 @ 0x200003
  3544                           ;	unspecified, using default values
  3545   200003                     	org	2097155
  3546   200003  FF                 	db	255
  3547                           
  3548                           ;Config register IDLOC4 @ 0x200004
  3549                           ;	unspecified, using default values
  3550   200004                     	org	2097156
  3551   200004  FF                 	db	255
  3552                           
  3553                           ;Config register IDLOC5 @ 0x200005
  3554                           ;	unspecified, using default values
  3555   200005                     	org	2097157
  3556   200005  FF                 	db	255
  3557                           
  3558                           ;Config register IDLOC6 @ 0x200006
  3559                           ;	unspecified, using default values
  3560   200006                     	org	2097158
  3561   200006  FF                 	db	255
  3562                           
  3563                           ;Config register IDLOC7 @ 0x200007
  3564                           ;	unspecified, using default values
  3565   200007                     	org	2097159
  3566   200007  FF                 	db	255
  3567                           
  3568                           	psect	config
  3569                           
  3570                           ; Padding undefined space
  3571   300000                     	org	3145728
  3572   300000  FF                 	db	255
  3573                           
  3574                           ;Config register CONFIG1H @ 0x300001
  3575                           ;	Oscillator Selection bits
  3576                           ;	OSC = HS, HS oscillator
  3577                           ;	Fail-Safe Clock Monitor Enable bit
  3578                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3579                           ;	Internal/External Oscillator Switchover bit
  3580                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3581   300001                     	org	3145729
  3582   300001  02                 	db	2
  3583                           
  3584                           ;Config register CONFIG2L @ 0x300002
  3585                           ;	Power-up Timer Enable bit
  3586                           ;	PWRT = OFF, PWRT disabled
  3587                           ;	Brown-out Reset Enable bits
  3588                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3589                           ;	Brown Out Reset Voltage bits
  3590                           ;	BORV = 0x3, unprogrammed default
  3591   300002                     	org	3145730
  3592   300002  19                 	db	25
  3593                           
  3594                           ;Config register CONFIG2H @ 0x300003
  3595                           ;	Watchdog Timer Enable bit
  3596                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3597                           ;	Watchdog Timer Postscale Select bits
  3598                           ;	WDTPS = 0xF, unprogrammed default
  3599   300003                     	org	3145731
  3600   300003  1E                 	db	30
  3601                           
  3602                           ; Padding undefined space
  3603   300004                     	org	3145732
  3604   300004  FF                 	db	255
  3605                           
  3606                           ;Config register CONFIG3H @ 0x300005
  3607                           ;	CCP2 MUX bit
  3608                           ;	CCP2MX = 0x1, unprogrammed default
  3609                           ;	PORTB A/D Enable bit
  3610                           ;	PBADEN = 0x1, unprogrammed default
  3611                           ;	Low-Power Timer1 Oscillator Enable bit
  3612                           ;	LPT1OSC = 0x0, unprogrammed default
  3613                           ;	MCLR Pin Enable bit
  3614                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3615   300005                     	org	3145733
  3616   300005  83                 	db	131
  3617                           
  3618                           ;Config register CONFIG4L @ 0x300006
  3619                           ;	Stack Full/Underflow Reset Enable bit
  3620                           ;	STVREN = 0x1, unprogrammed default
  3621                           ;	Single-Supply ICSP Enable bit
  3622                           ;	LVP = OFF, Single-Supply ICSP disabled
  3623                           ;	Extended Instruction Set Enable bit
  3624                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3625                           ;	Background Debugger Enable bit
  3626                           ;	DEBUG = 0x1, unprogrammed default
  3627   300006                     	org	3145734
  3628   300006  81                 	db	129
  3629                           
  3630                           ; Padding undefined space
  3631   300007                     	org	3145735
  3632   300007  FF                 	db	255
  3633                           
  3634                           ;Config register CONFIG5L @ 0x300008
  3635                           ;	unspecified, using default values
  3636                           ;	Code Protection bit
  3637                           ;	CP0 = 0x1, unprogrammed default
  3638                           ;	Code Protection bit
  3639                           ;	CP1 = 0x1, unprogrammed default
  3640                           ;	Code Protection bit
  3641                           ;	CP2 = 0x1, unprogrammed default
  3642                           ;	Code Protection bit
  3643                           ;	CP3 = 0x1, unprogrammed default
  3644   300008                     	org	3145736
  3645   300008  0F                 	db	15
  3646                           
  3647                           ;Config register CONFIG5H @ 0x300009
  3648                           ;	unspecified, using default values
  3649                           ;	Boot Block Code Protection bit
  3650                           ;	CPB = 0x1, unprogrammed default
  3651                           ;	Data EEPROM Code Protection bit
  3652                           ;	CPD = 0x1, unprogrammed default
  3653   300009                     	org	3145737
  3654   300009  C0                 	db	192
  3655                           
  3656                           ;Config register CONFIG6L @ 0x30000A
  3657                           ;	unspecified, using default values
  3658                           ;	Write Protection bit
  3659                           ;	WRT0 = 0x1, unprogrammed default
  3660                           ;	Write Protection bit
  3661                           ;	WRT1 = 0x1, unprogrammed default
  3662                           ;	Write Protection bit
  3663                           ;	WRT2 = 0x1, unprogrammed default
  3664                           ;	Write Protection bit
  3665                           ;	WRT3 = 0x1, unprogrammed default
  3666   30000A                     	org	3145738
  3667   30000A  0F                 	db	15
  3668                           
  3669                           ;Config register CONFIG6H @ 0x30000B
  3670                           ;	unspecified, using default values
  3671                           ;	Configuration Register Write Protection bit
  3672                           ;	WRTC = 0x1, unprogrammed default
  3673                           ;	Boot Block Write Protection bit
  3674                           ;	WRTB = 0x1, unprogrammed default
  3675                           ;	Data EEPROM Write Protection bit
  3676                           ;	WRTD = 0x1, unprogrammed default
  3677   30000B                     	org	3145739
  3678   30000B  E0                 	db	224
  3679                           
  3680                           ;Config register CONFIG7L @ 0x30000C
  3681                           ;	unspecified, using default values
  3682                           ;	Table Read Protection bit
  3683                           ;	EBTR0 = 0x1, unprogrammed default
  3684                           ;	Table Read Protection bit
  3685                           ;	EBTR1 = 0x1, unprogrammed default
  3686                           ;	Table Read Protection bit
  3687                           ;	EBTR2 = 0x1, unprogrammed default
  3688                           ;	Table Read Protection bit
  3689                           ;	EBTR3 = 0x1, unprogrammed default
  3690   30000C                     	org	3145740
  3691   30000C  0F                 	db	15
  3692                           
  3693                           ;Config register CONFIG7H @ 0x30000D
  3694                           ;	unspecified, using default values
  3695                           ;	Boot Block Table Read Protection bit
  3696                           ;	EBTRB = 0x1, unprogrammed default
  3697   30000D                     	org	3145741
  3698   30000D  40                 	db	64
  3699                           tosu	equ	0xFFF
  3700                           tosh	equ	0xFFE
  3701                           tosl	equ	0xFFD
  3702                           stkptr	equ	0xFFC
  3703                           pclatu	equ	0xFFB
  3704                           pclath	equ	0xFFA
  3705                           pcl	equ	0xFF9
  3706                           tblptru	equ	0xFF8
  3707                           tblptrh	equ	0xFF7
  3708                           tblptrl	equ	0xFF6
  3709                           tablat	equ	0xFF5
  3710                           prodh	equ	0xFF4
  3711                           prodl	equ	0xFF3
  3712                           indf0	equ	0xFEF
  3713                           postinc0	equ	0xFEE
  3714                           postdec0	equ	0xFED
  3715                           preinc0	equ	0xFEC
  3716                           plusw0	equ	0xFEB
  3717                           fsr0h	equ	0xFEA
  3718                           fsr0l	equ	0xFE9
  3719                           wreg	equ	0xFE8
  3720                           indf1	equ	0xFE7
  3721                           postinc1	equ	0xFE6
  3722                           postdec1	equ	0xFE5
  3723                           preinc1	equ	0xFE4
  3724                           plusw1	equ	0xFE3
  3725                           fsr1h	equ	0xFE2
  3726                           fsr1l	equ	0xFE1
  3727                           bsr	equ	0xFE0
  3728                           indf2	equ	0xFDF
  3729                           postinc2	equ	0xFDE
  3730                           postdec2	equ	0xFDD
  3731                           preinc2	equ	0xFDC
  3732                           plusw2	equ	0xFDB
  3733                           fsr2h	equ	0xFDA
  3734                           fsr2l	equ	0xFD9
  3735                           status	equ	0xFD8

Data Sizes:
    Strings     387
    Constant    27
    Data        4
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     60     103
    BANK0           128    109     113
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    count_characters@message	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_8(CODE[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    i2c_read@data	PTR unsigned char  size(1) Largest target is 100
		 -> main@read_buffer(BANK0[100]), 

    i2c_write@data	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_8(CODE[8]), 

    main@message	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_8(CODE[8]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_1(CODE[41]), STR_10(CODE[25]), STR_11(CODE[42]), STR_12(CODE[25]), 
		 -> STR_2(CODE[41]), STR_3(CODE[55]), STR_4(CODE[60]), STR_5(CODE[24]), 
		 -> STR_6(CODE[45]), STR_7(CODE[33]), STR_9(CODE[29]), 

    S1073$buffer	PTR unsigned char  size(2) Largest target is 0

    S1073$source	PTR const unsigned char  size(2) Largest target is 0

    serial_memory_read@buffer	PTR unsigned char  size(1) Largest target is 100
		 -> main@read_buffer(BANK0[100]), 

    serial_memory_write@data	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_8(CODE[8]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 60
		 -> STR_1(CODE[41]), STR_10(CODE[25]), STR_11(CODE[42]), STR_12(CODE[25]), 
		 -> STR_2(CODE[41]), STR_3(CODE[55]), STR_4(CODE[60]), STR_5(CODE[24]), 
		 -> STR_6(CODE[45]), STR_7(CODE[33]), STR_9(CODE[29]), 

    vfpfcnvrt@cp_1137	PTR unsigned char  size(2) Largest target is 100
		 -> main@read_buffer(BANK0[100]), ?_printf(COMRAM[2]), STR_8(CODE[8]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 60
		 -> STR_1(CODE[41]), STR_10(CODE[25]), STR_11(CODE[42]), STR_12(CODE[25]), 
		 -> STR_2(CODE[41]), STR_3(CODE[55]), STR_4(CODE[60]), STR_5(CODE[24]), 
		 -> STR_6(CODE[45]), STR_7(CODE[33]), STR_9(CODE[29]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_1(CODE[41]), STR_10(CODE[25]), STR_11(CODE[42]), STR_12(CODE[25]), 
		 -> STR_2(CODE[41]), STR_3(CODE[55]), STR_4(CODE[60]), STR_5(CODE[24]), 
		 -> STR_6(CODE[45]), STR_7(CODE[33]), STR_9(CODE[29]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_serial_memory_write
    _serial_memory_write->_i2c_write
    _i2c_write->_printf
    _serial_memory_seek->_printf
    _serial_memory_read->_i2c_read
    _i2c_read->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               111   111      0   25082
                                             58 COMRAM     2     2      0
                                              0 BANK0    109   109      0
                         _I2C_INICIA
                   _count_characters
                      _display_digit
                               _init
                           _initUART
                             _printf
                 _serial_memory_read
                 _serial_memory_seek
                _serial_memory_write
 ---------------------------------------------------------------------------------
 (1) _serial_memory_write                                  6     2      4    8259
                                             52 COMRAM     6     2      4
                          _i2c_write
                             _printf
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                           10     4      6    4290
                                             42 COMRAM    10     4      6
                          _I2C_START
                           _I2C_STOP
                      _I2C_TRANSMITE
                             _printf
 ---------------------------------------------------------------------------------
 (1) _serial_memory_seek                                   5     2      3    4060
                                             42 COMRAM     5     2      3
                             _printf
 ---------------------------------------------------------------------------------
 (1) _serial_memory_read                                   3     0      3    8326
                                             51 COMRAM     3     0      3
                           _i2c_read
                             _printf
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             9     4      5    4357
                                             42 COMRAM     9     4      5
                            _I2C_ACK
                           _I2C_NACK
                         _I2C_RECEBE
                        _I2C_RESTART
                          _I2C_START
                           _I2C_STOP
                      _I2C_TRANSMITE
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              11     3      8    3751
                                             33 COMRAM     9     1      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     2      5    2859
                                             26 COMRAM     7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           16    12      4    2501
                                             10 COMRAM    16    12      4
                            ___lwdiv
                            ___lwmod
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     956
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _I2C_TRANSMITE                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_STOP                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_START                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_RESTART                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_RECEBE                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_digit                                        4     3      1     218
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _count_characters                                     8     6      2     146
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _I2C_INICIA                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_INICIA
   _count_characters
   _display_digit
   _init
   _initUART
   _printf
     _vfprintf
       _vfpfcnvrt
         ___lwdiv
         ___lwmod
         _fputc
           _putch
   _serial_memory_read
     _i2c_read
       _I2C_ACK
       _I2C_NACK
       _I2C_RECEBE
       _I2C_RESTART
       _I2C_START
       _I2C_STOP
       _I2C_TRANSMITE
       _printf
     _printf
   _serial_memory_seek
     _printf
   _serial_memory_write
     _i2c_write
       _I2C_START
       _I2C_STOP
       _I2C_TRANSMITE
       _printf
     _printf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     6D      71       5       88.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3C      67       1       81.1%
BITBIGSFRhhhhh      36      0       0      16        0.0%
BITBIGSFRhll        15      0       0      20        0.0%
BITBIGSFRhhhl        C      0       0      17        0.0%
BITBIGSFRlll         A      0       0      23        0.0%
BITBIGSFRhhl         7      0       0      18        0.0%
BITBIGSFRlh          6      0       0      21        0.0%
BITBIGSFRllh         1      0       0      22        0.0%
BITBIGSFRhlh         1      0       0      19        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D8      24        0.0%
DATA                 0      0      D8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue May 21 21:56:47 2024

                  _SSPSTATbits 0FC7                             l51 63CA                             l54 639E  
                           l72 6910                             l64 6A18                             l57 63B0  
                           l73 693A                             l81 65BA                             l90 6792  
                           l77 6482                             l85 66F6                             l96 650E  
                           l97 6516                            l100 6372                            l104 6618  
                          l210 6568                            l204 651A                            l213 6378  
                          l125 6B64                            l222 639A                            l126 6AB6  
                          l207 6528                            l127 6AE2                            l216 6386  
                          l209 6536                            l219 638C                            l171 632C  
                          l156 6328                            l180 63FE                            l165 633E  
                          l174 633A                            l191 6350                            l183 640C  
                          l168 634C                            l177 63F0                            l194 635E  
                          l723 66F0                            l716 66E8                            l733 667C  
                          l726 6674                            l903 63E8                            l940 6E5E  
                          l954 64C8                            l966 685C                            u600 63AC  
                          u601 63A8                            u610 6698                            u611 6694  
                          u620 66B6                            u700 6816                            u621 66B2  
                          u701 6812                            u630 66D2                            u710 6B8A  
                          u631 66CE                            u711 6B86                            u640 662C  
                          u800 6DA0                            u720 6BD0                            u641 6628  
                          u801 6D9C                            u721 6BCC                            u650 664A  
                          u810 6DDC                            u730 6C5C                            u651 6646  
                          u731 6C58                            u900 6528                            u660 6660  
                          u820 6E14                            u740 6C6C                            u901 6524  
                          u661 665C                            u741 6C68                            u910 6536  
                          u670 67A6                            u830 6E24                            u750 6CA2  
                          u911 6532                            u671 67A2                            u831 6E20  
                          u751 6C9E                            u920 6386                            u680 67B8  
                          u760 6CE4                            u840 64C0                            u921 6382  
                          u681 67B4                            u817 6DD2                            u761 6CE0  
                          u841 64BC                            u930 639A                            u850 634C  
                          u690 67E0                            u770 6D1A                            u931 6396  
                          u851 6348                            u691 67DC                            u827 6E0A  
                          u771 6D16                            u860 63FE                            u780 6D4C  
                          u940 6986                            u861 63FA                            u781 6D48  
                          u941 6982                            u870 640C                            u790 6D7E  
                          u950 6A18                            u871 6408                            u791 6D7A  
                          u951 6A14                            u880 635E                            u960 68B0  
                          u881 635A                            u961 68AC                            u890 633A  
                          u970 6904                            u891 6336                            u971 6900  
                          u980 693A                            u981 6936                            u990 6456  
                          u991 6452                __end_of_I2C_ACK 6388                            wreg 0FE8  
                         l1500 6BB4                           l1510 6C2E                           l1502 6BD0  
                         l1440 6686                           l1520 6C90                           l1512 6C4A  
                         l1504 6BE8                           l1600 6948                           l1450 66BC  
                         l1442 6698                           l1434 639E                           l1530 6CE4  
                         l1514 6C5C                           l1506 6C06                           l1602 694C  
                         l1452 66D2                           l1444 66A0                           l1460 661A  
                         l1436 63AC                           l1540 6D7E                           l1532 6CF0  
                         l1516 6C70                           l1508 6C0A                           l1524 6CA6  
                         l1620 69F2                           l1612 698A                           l1604 6952  
                         l1454 66DA                           l1446 66A8                           l1438 667E  
                         l1470 6660                           l1462 662C                           l1550 6DF0  
                         l1534 6CF8                           l1518 6C8E                           l1526 6CBE  
                         l1630 686E                           l1710 672E                           l1702 66F2  
                         l1622 69FE                           l1614 69A6                           l1606 6958  
                         l1456 66DC                           l1448 66B6                           l1472 6668  
                         l1464 6634                           l1480 67B8                           l1552 6DF4  
                         l1536 6D1A                           l1544 6D90                           l1528 6CC2  
                         l1640 6898                           l1632 6874                           l1720 6764  
                         l1704 6702                           l1616 69DE                           l1608 695E  
                         l1624 6A02                           l1800 6A6E                           l1458 66E2  
                         l1474 666E                           l1466 663C                           l1482 67C2  
                         l1546 6DA0                           l1554 6E28                           l1538 6D4C  
                         l1490 6B68                           l1570 64C0                           l1650 690C  
                         l1634 687A                           l1626 685E                           l1730 6790  
                         l1706 6712                           l1618 69E2                           l1810 6B02  
                         l1740 6360                           l1660 63B6                           l1468 664A  
                         l1484 67E0                           l1476 6794                           l1548 6DBC  
                         l1492 6B8A                           l1564 6484                           l1580 63D0  
                         l1652 6914                           l1644 68B4                           l1636 6880  
                         l1628 686A                           l1708 6722                           l1716 6734  
                         l1812 6B0E                           l1804 6A7E                           l1734 64CA  
                         l1750 65CE                           l1742 6364                           l1670 63C6  
                         l1662 63BE                           l1590 6566                           l1574 633C  
                         l1486 6816                           l1478 67A6                           l1494 6B96  
                         l1558 6E38                           l1566 6490                           l1654 6920  
                         l1646 68E2                           l1638 688A                           l1726 6774  
                         l1718 6752                           l1822 6B36                           l1814 6B20  
                         l1806 6AA2                           l1760 631C                           l1736 64DE  
                         l1752 65E0                           l1744 6368                           l1672 63C8  
                         l1664 63C0                           l1584 634E                           l1576 63EC  
                         l1496 6BA2                           l1568 64A4                           l1648 6904  
                         l1656 6924                           l1728 6788                           l1824 6B3A  
                         l1816 6B30                           l1808 6AD6                           l1738 64E6  
                         l1754 6604                           l1746 6370                           l1666 63C2  
                         l1658 63B2                           l1594 6374                           l1586 632A  
                         l1498 6BA6                           l1578 63CC                           l1682 6468  
                         l1674 6444                           l1690 658A                           l1826 6B4C  
                         l1756 6614                           l1748 65BE                           l1668 63C4  
                         l1596 6388                           l1588 6518                           l1684 6480  
                         l1676 6456                           l1692 6596                           l1828 6B50  
                         l1758 631A                           l1678 6462                           l1598 693C  
                         l1790 6A1A                           l1696 659C                           l1688 656A  
                         l1792 6A22                           l1698 65B8                           l1794 6A26  
                         l1796 6A30                           l1798 6A44                 ?_display_digit 0001  
                         STR_1 6F46                           STR_2 6F46                           STR_3 6EB8  
                         STR_4 6E7C                           STR_5 6FDF                           STR_6 6EEF  
                         STR_7 6F6F                           STR_8 6FF7                           STR_9 6F90  
                         u1000 658A                           u1001 6586                           u1010 6764  
                         u1011 6760                           u1020 650E                           u1100 6AA2  
                         u1021 650A                           u1101 6A9E                           u1030 65CE  
                         u1110 6AD6                           u1031 65CA                           u1111 6AD2  
                         u1120 6B02                           u1121 6AFE                           u1130 6B60  
                         u1131 6B5C                           u1044 65F6                           u1045 65F2  
                         u1090 6A6E                           u1091 6A6A                           _LATB 0F8A  
                         u1167 69E8                           _LATD 0F8C                           u1177 660A  
                  main@message 00E8               __end_of_I2C_NACK 639C                           _dbuf 003D  
             __end_of_I2C_STOP 6360                           _main 6A1A                           _init 6360  
                         _prec 0063                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf1 0FE7                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           start 0000                     i2c_write@i 0033  
                 ___param_bank 0000                          ?_main 0001                          ?_init 0001  
                        STR_10 6FC6                          STR_11 6F1C                          STR_12 6FAD  
              __end_of___lwdiv 66F2                __end_of___lwmod 667E                   vfpfcnvrt@fmt 000D  
                        _SPBRG 0FAF                          _TRISB 0F93                          _TRISC 0F94  
                        _TRISD 0F95                          _TXREG 0FAD              __end_of_I2C_START 634E  
                        _flags 0067                          _fputc 6794                          _width 0061  
                        _putch 639C                          main@i 00EC                          tablat 0FF5  
                        status 0FD8                  _I2C_TRANSMITE 63EA    serial_memory_read@num_bytes 0035  
              __initialization 640E                   __end_of_main 6B68                   __end_of_init 6374  
             __end_of_i2c_read 693C                      ??_I2C_ACK 0001               _count_characters 64CA  
                       ??_main 003B                         ??_init 0001          display_sequence@F2951 005D  
                __activetblptr 0002                   ??_I2C_INICIA 0001                   ??_I2C_RECEBE 0001  
              ??_display_digit 0002                         ?_fputc 0002                         ?_putch 0001  
                 i2c_read@data 002D                 ?_I2C_TRANSMITE 0001                  vfpfcnvrt@done 0011  
                       _SPBRGH 0FB0                         _SSPADD 0FC8                         _SSPBUF 0FC9  
           __end_of_I2C_INICIA 632A             __end_of_I2C_RECEBE 656A                   vfprintf@cfmt 0020  
             __end_of_initUART 63CC                      ??___lwdiv 0005                      ??___lwmod 0005  
                       clear_0 6434                         isa$std 0001                         _printf 63CC  
                    ?_I2C_NACK 0001                      ?_I2C_STOP 0001                         fputc@c 0002  
                 __mediumconst 6E60                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8               __end_of_vfprintf 64CA                     __accesstop 0080  
      __end_of__initialization 643A                  ___rparam_used 0001                _current_pointer 0065  
               __pcstackCOMRAM 0001                   __pidataBANK0 6316                  __end_of_fputc 685E  
                __end_of_putch 63B2   serial_memory_write@num_bytes 0037                     ??_I2C_NACK 0001  
            __end_of_i2c_write 6A1A                     ??_I2C_STOP 0001                        ??_fputc 0006  
              ??_I2C_TRANSMITE 0001                        ??_putch 0001             main@message_length 00EA  
                    ?_i2c_read 002B                  ??_I2C_RESTART 0001                        _I2C_ACK 6374  
                      ?_printf 0022             display_digit@digit 0004                        _SSPCON1 0FC6  
                      _SSPCON2 0FC5                        _SSPSTAT 0FC7                      ?_initUART 0001  
     __end_of_count_characters 6518                     ??_i2c_read 0030                      _I2C_START 633C  
      count_characters@message 0001                        __Hparam 0000                        __Lparam 0000  
          __end_of_I2C_RESTART 633C                        ___lwdiv 667E                        ___lwmod 661A  
                    ?_vfprintf 001B                        __pcinit 640E                        __ramtop 0600  
              i2c_read@address 002B                        __ptext0 6A1A                        __ptext1 656A  
                      __ptext2 693C                        __ptext3 66F2                        __ptext4 6444  
                      __ptext5 685E                        __ptext6 63CC                        __ptext7 6484  
                      __ptext8 6B68                        __ptext9 6794        serial_memory_write@data 0035  
         end_of_initialization 643A                     ??_initUART 0001                     ?_I2C_START 0001  
                      fputc@fp 0004                  __Lmediumconst 6E60               vfpfcnvrt@cp_1137 0012  
        I2C_TRANSMITE@DADO_I2C 0001              __end_of_vfpfcnvrt 6E60     __end_of_serial_memory_read 6484  
   __end_of_serial_memory_seek 6794                      _RCSTAbits 0FAB                        postdec1 0FE5  
                      postdec2 0FDD                        postinc0 0FEE                        postinc1 0FE6  
                      postinc2 0FDE               vfpfcnvrt@convarg 0016                     ??_vfprintf 0020  
                i2c_write@data 002D                      _TRISBbits 0F93                      _TRISCbits 0F94  
        __end_of_display_digit 661A                     main@digits 00E4                      i2c_read@i 0032  
                    _TXSTAbits 0FAC                    _I2C_RESTART 632A            _serial_memory_write 656A  
                  vfpfcnvrt@ap 000E                    vfpfcnvrt@cp 0014                    vfpfcnvrt@fp 000B  
                  _BAUDCONbits 0FB8                 __end_of_printf 63EA           ?_serial_memory_write 0035  
          start_initialization 640E       serial_memory_read@buffer 0034                      _i2c_write 693C  
                  ??_I2C_START 0001          count_characters@count 0005                    vfprintf@fmt 001D  
                  I2C_RECEBE@x 0001                    __pdataBANK0 00ED                       ?_I2C_ACK 0001  
                     ??_printf 002A       serial_memory_seek@offset 002B       serial_memory_seek@origin 002D  
        ??_serial_memory_write 0039                    __pbssCOMRAM 003D                  __pcstackBANK0 0080  
                   ?_i2c_write 002B          __end_of_I2C_TRANSMITE 640E              ?_count_characters 0001  
           ??_count_characters 0003               ___lwdiv@dividend 0001                  __pmediumconst 6E60  
                     ?___lwdiv 0001                       ?___lwmod 0001                       _I2C_NACK 6388  
                     _I2C_STOP 634E               ___lwdiv@quotient 0005                 i2c_read@length 002E  
                    main@F2959 00ED                      _vfpfcnvrt 6B68                     _I2C_INICIA 631A  
                   _I2C_RECEBE 6518             _serial_memory_read 6444             _serial_memory_seek 66F2  
              main@read_buffer 0080                    ??_i2c_write 0031                     vfpfcnvrt@c 001A  
serial_memory_seek@new_pointer 002E                      copy_data0 6422            ?_serial_memory_read 0034  
          ?_serial_memory_seek 002B                       _i2c_read 685E            __end_of_segment_map 6E7C  
                 ?_I2C_RESTART 0001                       __Hrparam 0000                     vfprintf@ap 001F  
                     __Lrparam 0000                     vfprintf@fp 001B           ??_serial_memory_read 0037  
         ??_serial_memory_seek 002E                     ?_vfpfcnvrt 000B                ___lwdiv@divisor 0003  
              ___lwdiv@counter 0007                       __ptext10 639C                       __ptext11 661A  
                     __ptext20 63B2                       __ptext12 667E                       __ptext21 6360  
                     __ptext13 63EA                       __ptext22 65BC                       __ptext14 634E  
                     __ptext23 64CA                       __ptext15 633C                       __ptext24 631A  
                     __ptext16 632A                       __ptext17 6518                       __ptext18 6388  
                     __ptext19 6374                       _initUART 63B2                       isa$xinst 0000  
        display_digit@position 0001                       _vfprintf 6484                      printf@fmt 0022  
                  ?_I2C_INICIA 0001                    ?_I2C_RECEBE 0001                      putch@byte 0001  
                  _segment_map 6E61              count_characters@i 0007               ___lwmod@dividend 0001  
                     printf@ap 002A    __end_of_serial_memory_write 65BC                    ??_vfpfcnvrt 000F  
              ___lwmod@divisor 0003                ___lwmod@counter 0005               i2c_write@address 002B  
                  _SSPCON2bits 0FC5                  _display_digit 65BC                i2c_write@length 002F  

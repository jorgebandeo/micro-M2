

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed May 22 09:11:07 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    41   000000                     
    42                           ; Version 2.20
    43                           ; Generated 12/02/2020 GMT
    44                           ; 
    45                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F4520 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76   000000                     
    77                           	psect	idataCOMRAM
    78   005FBA                     __pidataCOMRAM:
    79                           	callstack 0
    80                           
    81                           ;initializer for display_sequence@F2951
    82   005FBA  FF                 	db	255
    83   005FBB  FF                 	db	255
    84   005FBC  FF                 	db	255
    85   005FBD  FF                 	db	255
    86                           
    87                           	psect	mediumconst
    88   006E3C                     __pmediumconst:
    89                           	callstack 0
    90   006E3C  00                 	db	0
    91   006E3D                     _segment_map:
    92                           	callstack 0
    93   006E3D  3F                 	db	63
    94   006E3E  06                 	db	6
    95   006E3F  5B                 	db	91
    96   006E40  4F                 	db	79
    97   006E41  66                 	db	102
    98   006E42  6D                 	db	109
    99   006E43  7D                 	db	125
   100   006E44  07                 	db	7
   101   006E45  7F                 	db	127
   102   006E46  6F                 	db	111
   103   006E47  79                 	db	121
   104   006E48  50                 	db	80
   105   006E49  5C                 	db	92
   106   006E4A                     __end_of_segment_map:
   107                           	callstack 0
   108   000000                     _SSPSTAT	set	4039
   109   000000                     _SSPADD	set	4040
   110   000000                     _SSPCON2bits	set	4037
   111   000000                     _SSPSTATbits	set	4039
   112   000000                     _TRISC	set	3988
   113   000000                     _TRISBbits	set	3987
   114   000000                     _PORTBbits	set	3969
   115   000000                     _LATB	set	3978
   116   000000                     _LATD	set	3980
   117   000000                     _TRISB	set	3987
   118   000000                     _TRISCbits	set	3988
   119   000000                     _TRISD	set	3989
   120   000000                     _RCSTAbits	set	4011
   121   000000                     _TXSTAbits	set	4012
   122   000000                     _SPBRG	set	4015
   123   000000                     _BAUDCONbits	set	4024
   124   000000                     _SPBRGH	set	4016
   125   000000                     _ADCON1	set	4033
   126   000000                     _TXREG	set	4013
   127   000000                     _SSPCON2	set	4037
   128   000000                     _SSPCON1	set	4038
   129   000000                     _SSPBUF	set	4041
   130   006E4A                     STR_4:
   131   006E4A  45                 	db	69	;'E'
   132   006E4B  72                 	db	114	;'r'
   133   006E4C  72                 	db	114	;'r'
   134   006E4D  6F                 	db	111	;'o'
   135   006E4E  3A                 	db	58	;':'
   136   006E4F  20                 	db	32
   137   006E50  54                 	db	84	;'T'
   138   006E51  65                 	db	101	;'e'
   139   006E52  6E                 	db	110	;'n'
   140   006E53  74                 	db	116	;'t'
   141   006E54  61                 	db	97	;'a'
   142   006E55  74                 	db	116	;'t'
   143   006E56  69                 	db	105	;'i'
   144   006E57  76                 	db	118	;'v'
   145   006E58  61                 	db	97	;'a'
   146   006E59  20                 	db	32
   147   006E5A  64                 	db	100	;'d'
   148   006E5B  65                 	db	101	;'e'
   149   006E5C  20                 	db	32
   150   006E5D  65                 	db	101	;'e'
   151   006E5E  73                 	db	115	;'s'
   152   006E5F  63                 	db	99	;'c'
   153   006E60  72                 	db	114	;'r'
   154   006E61  65                 	db	101	;'e'
   155   006E62  76                 	db	118	;'v'
   156   006E63  65                 	db	101	;'e'
   157   006E64  72                 	db	114	;'r'
   158   006E65  20                 	db	32
   159   006E66  61                 	db	97	;'a'
   160   006E67  6C                 	db	108	;'l'
   161   006E68  65                 	db	101	;'e'
   162   006E69  6D                 	db	109	;'m'
   163   006E6A  20                 	db	32
   164   006E6B  64                 	db	100	;'d'
   165   006E6C  61                 	db	97	;'a'
   166   006E6D  20                 	db	32
   167   006E6E  63                 	db	99	;'c'
   168   006E6F  61                 	db	97	;'a'
   169   006E70  70                 	db	112	;'p'
   170   006E71  61                 	db	97	;'a'
   171   006E72  63                 	db	99	;'c'
   172   006E73  69                 	db	105	;'i'
   173   006E74  64                 	db	100	;'d'
   174   006E75  61                 	db	97	;'a'
   175   006E76  64                 	db	100	;'d'
   176   006E77  65                 	db	101	;'e'
   177   006E78  20                 	db	32
   178   006E79  64                 	db	100	;'d'
   179   006E7A  61                 	db	97	;'a'
   180   006E7B  20                 	db	32
   181   006E7C  6D                 	db	109	;'m'
   182   006E7D  65                 	db	101	;'e'
   183   006E7E  6D                 	db	109	;'m'
   184   006E7F  6F                 	db	111	;'o'
   185   006E80  72                 	db	114	;'r'
   186   006E81  69                 	db	105	;'i'
   187   006E82  61                 	db	97	;'a'
   188   006E83  0D                 	db	13
   189   006E84  0A                 	db	10
   190   006E85  00                 	db	0
   191   006E86                     STR_3:
   192   006E86  45                 	db	69	;'E'
   193   006E87  72                 	db	114	;'r'
   194   006E88  72                 	db	114	;'r'
   195   006E89  6F                 	db	111	;'o'
   196   006E8A  3A                 	db	58	;':'
   197   006E8B  20                 	db	32
   198   006E8C  54                 	db	84	;'T'
   199   006E8D  65                 	db	101	;'e'
   200   006E8E  6E                 	db	110	;'n'
   201   006E8F  74                 	db	116	;'t'
   202   006E90  61                 	db	97	;'a'
   203   006E91  74                 	db	116	;'t'
   204   006E92  69                 	db	105	;'i'
   205   006E93  76                 	db	118	;'v'
   206   006E94  61                 	db	97	;'a'
   207   006E95  20                 	db	32
   208   006E96  64                 	db	100	;'d'
   209   006E97  65                 	db	101	;'e'
   210   006E98  20                 	db	32
   211   006E99  6C                 	db	108	;'l'
   212   006E9A  65                 	db	101	;'e'
   213   006E9B  72                 	db	114	;'r'
   214   006E9C  20                 	db	32
   215   006E9D  61                 	db	97	;'a'
   216   006E9E  6C                 	db	108	;'l'
   217   006E9F  65                 	db	101	;'e'
   218   006EA0  6D                 	db	109	;'m'
   219   006EA1  20                 	db	32
   220   006EA2  64                 	db	100	;'d'
   221   006EA3  61                 	db	97	;'a'
   222   006EA4  20                 	db	32
   223   006EA5  63                 	db	99	;'c'
   224   006EA6  61                 	db	97	;'a'
   225   006EA7  70                 	db	112	;'p'
   226   006EA8  61                 	db	97	;'a'
   227   006EA9  63                 	db	99	;'c'
   228   006EAA  69                 	db	105	;'i'
   229   006EAB  64                 	db	100	;'d'
   230   006EAC  61                 	db	97	;'a'
   231   006EAD  64                 	db	100	;'d'
   232   006EAE  65                 	db	101	;'e'
   233   006EAF  20                 	db	32
   234   006EB0  64                 	db	100	;'d'
   235   006EB1  61                 	db	97	;'a'
   236   006EB2  20                 	db	32
   237   006EB3  6D                 	db	109	;'m'
   238   006EB4  65                 	db	101	;'e'
   239   006EB5  6D                 	db	109	;'m'
   240   006EB6  6F                 	db	111	;'o'
   241   006EB7  72                 	db	114	;'r'
   242   006EB8  69                 	db	105	;'i'
   243   006EB9  61                 	db	97	;'a'
   244   006EBA  0D                 	db	13
   245   006EBB  0A                 	db	10
   246   006EBC  00                 	db	0
   247   006EBD                     STR_6:
   248   006EBD  45                 	db	69	;'E'
   249   006EBE  72                 	db	114	;'r'
   250   006EBF  72                 	db	114	;'r'
   251   006EC0  6F                 	db	111	;'o'
   252   006EC1  3A                 	db	58	;':'
   253   006EC2  20                 	db	32
   254   006EC3  50                 	db	80	;'P'
   255   006EC4  6F                 	db	111	;'o'
   256   006EC5  6E                 	db	110	;'n'
   257   006EC6  74                 	db	116	;'t'
   258   006EC7  65                 	db	101	;'e'
   259   006EC8  69                 	db	105	;'i'
   260   006EC9  72                 	db	114	;'r'
   261   006ECA  6F                 	db	111	;'o'
   262   006ECB  20                 	db	32
   263   006ECC  66                 	db	102	;'f'
   264   006ECD  6F                 	db	111	;'o'
   265   006ECE  72                 	db	114	;'r'
   266   006ECF  61                 	db	97	;'a'
   267   006ED0  20                 	db	32
   268   006ED1  64                 	db	100	;'d'
   269   006ED2  6F                 	db	111	;'o'
   270   006ED3  73                 	db	115	;'s'
   271   006ED4  20                 	db	32
   272   006ED5  6C                 	db	108	;'l'
   273   006ED6  69                 	db	105	;'i'
   274   006ED7  6D                 	db	109	;'m'
   275   006ED8  69                 	db	105	;'i'
   276   006ED9  74                 	db	116	;'t'
   277   006EDA  65                 	db	101	;'e'
   278   006EDB  73                 	db	115	;'s'
   279   006EDC  20                 	db	32
   280   006EDD  64                 	db	100	;'d'
   281   006EDE  61                 	db	97	;'a'
   282   006EDF  20                 	db	32
   283   006EE0  6D                 	db	109	;'m'
   284   006EE1  65                 	db	101	;'e'
   285   006EE2  6D                 	db	109	;'m'
   286   006EE3  6F                 	db	111	;'o'
   287   006EE4  72                 	db	114	;'r'
   288   006EE5  69                 	db	105	;'i'
   289   006EE6  61                 	db	97	;'a'
   290   006EE7  0D                 	db	13
   291   006EE8  0A                 	db	10
   292   006EE9  00                 	db	0
   293   006EEA                     STR_2:
   294   006EEA  45                 	db	69	;'E'
   295   006EEB  6E                 	db	110	;'n'
   296   006EEC  64                 	db	100	;'d'
   297   006EED  65                 	db	101	;'e'
   298   006EEE  72                 	db	114	;'r'
   299   006EEF  65                 	db	101	;'e'
   300   006EF0  63                 	db	99	;'c'
   301   006EF1  6F                 	db	111	;'o'
   302   006EF2  20                 	db	32
   303   006EF3  61                 	db	97	;'a'
   304   006EF4  74                 	db	116	;'t'
   305   006EF5  75                 	db	117	;'u'
   306   006EF6  61                 	db	97	;'a'
   307   006EF7  6C                 	db	108	;'l'
   308   006EF8  3A                 	db	58	;':'
   309   006EF9  20                 	db	32
   310   006EFA  30                 	db	48	;'0'
   311   006EFB  78                 	db	120	;'x'
   312   006EFC  25                 	db	37
   313   006EFD  78                 	db	120	;'x'
   314   006EFE  2C                 	db	44
   315   006EFF  20                 	db	32
   316   006F00  4C                 	db	76	;'L'
   317   006F01  65                 	db	101	;'e'
   318   006F02  69                 	db	105	;'i'
   319   006F03  74                 	db	116	;'t'
   320   006F04  75                 	db	117	;'u'
   321   006F05  72                 	db	114	;'r'
   322   006F06  61                 	db	97	;'a'
   323   006F07  20                 	db	32
   324   006F08  5B                 	db	91	;'['
   325   006F09  25                 	db	37
   326   006F0A  75                 	db	117	;'u'
   327   006F0B  5D                 	db	93	;']'
   328   006F0C  20                 	db	32
   329   006F0D  3D                 	db	61	;'='
   330   006F0E  20                 	db	32
   331   006F0F  25                 	db	37
   332   006F10  75                 	db	117	;'u'
   333   006F11  20                 	db	32
   334   006F12  0D                 	db	13
   335   006F13  0A                 	db	10
   336   006F14  00                 	db	0
   337   006F15                     STR_1:
   338   006F15  45                 	db	69	;'E'
   339   006F16  6E                 	db	110	;'n'
   340   006F17  64                 	db	100	;'d'
   341   006F18  65                 	db	101	;'e'
   342   006F19  72                 	db	114	;'r'
   343   006F1A  65                 	db	101	;'e'
   344   006F1B  63                 	db	99	;'c'
   345   006F1C  6F                 	db	111	;'o'
   346   006F1D  20                 	db	32
   347   006F1E  61                 	db	97	;'a'
   348   006F1F  74                 	db	116	;'t'
   349   006F20  75                 	db	117	;'u'
   350   006F21  61                 	db	97	;'a'
   351   006F22  6C                 	db	108	;'l'
   352   006F23  3A                 	db	58	;':'
   353   006F24  20                 	db	32
   354   006F25  30                 	db	48	;'0'
   355   006F26  78                 	db	120	;'x'
   356   006F27  25                 	db	37
   357   006F28  78                 	db	120	;'x'
   358   006F29  2C                 	db	44
   359   006F2A  20                 	db	32
   360   006F2B  45                 	db	69	;'E'
   361   006F2C  73                 	db	115	;'s'
   362   006F2D  63                 	db	99	;'c'
   363   006F2E  72                 	db	114	;'r'
   364   006F2F  69                 	db	105	;'i'
   365   006F30  74                 	db	116	;'t'
   366   006F31  61                 	db	97	;'a'
   367   006F32  20                 	db	32
   368   006F33  5B                 	db	91	;'['
   369   006F34  25                 	db	37
   370   006F35  75                 	db	117	;'u'
   371   006F36  5D                 	db	93	;']'
   372   006F37  20                 	db	32
   373   006F38  3D                 	db	61	;'='
   374   006F39  20                 	db	32
   375   006F3A  25                 	db	37
   376   006F3B  75                 	db	117	;'u'
   377   006F3C  20                 	db	32
   378   006F3D  0D                 	db	13
   379   006F3E  0A                 	db	10
   380   006F3F  00                 	db	0
   381   006F40                     STR_11:
   382   006F40  53                 	db	83	;'S'
   383   006F41  75                 	db	117	;'u'
   384   006F42  63                 	db	99	;'c'
   385   006F43  65                 	db	101	;'e'
   386   006F44  73                 	db	115	;'s'
   387   006F45  73                 	db	115	;'s'
   388   006F46  6F                 	db	111	;'o'
   389   006F47  20                 	db	32
   390   006F48  6E                 	db	110	;'n'
   391   006F49  6F                 	db	111	;'o'
   392   006F4A  20                 	db	32
   393   006F4B  72                 	db	114	;'r'
   394   006F4C  65                 	db	101	;'e'
   395   006F4D  70                 	db	112	;'p'
   396   006F4E  6F                 	db	111	;'o'
   397   006F4F  73                 	db	115	;'s'
   398   006F50  69                 	db	105	;'i'
   399   006F51  63                 	db	99	;'c'
   400   006F52  69                 	db	105	;'i'
   401   006F53  6F                 	db	111	;'o'
   402   006F54  6E                 	db	110	;'n'
   403   006F55  61                 	db	97	;'a'
   404   006F56  6D                 	db	109	;'m'
   405   006F57  65                 	db	101	;'e'
   406   006F58  6E                 	db	110	;'n'
   407   006F59  74                 	db	116	;'t'
   408   006F5A  6F                 	db	111	;'o'
   409   006F5B  20                 	db	32
   410   006F5C  64                 	db	100	;'d'
   411   006F5D  6F                 	db	111	;'o'
   412   006F5E  20                 	db	32
   413   006F5F  70                 	db	112	;'p'
   414   006F60  6F                 	db	111	;'o'
   415   006F61  6E                 	db	110	;'n'
   416   006F62  74                 	db	116	;'t'
   417   006F63  65                 	db	101	;'e'
   418   006F64  69                 	db	105	;'i'
   419   006F65  72                 	db	114	;'r'
   420   006F66  6F                 	db	111	;'o'
   421   006F67  0D                 	db	13
   422   006F68  0A                 	db	10
   423   006F69  00                 	db	0
   424   006F6A                     STR_7:
   425   006F6A  53                 	db	83	;'S'
   426   006F6B  65                 	db	101	;'e'
   427   006F6C  65                 	db	101	;'e'
   428   006F6D  6B                 	db	107	;'k'
   429   006F6E  3A                 	db	58	;':'
   430   006F6F  20                 	db	32
   431   006F70  50                 	db	80	;'P'
   432   006F71  6F                 	db	111	;'o'
   433   006F72  73                 	db	115	;'s'
   434   006F73  69                 	db	105	;'i'
   435   006F74  63                 	db	99	;'c'
   436   006F75  61                 	db	97	;'a'
   437   006F76  6F                 	db	111	;'o'
   438   006F77  20                 	db	32
   439   006F78  61                 	db	97	;'a'
   440   006F79  6C                 	db	108	;'l'
   441   006F7A  74                 	db	116	;'t'
   442   006F7B  65                 	db	101	;'e'
   443   006F7C  72                 	db	114	;'r'
   444   006F7D  61                 	db	97	;'a'
   445   006F7E  64                 	db	100	;'d'
   446   006F7F  61                 	db	97	;'a'
   447   006F80  20                 	db	32
   448   006F81  70                 	db	112	;'p'
   449   006F82  61                 	db	97	;'a'
   450   006F83  72                 	db	114	;'r'
   451   006F84  61                 	db	97	;'a'
   452   006F85  20                 	db	32
   453   006F86  30                 	db	48	;'0'
   454   006F87  78                 	db	120	;'x'
   455   006F88  25                 	db	37
   456   006F89  78                 	db	120	;'x'
   457   006F8A  0D                 	db	13
   458   006F8B  0A                 	db	10
   459   006F8C  00                 	db	0
   460   006F8D                     STR_9:
   461   006F8D  45                 	db	69	;'E'
   462   006F8E  72                 	db	114	;'r'
   463   006F8F  72                 	db	114	;'r'
   464   006F90  6F                 	db	111	;'o'
   465   006F91  3A                 	db	58	;':'
   466   006F92  20                 	db	32
   467   006F93  6D                 	db	109	;'m'
   468   006F94  65                 	db	101	;'e'
   469   006F95  6E                 	db	110	;'n'
   470   006F96  73                 	db	115	;'s'
   471   006F97  61                 	db	97	;'a'
   472   006F98  67                 	db	103	;'g'
   473   006F99  65                 	db	101	;'e'
   474   006F9A  6D                 	db	109	;'m'
   475   006F9B  20                 	db	32
   476   006F9C  6D                 	db	109	;'m'
   477   006F9D  75                 	db	117	;'u'
   478   006F9E  69                 	db	105	;'i'
   479   006F9F  74                 	db	116	;'t'
   480   006FA0  6F                 	db	111	;'o'
   481   006FA1  20                 	db	32
   482   006FA2  6C                 	db	108	;'l'
   483   006FA3  6F                 	db	111	;'o'
   484   006FA4  6E                 	db	110	;'n'
   485   006FA5  67                 	db	103	;'g'
   486   006FA6  61                 	db	97	;'a'
   487   006FA7  2E                 	db	46
   488   006FA8  0A                 	db	10
   489   006FA9  00                 	db	0
   490   006FAA                     STR_12:
   491   006FAA  53                 	db	83	;'S'
   492   006FAB  75                 	db	117	;'u'
   493   006FAC  63                 	db	99	;'c'
   494   006FAD  65                 	db	101	;'e'
   495   006FAE  73                 	db	115	;'s'
   496   006FAF  73                 	db	115	;'s'
   497   006FB0  6F                 	db	111	;'o'
   498   006FB1  20                 	db	32
   499   006FB2  6E                 	db	110	;'n'
   500   006FB3  61                 	db	97	;'a'
   501   006FB4  20                 	db	32
   502   006FB5  6C                 	db	108	;'l'
   503   006FB6  65                 	db	101	;'e'
   504   006FB7  69                 	db	105	;'i'
   505   006FB8  74                 	db	116	;'t'
   506   006FB9  75                 	db	117	;'u'
   507   006FBA  72                 	db	114	;'r'
   508   006FBB  61                 	db	97	;'a'
   509   006FBC  3A                 	db	58	;':'
   510   006FBD  20                 	db	32
   511   006FBE  25                 	db	37
   512   006FBF  73                 	db	115	;'s'
   513   006FC0  0D                 	db	13
   514   006FC1  0A                 	db	10
   515   006FC2  00                 	db	0
   516   006FC3                     STR_10:
   517   006FC3  53                 	db	83	;'S'
   518   006FC4  75                 	db	117	;'u'
   519   006FC5  63                 	db	99	;'c'
   520   006FC6  65                 	db	101	;'e'
   521   006FC7  73                 	db	115	;'s'
   522   006FC8  73                 	db	115	;'s'
   523   006FC9  6F                 	db	111	;'o'
   524   006FCA  20                 	db	32
   525   006FCB  6E                 	db	110	;'n'
   526   006FCC  61                 	db	97	;'a'
   527   006FCD  20                 	db	32
   528   006FCE  65                 	db	101	;'e'
   529   006FCF  73                 	db	115	;'s'
   530   006FD0  63                 	db	99	;'c'
   531   006FD1  72                 	db	114	;'r'
   532   006FD2  69                 	db	105	;'i'
   533   006FD3  74                 	db	116	;'t'
   534   006FD4  61                 	db	97	;'a'
   535   006FD5  3A                 	db	58	;':'
   536   006FD6  20                 	db	32
   537   006FD7  25                 	db	37
   538   006FD8  73                 	db	115	;'s'
   539   006FD9  0D                 	db	13
   540   006FDA  0A                 	db	10
   541   006FDB  00                 	db	0
   542   006FDC                     STR_5:
   543   006FDC  45                 	db	69	;'E'
   544   006FDD  72                 	db	114	;'r'
   545   006FDE  72                 	db	114	;'r'
   546   006FDF  6F                 	db	111	;'o'
   547   006FE0  3A                 	db	58	;':'
   548   006FE1  20                 	db	32
   549   006FE2  4F                 	db	79	;'O'
   550   006FE3  72                 	db	114	;'r'
   551   006FE4  69                 	db	105	;'i'
   552   006FE5  67                 	db	103	;'g'
   553   006FE6  65                 	db	101	;'e'
   554   006FE7  6D                 	db	109	;'m'
   555   006FE8  20                 	db	32
   556   006FE9  69                 	db	105	;'i'
   557   006FEA  6E                 	db	110	;'n'
   558   006FEB  76                 	db	118	;'v'
   559   006FEC  61                 	db	97	;'a'
   560   006FED  6C                 	db	108	;'l'
   561   006FEE  69                 	db	105	;'i'
   562   006FEF  64                 	db	100	;'d'
   563   006FF0  61                 	db	97	;'a'
   564   006FF1  0D                 	db	13
   565   006FF2  0A                 	db	10
   566   006FF3  00                 	db	0
   567   006FF4                     STR_13:
   568   006FF4  45                 	db	69	;'E'
   569   006FF5  52                 	db	82	;'R'
   570   006FF6  52                 	db	82	;'R'
   571   006FF7  4F                 	db	79	;'O'
   572   006FF8  52                 	db	82	;'R'
   573   006FF9  00                 	db	0
   574   006FFA                     STR_8:
   575   006FFA  31                 	db	49	;'1'
   576   006FFB  32                 	db	50	;'2'
   577   006FFC  33                 	db	51	;'3'
   578   006FFD  34                 	db	52	;'4'
   579   006FFE  00                 	db	0
   580   006FFF  00                 	db	0	; dummy byte at the end
   581   000000                     
   582                           ; #config settings
   583                           
   584                           	psect	cinit
   585   0060B8                     __pcinit:
   586                           	callstack 0
   587   0060B8                     start_initialization:
   588                           	callstack 0
   589   0060B8                     __initialization:
   590                           	callstack 0
   591                           
   592                           ; Initialize objects allocated to COMRAM (4 bytes)
   593                           ; load TBLPTR registers with __pidataCOMRAM
   594   0060B8  0EBA               	movlw	low __pidataCOMRAM
   595   0060BA  6EF6               	movwf	tblptrl,c
   596   0060BC  0E5F               	movlw	high __pidataCOMRAM
   597   0060BE  6EF7               	movwf	tblptrh,c
   598   0060C0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   599   0060C2  6EF8               	movwf	tblptru,c
   600   0060C4  EE00  F065         	lfsr	0,__pdataCOMRAM
   601   0060C8  EE10 F004          	lfsr	1,4
   602   0060CC                     copy_data0:
   603   0060CC  0009               	tblrd		*+
   604   0060CE  CFF5 FFEE          	movff	tablat,postinc0
   605   0060D2  50E5               	movf	postdec1,w,c
   606   0060D4  50E1               	movf	fsr1l,w,c
   607   0060D6  E1FA               	bnz	copy_data0
   608                           
   609                           ; Clear objects allocated to COMRAM (39 bytes)
   610   0060D8  EE00  F03E         	lfsr	0,__pbssCOMRAM
   611   0060DC  0E27               	movlw	39
   612   0060DE                     clear_0:
   613   0060DE  6AEE               	clrf	postinc0,c
   614   0060E0  06E8               	decf	wreg,f,c
   615   0060E2  E1FD               	bnz	clear_0
   616   0060E4                     end_of_initialization:
   617                           	callstack 0
   618   0060E4                     __end_of__initialization:
   619                           	callstack 0
   620   0060E4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   621   0060E6  6EF8               	movwf	tblptru,c
   622   0060E8  0100               	movlb	0
   623   0060EA  EF35  F034         	goto	_main	;jump to C main() function
   624                           
   625                           	psect	bssCOMRAM
   626   00003E                     __pbssCOMRAM:
   627                           	callstack 0
   628   00003E                     _dbuf:
   629                           	callstack 0
   630   00003E                     	ds	32
   631   00005E                     _width:
   632                           	callstack 0
   633   00005E                     	ds	2
   634   000060                     _prec:
   635                           	callstack 0
   636   000060                     	ds	2
   637   000062                     _current_pointer:
   638                           	callstack 0
   639   000062                     	ds	2
   640   000064                     _flags:
   641                           	callstack 0
   642   000064                     	ds	1
   643                           
   644                           	psect	dataCOMRAM
   645   000065                     __pdataCOMRAM:
   646                           	callstack 0
   647   000065                     display_sequence@F2951:
   648                           	callstack 0
   649   000065                     	ds	4
   650                           
   651                           	psect	cstackBANK0
   652   000080                     __pcstackBANK0:
   653                           	callstack 0
   654   000080                     main@read_buffer:
   655                           	callstack 0
   656                           
   657                           ; 100 bytes @ 0x0
   658   000080                     	ds	100
   659   0000E4                     main@error_message:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x64
   663   0000E4                     	ds	2
   664   0000E6                     main@erro_mem:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x66
   668   0000E6                     	ds	2
   669   0000E8                     main@message:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x68
   673   0000E8                     	ds	2
   674   0000EA                     main@message_length:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x6A
   678   0000EA                     	ds	2
   679                           
   680                           	psect	cstackCOMRAM
   681   000001                     __pcstackCOMRAM:
   682                           	callstack 0
   683   000001                     ?_count_characters:
   684                           	callstack 0
   685   000001                     ?___lwdiv:
   686                           	callstack 0
   687   000001                     ?___lwmod:
   688                           	callstack 0
   689   000001                     putch@byte:
   690                           	callstack 0
   691   000001                     I2C_TRANSMITE@DADO_I2C:
   692                           	callstack 0
   693   000001                     I2C_RECEBE@x:
   694                           	callstack 0
   695   000001                     count_characters@message:
   696                           	callstack 0
   697   000001                     display_sequence@sequence:
   698                           	callstack 0
   699   000001                     ___lwdiv@dividend:
   700                           	callstack 0
   701   000001                     ___lwmod@dividend:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x0
   705   000001                     	ds	1
   706   000002                     fputc@c:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x1
   710   000002                     	ds	1
   711   000003                     ??_count_characters:
   712   000003                     display_sequence@length:
   713                           	callstack 0
   714   000003                     ___lwdiv@divisor:
   715                           	callstack 0
   716   000003                     ___lwmod@divisor:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x2
   720   000003                     	ds	1
   721   000004                     ??_display_sequence:
   722   000004                     fputc@fp:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x3
   726   000004                     	ds	1
   727   000005                     ___lwmod@counter:
   728                           	callstack 0
   729   000005                     count_characters@count:
   730                           	callstack 0
   731   000005                     ___lwdiv@quotient:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x4
   735   000005                     	ds	1
   736   000006                     ??_fputc:
   737                           
   738                           ; 1 bytes @ 0x5
   739   000006                     	ds	1
   740   000007                     ___lwdiv@counter:
   741                           	callstack 0
   742   000007                     count_characters@i:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x6
   746   000007                     	ds	2
   747   000009                     display_sequence@digits:
   748                           	callstack 0
   749                           
   750                           ; 4 bytes @ 0x8
   751   000009                     	ds	2
   752   00000B                     vfpfcnvrt@fp:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0xA
   756   00000B                     	ds	2
   757   00000D                     display_sequence@refresh:
   758                           	callstack 0
   759   00000D                     vfpfcnvrt@fmt:
   760                           	callstack 0
   761                           
   762                           ; 1 bytes @ 0xC
   763   00000D                     	ds	1
   764   00000E                     display_sequence@i:
   765                           	callstack 0
   766   00000E                     vfpfcnvrt@ap:
   767                           	callstack 0
   768                           
   769                           ; 1 bytes @ 0xD
   770   00000E                     	ds	1
   771   00000F                     ??_vfpfcnvrt:
   772   00000F                     display_sequence@j_470:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0xE
   776   00000F                     	ds	1
   777   000010                     display_sequence@ch:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0xF
   781   000010                     	ds	1
   782   000011                     display_sequence@j:
   783                           	callstack 0
   784   000011                     vfpfcnvrt@done:
   785                           	callstack 0
   786                           
   787                           ; 1 bytes @ 0x10
   788   000011                     	ds	1
   789   000012                     vfpfcnvrt@cp_1220:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x11
   793   000012                     	ds	2
   794   000014                     vfpfcnvrt@x:
   795                           	callstack 0
   796                           
   797                           ; 1 bytes @ 0x13
   798   000014                     	ds	1
   799   000015                     vfpfcnvrt@cp:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x14
   803   000015                     	ds	2
   804   000017                     vfpfcnvrt@convarg:
   805                           	callstack 0
   806                           
   807                           ; 4 bytes @ 0x16
   808   000017                     	ds	4
   809   00001B                     vfpfcnvrt@c:
   810                           	callstack 0
   811                           
   812                           ; 1 bytes @ 0x1A
   813   00001B                     	ds	1
   814   00001C                     ?_vfprintf:
   815                           	callstack 0
   816   00001C                     vfprintf@fp:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x1B
   820   00001C                     	ds	2
   821   00001E                     vfprintf@fmt:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x1D
   825   00001E                     	ds	2
   826   000020                     vfprintf@ap:
   827                           	callstack 0
   828                           
   829                           ; 1 bytes @ 0x1F
   830   000020                     	ds	1
   831   000021                     vfprintf@cfmt:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x20
   835   000021                     	ds	2
   836   000023                     ?_printf:
   837                           	callstack 0
   838   000023                     printf@fmt:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x22
   842   000023                     	ds	8
   843   00002B                     printf@ap:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0x2A
   847   00002B                     	ds	1
   848   00002C                     i2c_write@address:
   849                           	callstack 0
   850   00002C                     i2c_read@address:
   851                           	callstack 0
   852   00002C                     serial_memory_seek@offset:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x2B
   856   00002C                     	ds	2
   857   00002E                     i2c_read@data:
   858                           	callstack 0
   859   00002E                     serial_memory_seek@origin:
   860                           	callstack 0
   861   00002E                     i2c_write@data:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x2D
   865   00002E                     	ds	1
   866   00002F                     i2c_read@length:
   867                           	callstack 0
   868   00002F                     serial_memory_seek@new_pointer:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x2E
   872   00002F                     	ds	1
   873   000030                     i2c_write@length:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x2F
   877   000030                     	ds	1
   878   000031                     ??_i2c_read:
   879                           
   880                           ; 1 bytes @ 0x30
   881   000031                     	ds	1
   882   000032                     ??_i2c_write:
   883                           
   884                           ; 1 bytes @ 0x31
   885   000032                     	ds	1
   886   000033                     i2c_read@i:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x32
   890   000033                     	ds	1
   891   000034                     i2c_write@i:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0x33
   895   000034                     	ds	1
   896   000035                     serial_memory_read@buffer:
   897                           	callstack 0
   898                           
   899                           ; 1 bytes @ 0x34
   900   000035                     	ds	1
   901   000036                     serial_memory_read@num_bytes:
   902                           	callstack 0
   903   000036                     serial_memory_write@data:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x35
   907   000036                     	ds	2
   908   000038                     serial_memory_write@num_bytes:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x37
   912   000038                     	ds	2
   913   00003A                     ??_serial_memory_write:
   914                           
   915                           ; 1 bytes @ 0x39
   916   00003A                     	ds	2
   917   00003C                     ??_main:
   918                           
   919                           ; 1 bytes @ 0x3B
   920   00003C                     	ds	2
   921                           
   922 ;;
   923 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   924 ;;
   925 ;; *************** function _main *****************
   926 ;; Defined at:
   927 ;;		line 248 in file "main.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;		None
   930 ;; Auto vars:     Size  Location     Type
   931 ;;  error_messag    2  100[BANK0 ] PTR const unsigned char 
   932 ;;		 -> STR_13(6), 
   933 ;;  read_buffer   100    0[BANK0 ] unsigned char [100]
   934 ;;  message_leng    2  106[BANK0 ] int 
   935 ;;  message         2  104[BANK0 ] PTR const unsigned char 
   936 ;;		 -> STR_8(5), 
   937 ;;  erro_mem        2  102[BANK0 ] int 
   938 ;; Return value:  Size  Location     Type
   939 ;;                  2  140[None  ] int 
   940 ;; Registers used:
   941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   947 ;;      Params:         0       0       0       0       0       0       0
   948 ;;      Locals:         0     108       0       0       0       0       0
   949 ;;      Temps:          2       0       0       0       0       0       0
   950 ;;      Totals:         2     108       0       0       0       0       0
   951 ;;Total ram usage:      110 bytes
   952 ;; Hardware stack levels required when called: 7
   953 ;; This function calls:
   954 ;;		_I2C_INICIA
   955 ;;		_count_characters
   956 ;;		_display_sequence
   957 ;;		_init
   958 ;;		_initUART
   959 ;;		_printf
   960 ;;		_serial_memory_read
   961 ;;		_serial_memory_seek
   962 ;;		_serial_memory_write
   963 ;; This function is called by:
   964 ;;		Startup code after reset
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           	psect	text0
   969   00686A                     __ptext0:
   970                           	callstack 0
   971   00686A                     _main:
   972                           	callstack 24
   973   00686A                     
   974                           ;main.c: 249:         printf("Sucesso na escrita: %s\r\n", message);
   975   00686A  EC2E  F030         	call	_initUART	;wreg free
   976                           
   977                           ;main.c: 250:     } else {
   978   00686E  ECDF  F02F         	call	_I2C_INICIA	;wreg free
   979                           
   980                           ;main.c: 251:         erro_mem = 1;
   981   006872  EC21  F030         	call	_init	;wreg free
   982   006876                     
   983                           ;main.c: 252:     }
   984   006876  0E00               	movlw	0
   985   006878  0100               	movlb	0	; () banked
   986   00687A  6FE7               	movwf	(main@erro_mem+1)& (0+255),b
   987   00687C  0E00               	movlw	0
   988   00687E  6FE6               	movwf	main@erro_mem& (0+255),b
   989   006880                     
   990                           ; BSR set to: 0
   991                           ;main.c: 254: 
   992   006880  0EFA               	movlw	low STR_8
   993   006882  6FE8               	movwf	main@message& (0+255),b
   994   006884  0E6F               	movlw	high STR_8
   995   006886  6FE9               	movwf	(main@message+1)& (0+255),b
   996   006888                     
   997                           ; BSR set to: 0
   998                           ;main.c: 256:         printf("Sucesso no reposicionamento do ponteiro\r\n");
   999   006888  C0E8  F001         	movff	main@message,count_characters@message
  1000   00688C  C0E9  F002         	movff	main@message+1,count_characters@message+1
  1001   006890  ECBA  F030         	call	_count_characters	;wreg free
  1002   006894  C001  F0EA         	movff	?_count_characters,main@message_length
  1003   006898  C002  F0EB         	movff	?_count_characters+1,main@message_length+1
  1004   00689C                     
  1005                           ;main.c: 258:         erro_mem = 1;
  1006   00689C  0E01               	movlw	1
  1007   00689E  0100               	movlb	0	; () banked
  1008   0068A0  25EA               	addwf	main@message_length& (0+255),w,b
  1009   0068A2  6E3C               	movwf	??_main^0,c
  1010   0068A4  0E00               	movlw	0
  1011   0068A6  21EB               	addwfc	(main@message_length+1)& (0+255),w,b
  1012   0068A8  6E3D               	movwf	(??_main+1)^0,c
  1013   0068AA  BE3D               	btfsc	(??_main+1)^0,7,c
  1014   0068AC  EF61  F034         	goto	u1411
  1015   0068B0  503D               	movf	(??_main+1)^0,w,c
  1016   0068B2  E109               	bnz	u1410
  1017   0068B4  0E65               	movlw	101
  1018   0068B6  5C3C               	subwf	??_main^0,w,c
  1019   0068B8  A0D8               	btfss	status,0,c
  1020   0068BA  EF61  F034         	goto	u1411
  1021   0068BE  EF63  F034         	goto	u1410
  1022   0068C2                     u1411:
  1023   0068C2  EF6E  F034         	goto	l1975
  1024   0068C6                     u1410:
  1025   0068C6                     
  1026                           ; BSR set to: 0
  1027                           ;main.c: 260: 
  1028   0068C6  0E8D               	movlw	low STR_9
  1029   0068C8  6E23               	movwf	printf@fmt^0,c
  1030   0068CA  0E6F               	movlw	high STR_9
  1031   0068CC  6E24               	movwf	(printf@fmt+1)^0,c
  1032   0068CE  EC3B  F030         	call	_printf	;wreg free
  1033   0068D2                     
  1034                           ;main.c: 261: 
  1035   0068D2  0E00               	movlw	0
  1036   0068D4  0100               	movlb	0	; () banked
  1037   0068D6  6FE7               	movwf	(main@erro_mem+1)& (0+255),b
  1038   0068D8  0E01               	movlw	1
  1039   0068DA  6FE6               	movwf	main@erro_mem& (0+255),b
  1040   0068DC                     l1975:
  1041                           
  1042                           ; BSR set to: 0
  1043                           ;main.c: 265:     } else {;main.c: 267:     }
  1044   0068DC  C0E8  F036         	movff	main@message,serial_memory_write@data
  1045   0068E0  C0E9  F037         	movff	main@message+1,serial_memory_write@data+1
  1046   0068E4  C0EA  F038         	movff	main@message_length,serial_memory_write@num_bytes
  1047   0068E8  C0EB  F039         	movff	main@message_length+1,serial_memory_write@num_bytes+1
  1048   0068EC  EC0A  F031         	call	_serial_memory_write	;wreg free
  1049   0068F0  0900               	iorlw	0
  1050   0068F2  A4D8               	btfss	status,2,c
  1051   0068F4  EF7E  F034         	goto	u1421
  1052   0068F8  EF80  F034         	goto	u1420
  1053   0068FC                     u1421:
  1054   0068FC  EF8C  F034         	goto	l1979
  1055   006900                     u1420:
  1056   006900                     
  1057                           ;main.c: 268: 
  1058   006900  0EC3               	movlw	low STR_10
  1059   006902  6E23               	movwf	printf@fmt^0,c
  1060   006904  0E6F               	movlw	high STR_10
  1061   006906  6E24               	movwf	(printf@fmt+1)^0,c
  1062   006908  C0E8  F025         	movff	main@message,?_printf+2
  1063   00690C  C0E9  F026         	movff	main@message+1,?_printf+3
  1064   006910  EC3B  F030         	call	_printf	;wreg free
  1065                           
  1066                           ;main.c: 269:    while (1){
  1067   006914  EF91  F034         	goto	l1981
  1068   006918                     l1979:
  1069                           
  1070                           ;main.c: 270:        if (erro_mem){
  1071   006918  0E00               	movlw	0
  1072   00691A  0100               	movlb	0	; () banked
  1073   00691C  6FE7               	movwf	(main@erro_mem+1)& (0+255),b
  1074   00691E  0E01               	movlw	1
  1075   006920  6FE6               	movwf	main@erro_mem& (0+255),b
  1076   006922                     l1981:
  1077                           
  1078                           ;main.c: 274:         if (PORTBbits.RB0 == 0) {
  1079   006922  0E00               	movlw	0
  1080   006924  6E2D               	movwf	(serial_memory_seek@offset+1)^0,c
  1081   006926  0E00               	movlw	0
  1082   006928  6E2C               	movwf	serial_memory_seek@offset^0,c
  1083   00692A  0E00               	movlw	0
  1084   00692C  6E2E               	movwf	serial_memory_seek@origin^0,c
  1085   00692E  EC9F  F031         	call	_serial_memory_seek	;wreg free
  1086   006932  0900               	iorlw	0
  1087   006934  A4D8               	btfss	status,2,c
  1088   006936  EF9F  F034         	goto	u1431
  1089   00693A  EFA1  F034         	goto	u1430
  1090   00693E                     u1431:
  1091   00693E  EFA9  F034         	goto	l1985
  1092   006942                     u1430:
  1093   006942                     
  1094                           ;main.c: 275:             _delay((unsigned long)((50)*(16000000/4000.0)));
  1095   006942  0E40               	movlw	low STR_11
  1096   006944  6E23               	movwf	printf@fmt^0,c
  1097   006946  0E6F               	movlw	high STR_11
  1098   006948  6E24               	movwf	(printf@fmt+1)^0,c
  1099   00694A  EC3B  F030         	call	_printf	;wreg free
  1100                           
  1101                           ;main.c: 276:             if (PORTBbits.RB0 == 0) {
  1102   00694E  EFAE  F034         	goto	l1987
  1103   006952                     l1985:
  1104                           
  1105                           ;main.c: 277: 
  1106   006952  0E00               	movlw	0
  1107   006954  0100               	movlb	0	; () banked
  1108   006956  6FE7               	movwf	(main@erro_mem+1)& (0+255),b
  1109   006958  0E01               	movlw	1
  1110   00695A  6FE6               	movwf	main@erro_mem& (0+255),b
  1111   00695C                     l1987:
  1112                           
  1113                           ;main.c: 281:         }
  1114   00695C  0E80               	movlw	low main@read_buffer
  1115   00695E  6E35               	movwf	serial_memory_read@buffer^0,c
  1116   006960  0E00               	movlw	0
  1117   006962  6E37               	movwf	(serial_memory_read@num_bytes+1)^0,c
  1118   006964  0E64               	movlw	100
  1119   006966  6E36               	movwf	serial_memory_read@num_bytes^0,c
  1120   006968  EC77  F030         	call	_serial_memory_read	;wreg free
  1121   00696C  0900               	iorlw	0
  1122   00696E  A4D8               	btfss	status,2,c
  1123   006970  EFBC  F034         	goto	u1441
  1124   006974  EFBE  F034         	goto	u1440
  1125   006978                     u1441:
  1126   006978  EFCF  F034         	goto	l1993
  1127   00697C                     u1440:
  1128   00697C                     
  1129                           ;main.c: 282:         if (PORTBbits.RB1 == 0) {
  1130   00697C  0100               	movlb	0	; () banked
  1131   00697E  51EA               	movf	main@message_length& (0+255),w,b
  1132   006980  0F80               	addlw	low main@read_buffer
  1133   006982  6ED9               	movwf	fsr2l,c
  1134   006984  6ADA               	clrf	fsr2h,c
  1135   006986  6ADF               	clrf	indf2,c
  1136   006988                     
  1137                           ; BSR set to: 0
  1138                           ;main.c: 283:             _delay((unsigned long)((50)*(16000000/4000.0)));
  1139   006988  0EAA               	movlw	low STR_12
  1140   00698A  6E23               	movwf	printf@fmt^0,c
  1141   00698C  0E6F               	movlw	high STR_12
  1142   00698E  6E24               	movwf	(printf@fmt+1)^0,c
  1143   006990  0E80               	movlw	low main@read_buffer
  1144   006992  6E25               	movwf	(?_printf+2)^0,c
  1145   006994  6A26               	clrf	(?_printf+3)^0,c
  1146   006996  EC3B  F030         	call	_printf	;wreg free
  1147                           
  1148                           ;main.c: 284:             if (PORTBbits.RB1 == 0) {
  1149   00699A  EFD4  F034         	goto	l1995
  1150   00699E                     l1993:
  1151                           
  1152                           ;main.c: 285: 
  1153   00699E  0E00               	movlw	0
  1154   0069A0  0100               	movlb	0	; () banked
  1155   0069A2  6FE7               	movwf	(main@erro_mem+1)& (0+255),b
  1156   0069A4  0E01               	movlw	1
  1157   0069A6  6FE6               	movwf	main@erro_mem& (0+255),b
  1158   0069A8                     l1995:
  1159                           
  1160                           ;main.c: 289:         }
  1161   0069A8  0100               	movlb	0	; () banked
  1162   0069AA  51E6               	movf	main@erro_mem& (0+255),w,b
  1163   0069AC  11E7               	iorwf	(main@erro_mem+1)& (0+255),w,b
  1164   0069AE  B4D8               	btfsc	status,2,c
  1165   0069B0  EFDC  F034         	goto	u1451
  1166   0069B4  EFDE  F034         	goto	u1450
  1167   0069B8                     u1451:
  1168   0069B8  EFEA  F034         	goto	l2001
  1169   0069BC                     u1450:
  1170   0069BC                     
  1171                           ; BSR set to: 0
  1172                           ;main.c: 290:    }
  1173   0069BC  0EF4               	movlw	low STR_13
  1174   0069BE  6FE4               	movwf	main@error_message& (0+255),b
  1175   0069C0  0E6F               	movlw	high STR_13
  1176   0069C2  6FE5               	movwf	(main@error_message+1)& (0+255),b
  1177   0069C4                     
  1178                           ; BSR set to: 0
  1179                           ;main.c: 291:     return 0;
  1180   0069C4  C0E4  F001         	movff	main@error_message,display_sequence@sequence
  1181   0069C8  C0E5  F002         	movff	main@error_message+1,display_sequence@sequence+1
  1182   0069CC  0E05               	movlw	5
  1183   0069CE  6E03               	movwf	display_sequence@length^0,c
  1184   0069D0  EC39  F033         	call	_display_sequence	;wreg free
  1185   0069D4                     l2001:
  1186   0069D4  B081               	btfsc	129,0,c	;volatile
  1187   0069D6  EFEF  F034         	goto	u1461
  1188   0069DA  EFF1  F034         	goto	u1460
  1189   0069DE                     u1461:
  1190   0069DE  EF13  F035         	goto	l150
  1191   0069E2                     u1460:
  1192   0069E2  0E02               	movlw	2
  1193   0069E4  6E3D               	movwf	(??_main+1)^0,c
  1194   0069E6  0E04               	movlw	4
  1195   0069E8  6E3C               	movwf	??_main^0,c
  1196   0069EA  0EBA               	movlw	186
  1197   0069EC                     u1547:
  1198   0069EC  2EE8               	decfsz	wreg,f,c
  1199   0069EE  D7FE               	bra	u1547
  1200   0069F0  2E3C               	decfsz	??_main^0,f,c
  1201   0069F2  D7FC               	bra	u1547
  1202   0069F4  2E3D               	decfsz	(??_main+1)^0,f,c
  1203   0069F6  D7FA               	bra	u1547
  1204   0069F8  D000               	nop2	
  1205   0069FA  B081               	btfsc	129,0,c	;volatile
  1206   0069FC  EF02  F035         	goto	u1471
  1207   006A00  EF04  F035         	goto	u1470
  1208   006A04                     u1471:
  1209   006A04  EF13  F035         	goto	l150
  1210   006A08                     u1470:
  1211   006A08  C0E8  F001         	movff	main@message,display_sequence@sequence
  1212   006A0C  C0E9  F002         	movff	main@message+1,display_sequence@sequence+1
  1213   006A10  C0EA  F003         	movff	main@message_length,display_sequence@length
  1214   006A14  EC39  F033         	call	_display_sequence	;wreg free
  1215   006A18                     l152:
  1216   006A18  A081               	btfss	129,0,c	;volatile
  1217   006A1A  EF11  F035         	goto	u1481
  1218   006A1E  EF13  F035         	goto	u1480
  1219   006A22                     u1481:
  1220   006A22  EF0C  F035         	goto	l152
  1221   006A26                     u1480:
  1222   006A26                     l150:
  1223   006A26  B281               	btfsc	129,1,c	;volatile
  1224   006A28  EF18  F035         	goto	u1491
  1225   006A2C  EF1A  F035         	goto	u1490
  1226   006A30                     u1491:
  1227   006A30  EFD4  F034         	goto	l1995
  1228   006A34                     u1490:
  1229   006A34  0E02               	movlw	2
  1230   006A36  6E3D               	movwf	(??_main+1)^0,c
  1231   006A38  0E04               	movlw	4
  1232   006A3A  6E3C               	movwf	??_main^0,c
  1233   006A3C  0EBA               	movlw	186
  1234   006A3E                     u1557:
  1235   006A3E  2EE8               	decfsz	wreg,f,c
  1236   006A40  D7FE               	bra	u1557
  1237   006A42  2E3C               	decfsz	??_main^0,f,c
  1238   006A44  D7FC               	bra	u1557
  1239   006A46  2E3D               	decfsz	(??_main+1)^0,f,c
  1240   006A48  D7FA               	bra	u1557
  1241   006A4A  D000               	nop2	
  1242   006A4C  B281               	btfsc	129,1,c	;volatile
  1243   006A4E  EF2B  F035         	goto	u1501
  1244   006A52  EF2D  F035         	goto	u1500
  1245   006A56                     u1501:
  1246   006A56  EFD4  F034         	goto	l1995
  1247   006A5A                     u1500:
  1248   006A5A  0E80               	movlw	low main@read_buffer
  1249   006A5C  6E01               	movwf	display_sequence@sequence^0,c
  1250   006A5E  6A02               	clrf	(display_sequence@sequence+1)^0,c
  1251   006A60  C0EA  F003         	movff	main@message_length,display_sequence@length
  1252   006A64  EC39  F033         	call	_display_sequence	;wreg free
  1253   006A68                     l157:
  1254   006A68  A281               	btfss	129,1,c	;volatile
  1255   006A6A  EF39  F035         	goto	u1511
  1256   006A6E  EF3B  F035         	goto	u1510
  1257   006A72                     u1511:
  1258   006A72  EF34  F035         	goto	l157
  1259   006A76                     u1510:
  1260   006A76  EFD4  F034         	goto	l1995
  1261   006A7A  EF00  F000         	goto	start
  1262   006A7E                     __end_of_main:
  1263                           	callstack 0
  1264                           
  1265 ;; *************** function _serial_memory_write *****************
  1266 ;; Defined at:
  1267 ;;		line 132 in file "main.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  data            2   53[COMRAM] PTR const unsigned char 
  1270 ;;		 -> STR_8(5), 
  1271 ;;  num_bytes       2   55[COMRAM] unsigned short 
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;		None
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      unsigned char 
  1276 ;; Registers used:
  1277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1283 ;;      Params:         4       0       0       0       0       0       0
  1284 ;;      Locals:         0       0       0       0       0       0       0
  1285 ;;      Temps:          2       0       0       0       0       0       0
  1286 ;;      Totals:         6       0       0       0       0       0       0
  1287 ;;Total ram usage:        6 bytes
  1288 ;; Hardware stack levels used: 1
  1289 ;; Hardware stack levels required when called: 6
  1290 ;; This function calls:
  1291 ;;		_i2c_write
  1292 ;;		_printf
  1293 ;; This function is called by:
  1294 ;;		_main
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text1
  1299   006214                     __ptext1:
  1300                           	callstack 0
  1301   006214                     _serial_memory_write:
  1302                           	callstack 24
  1303   006214                     
  1304                           ;main.c: 133:     switch (origin) {
  1305   006214  5038               	movf	serial_memory_write@num_bytes^0,w,c
  1306   006216  2462               	addwf	_current_pointer^0,w,c
  1307   006218  6E3A               	movwf	??_serial_memory_write^0,c
  1308   00621A  5039               	movf	(serial_memory_write@num_bytes+1)^0,w,c
  1309   00621C  2063               	addwfc	(_current_pointer+1)^0,w,c
  1310   00621E  6E3B               	movwf	(??_serial_memory_write+1)^0,c
  1311   006220  043A               	decf	??_serial_memory_write^0,w,c
  1312   006222  0E80               	movlw	128
  1313   006224  583B               	subwfb	(??_serial_memory_write+1)^0,w,c
  1314   006226  A0D8               	btfss	status,0,c
  1315   006228  EF18  F031         	goto	u1251
  1316   00622C  EF1A  F031         	goto	u1250
  1317   006230                     u1251:
  1318   006230  EF23  F031         	goto	l1839
  1319   006234                     u1250:
  1320   006234                     
  1321                           ;main.c: 134:         case 0:
  1322   006234  0E4A               	movlw	low STR_4
  1323   006236  6E23               	movwf	printf@fmt^0,c
  1324   006238  0E6E               	movlw	high STR_4
  1325   00623A  6E24               	movwf	(printf@fmt+1)^0,c
  1326   00623C  EC3B  F030         	call	_printf	;wreg free
  1327   006240                     
  1328                           ;main.c: 135:             new_pointer = (uint16_t)offset;
  1329   006240  0EFF               	movlw	255
  1330   006242  EF32  F031         	goto	l85
  1331   006246                     l1839:
  1332                           
  1333                           ;main.c: 138:             new_pointer = (uint16_t)(current_pointer) + (uint16_t)(offset)
      +                          ;
  1334   006246  C062  F02C         	movff	_current_pointer,i2c_write@address
  1335   00624A  C063  F02D         	movff	_current_pointer+1,i2c_write@address+1
  1336   00624E  C036  F02E         	movff	serial_memory_write@data,i2c_write@data
  1337   006252  C037  F02F         	movff	serial_memory_write@data+1,i2c_write@data+1
  1338   006256  C038  F030         	movff	serial_memory_write@num_bytes,i2c_write@length
  1339   00625A  C039  F031         	movff	serial_memory_write@num_bytes+1,i2c_write@length+1
  1340   00625E  ECC8  F032         	call	_i2c_write	;wreg free
  1341   006262                     
  1342                           ;main.c: 140:         case 2:
  1343   006262  0E00               	movlw	0
  1344   006264                     l85:
  1345   006264  0012               	return		;funcret
  1346   006266                     __end_of_serial_memory_write:
  1347                           	callstack 0
  1348                           
  1349 ;; *************** function _i2c_write *****************
  1350 ;; Defined at:
  1351 ;;		line 75 in file "main.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;  address         2   43[COMRAM] unsigned short 
  1354 ;;  data            2   45[COMRAM] PTR const unsigned char 
  1355 ;;		 -> STR_8(5), 
  1356 ;;  length          2   47[COMRAM] unsigned short 
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  i               2   51[COMRAM] unsigned short 
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1368 ;;      Params:         6       0       0       0       0       0       0
  1369 ;;      Locals:         2       0       0       0       0       0       0
  1370 ;;      Temps:          2       0       0       0       0       0       0
  1371 ;;      Totals:        10       0       0       0       0       0       0
  1372 ;;Total ram usage:       10 bytes
  1373 ;; Hardware stack levels used: 1
  1374 ;; Hardware stack levels required when called: 5
  1375 ;; This function calls:
  1376 ;;		_I2C_START
  1377 ;;		_I2C_STOP
  1378 ;;		_I2C_TRANSMITE
  1379 ;;		_printf
  1380 ;; This function is called by:
  1381 ;;		_serial_memory_write
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text2
  1386   006590                     __ptext2:
  1387                           	callstack 0
  1388   006590                     _i2c_write:
  1389                           	callstack 24
  1390   006590                     
  1391                           ;main.c: 76:     for (uint16_t i = 0; i < length; i++) {
  1392   006590  0E00               	movlw	0
  1393   006592  6E35               	movwf	(i2c_write@i+1)^0,c
  1394   006594  0E00               	movlw	0
  1395   006596  6E34               	movwf	i2c_write@i^0,c
  1396   006598  EF2D  F033         	goto	l1767
  1397   00659C                     l1743:
  1398                           
  1399                           ;main.c: 77:         I2C_START();
  1400   00659C  ECF0  F02F         	call	_I2C_START	;wreg free
  1401   0065A0                     
  1402                           ;main.c: 78:         I2C_TRANSMITE(0xA0);
  1403   0065A0  0EA0               	movlw	160
  1404   0065A2  EC4A  F030         	call	_I2C_TRANSMITE
  1405   0065A6                     
  1406                           ;main.c: 79:         I2C_TRANSMITE((address >> 8) & 0xFF);
  1407   0065A6  502D               	movf	(i2c_write@address+1)^0,w,c
  1408   0065A8  EC4A  F030         	call	_I2C_TRANSMITE
  1409   0065AC                     
  1410                           ;main.c: 80:         I2C_TRANSMITE(address & 0xFF);
  1411   0065AC  502C               	movf	i2c_write@address^0,w,c
  1412   0065AE  EC4A  F030         	call	_I2C_TRANSMITE
  1413   0065B2                     
  1414                           ;main.c: 81:         I2C_RESTART();
  1415   0065B2  5034               	movf	i2c_write@i^0,w,c
  1416   0065B4  242E               	addwf	i2c_write@data^0,w,c
  1417   0065B6  6E32               	movwf	??_i2c_write^0,c
  1418   0065B8  5035               	movf	(i2c_write@i+1)^0,w,c
  1419   0065BA  202F               	addwfc	(i2c_write@data+1)^0,w,c
  1420   0065BC  6E33               	movwf	(??_i2c_write+1)^0,c
  1421   0065BE  C032  FFF6         	movff	??_i2c_write,tblptrl
  1422   0065C2  C033  FFF7         	movff	??_i2c_write+1,tblptrh
  1423   0065C6                     	if	0	;tblptru may be non-zero
  1424   0065C6                     	endif
  1425   0065C6                     	if	0	;tblptru may be non-zero
  1426   0065C6                     	endif
  1427   0065C6  0008               	tblrd		*
  1428   0065C8  50F5               	movf	tablat,w,c
  1429   0065CA  0AFF               	xorlw	255
  1430   0065CC  A4D8               	btfss	status,2,c
  1431   0065CE  EFEB  F032         	goto	u1191
  1432   0065D2  EFED  F032         	goto	u1190
  1433   0065D6                     u1191:
  1434   0065D6  EFEF  F032         	goto	l1755
  1435   0065DA                     u1190:
  1436   0065DA  EF38  F033         	goto	l68
  1437   0065DE                     l1755:
  1438                           
  1439                           ;main.c: 84:         if ((uint8_t)(data[i]) == 255 ){
  1440   0065DE  5034               	movf	i2c_write@i^0,w,c
  1441   0065E0  242E               	addwf	i2c_write@data^0,w,c
  1442   0065E2  6E32               	movwf	??_i2c_write^0,c
  1443   0065E4  5035               	movf	(i2c_write@i+1)^0,w,c
  1444   0065E6  202F               	addwfc	(i2c_write@data+1)^0,w,c
  1445   0065E8  6E33               	movwf	(??_i2c_write+1)^0,c
  1446   0065EA  C032  FFF6         	movff	??_i2c_write,tblptrl
  1447   0065EE  C033  FFF7         	movff	??_i2c_write+1,tblptrh
  1448   0065F2                     	if	0	;tblptru may be non-zero
  1449   0065F2                     	endif
  1450   0065F2                     	if	0	;tblptru may be non-zero
  1451   0065F2                     	endif
  1452   0065F2  0008               	tblrd		*
  1453   0065F4  50F5               	movf	tablat,w,c
  1454   0065F6  EC4A  F030         	call	_I2C_TRANSMITE
  1455   0065FA                     
  1456                           ;main.c: 85:             break;
  1457   0065FA  0E15               	movlw	low STR_1
  1458   0065FC  6E23               	movwf	printf@fmt^0,c
  1459   0065FE  0E6F               	movlw	high STR_1
  1460   006600  6E24               	movwf	(printf@fmt+1)^0,c
  1461   006602  0EA0               	movlw	160
  1462   006604  242C               	addwf	i2c_write@address^0,w,c
  1463   006606  6E25               	movwf	(?_printf+2)^0,c
  1464   006608  0E00               	movlw	0
  1465   00660A  202D               	addwfc	(i2c_write@address+1)^0,w,c
  1466   00660C  6E26               	movwf	(?_printf+3)^0,c
  1467   00660E  C034  F027         	movff	i2c_write@i,?_printf+4
  1468   006612  C035  F028         	movff	i2c_write@i+1,?_printf+5
  1469   006616  5034               	movf	i2c_write@i^0,w,c
  1470   006618  242E               	addwf	i2c_write@data^0,w,c
  1471   00661A  6E32               	movwf	??_i2c_write^0,c
  1472   00661C  5035               	movf	(i2c_write@i+1)^0,w,c
  1473   00661E  202F               	addwfc	(i2c_write@data+1)^0,w,c
  1474   006620  6E33               	movwf	(??_i2c_write+1)^0,c
  1475   006622  C032  FFF6         	movff	??_i2c_write,tblptrl
  1476   006626  C033  FFF7         	movff	??_i2c_write+1,tblptrh
  1477   00662A                     	if	0	;tblptru may be non-zero
  1478   00662A                     	endif
  1479   00662A                     	if	0	;tblptru may be non-zero
  1480   00662A                     	endif
  1481   00662A  0008               	tblrd		*
  1482   00662C  50F5               	movf	tablat,w,c
  1483   00662E  6E29               	movwf	(?_printf+6)^0,c
  1484   006630  6A2A               	clrf	(?_printf+7)^0,c
  1485   006632  EC3B  F030         	call	_printf	;wreg free
  1486   006636                     
  1487                           ;main.c: 86:         }
  1488   006636  ECF9  F02F         	call	_I2C_STOP	;wreg free
  1489   00663A                     
  1490                           ;main.c: 87:         printf("Endereco atual: 0x%x, Leitura [%u] = %u \r\n", address + 0x
      +                          A0, i, (uint8_t)(data[i]));
  1491   00663A  0E68               	movlw	104
  1492   00663C  6E32               	movwf	??_i2c_write^0,c
  1493   00663E  0EE4               	movlw	228
  1494   006640                     u1567:
  1495   006640  2EE8               	decfsz	wreg,f,c
  1496   006642  D7FE               	bra	u1567
  1497   006644  2E32               	decfsz	??_i2c_write^0,f,c
  1498   006646  D7FC               	bra	u1567
  1499   006648  D000               	nop2	
  1500   00664A                     
  1501                           ;main.c: 88:         if (i < length - 1) {
  1502   00664A  0E02               	movlw	2
  1503   00664C  242C               	addwf	i2c_write@address^0,w,c
  1504   00664E  6E2C               	movwf	i2c_write@address^0,c
  1505   006650  0E00               	movlw	0
  1506   006652  202D               	addwfc	(i2c_write@address+1)^0,w,c
  1507   006654  6E2D               	movwf	(i2c_write@address+1)^0,c
  1508   006656                     
  1509                           ;main.c: 89:             I2C_ACK();
  1510   006656  4A34               	infsnz	i2c_write@i^0,f,c
  1511   006658  2A35               	incf	(i2c_write@i+1)^0,f,c
  1512   00665A                     l1767:
  1513   00665A  5030               	movf	i2c_write@length^0,w,c
  1514   00665C  5C34               	subwf	i2c_write@i^0,w,c
  1515   00665E  5031               	movf	(i2c_write@length+1)^0,w,c
  1516   006660  5835               	subwfb	(i2c_write@i+1)^0,w,c
  1517   006662  A0D8               	btfss	status,0,c
  1518   006664  EF36  F033         	goto	u1201
  1519   006668  EF38  F033         	goto	u1200
  1520   00666C                     u1201:
  1521   00666C  EFCE  F032         	goto	l1743
  1522   006670                     u1200:
  1523   006670                     l68:
  1524   006670  0012               	return		;funcret
  1525   006672                     __end_of_i2c_write:
  1526                           	callstack 0
  1527                           
  1528 ;; *************** function _serial_memory_seek *****************
  1529 ;; Defined at:
  1530 ;;		line 149 in file "main.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;  offset          2   43[COMRAM] short 
  1533 ;;  origin          1   45[COMRAM] unsigned char 
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;  new_pointer     2   46[COMRAM] unsigned short 
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      unsigned char 
  1538 ;; Registers used:
  1539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1545 ;;      Params:         3       0       0       0       0       0       0
  1546 ;;      Locals:         2       0       0       0       0       0       0
  1547 ;;      Temps:          0       0       0       0       0       0       0
  1548 ;;      Totals:         5       0       0       0       0       0       0
  1549 ;;Total ram usage:        5 bytes
  1550 ;; Hardware stack levels used: 1
  1551 ;; Hardware stack levels required when called: 5
  1552 ;; This function calls:
  1553 ;;		_printf
  1554 ;; This function is called by:
  1555 ;;		_main
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           	psect	text3
  1560   00633E                     __ptext3:
  1561                           	callstack 0
  1562   00633E                     _serial_memory_seek:
  1563                           	callstack 25
  1564   00633E                     
  1565                           ;main.c: 150:         return (uint8_t)-1;;main.c: 152: 
  1566   00633E  EFC0  F031         	goto	l1859
  1567   006342                     l89:
  1568                           
  1569                           ;main.c: 154:     current_pointer = new_pointer;
  1570   006342  C02C  F02F         	movff	serial_memory_seek@offset,serial_memory_seek@new_pointer
  1571   006346  C02D  F030         	movff	serial_memory_seek@offset+1,serial_memory_seek@new_pointer+1
  1572                           
  1573                           ;main.c: 155:     return 0;
  1574   00634A  EFCF  F031         	goto	l1861
  1575   00634E                     l1847:
  1576                           
  1577                           ;main.c: 157: 
  1578   00634E  5062               	movf	_current_pointer^0,w,c
  1579   006350  242C               	addwf	serial_memory_seek@offset^0,w,c
  1580   006352  6E2F               	movwf	serial_memory_seek@new_pointer^0,c
  1581   006354  5063               	movf	(_current_pointer+1)^0,w,c
  1582   006356  202D               	addwfc	(serial_memory_seek@offset+1)^0,w,c
  1583   006358  6E30               	movwf	(serial_memory_seek@new_pointer+1)^0,c
  1584                           
  1585                           ;main.c: 158: int count_characters(const char *message) {
  1586   00635A  EFCF  F031         	goto	l1861
  1587   00635E                     l1849:
  1588                           
  1589                           ;main.c: 160: 
  1590   00635E  0E00               	movlw	0
  1591   006360  242C               	addwf	serial_memory_seek@offset^0,w,c
  1592   006362  6E2F               	movwf	serial_memory_seek@new_pointer^0,c
  1593   006364  0E80               	movlw	128
  1594   006366  202D               	addwfc	(serial_memory_seek@offset+1)^0,w,c
  1595   006368  6E30               	movwf	(serial_memory_seek@new_pointer+1)^0,c
  1596                           
  1597                           ;main.c: 161: 
  1598   00636A  EFCF  F031         	goto	l1861
  1599   00636E                     l1851:
  1600                           
  1601                           ;main.c: 163:         count++;
  1602   00636E  0EDC               	movlw	low STR_5
  1603   006370  6E23               	movwf	printf@fmt^0,c
  1604   006372  0E6F               	movlw	high STR_5
  1605   006374  6E24               	movwf	(printf@fmt+1)^0,c
  1606   006376  EC3B  F030         	call	_printf	;wreg free
  1607   00637A                     l1853:
  1608                           
  1609                           ;main.c: 164:     }
  1610   00637A  0EFF               	movlw	255
  1611   00637C  EFF1  F031         	goto	l94
  1612   006380                     l1859:
  1613   006380  502E               	movf	serial_memory_seek@origin^0,w,c
  1614                           
  1615                           ; Switch size 1, requested type "simple"
  1616                           ; Number of cases is 3, Range of values is 0 to 2
  1617                           ; switch strategies available:
  1618                           ; Name         Instructions Cycles
  1619                           ; simple_byte           10     6 (average)
  1620                           ;	Chosen strategy is simple_byte
  1621   006382  0A00               	xorlw	0	; case 0
  1622   006384  B4D8               	btfsc	status,2,c
  1623   006386  EFA1  F031         	goto	l89
  1624   00638A  0A01               	xorlw	1	; case 1
  1625   00638C  B4D8               	btfsc	status,2,c
  1626   00638E  EFA7  F031         	goto	l1847
  1627   006392  0A03               	xorlw	3	; case 2
  1628   006394  B4D8               	btfsc	status,2,c
  1629   006396  EFAF  F031         	goto	l1849
  1630   00639A  EFB7  F031         	goto	l1851
  1631   00639E                     l1861:
  1632                           
  1633                           ;main.c: 167: }
  1634   00639E  0E80               	movlw	128
  1635   0063A0  5C30               	subwf	(serial_memory_seek@new_pointer+1)^0,w,c
  1636   0063A2  A0D8               	btfss	status,0,c
  1637   0063A4  EFD6  F031         	goto	u1261
  1638   0063A8  EFD8  F031         	goto	u1260
  1639   0063AC                     u1261:
  1640   0063AC  EFE0  F031         	goto	l1869
  1641   0063B0                     u1260:
  1642   0063B0                     
  1643                           ;main.c: 168: void init(void) {
  1644   0063B0  0EBD               	movlw	low STR_6
  1645   0063B2  6E23               	movwf	printf@fmt^0,c
  1646   0063B4  0E6E               	movlw	high STR_6
  1647   0063B6  6E24               	movwf	(printf@fmt+1)^0,c
  1648   0063B8  EC3B  F030         	call	_printf	;wreg free
  1649   0063BC  EFBD  F031         	goto	l1853
  1650   0063C0                     l1869:
  1651                           
  1652                           ;main.c: 172:     TRISB = 0x00;
  1653   0063C0  0E6A               	movlw	low STR_7
  1654   0063C2  6E23               	movwf	printf@fmt^0,c
  1655   0063C4  0E6F               	movlw	high STR_7
  1656   0063C6  6E24               	movwf	(printf@fmt+1)^0,c
  1657   0063C8  0EA0               	movlw	160
  1658   0063CA  242F               	addwf	serial_memory_seek@new_pointer^0,w,c
  1659   0063CC  6E25               	movwf	(?_printf+2)^0,c
  1660   0063CE  0E00               	movlw	0
  1661   0063D0  2030               	addwfc	(serial_memory_seek@new_pointer+1)^0,w,c
  1662   0063D2  6E26               	movwf	(?_printf+3)^0,c
  1663   0063D4  EC3B  F030         	call	_printf	;wreg free
  1664   0063D8                     
  1665                           ;main.c: 173:     LATD = 0x00;
  1666   0063D8  C02F  F062         	movff	serial_memory_seek@new_pointer,_current_pointer
  1667   0063DC  C030  F063         	movff	serial_memory_seek@new_pointer+1,_current_pointer+1
  1668   0063E0                     
  1669                           ;main.c: 174: 
  1670   0063E0  0E00               	movlw	0
  1671   0063E2                     l94:
  1672   0063E2  0012               	return		;funcret
  1673   0063E4                     __end_of_serial_memory_seek:
  1674                           	callstack 0
  1675                           
  1676 ;; *************** function _serial_memory_read *****************
  1677 ;; Defined at:
  1678 ;;		line 118 in file "main.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;  buffer          1   52[COMRAM] PTR unsigned char 
  1681 ;;		 -> main@read_buffer(100), 
  1682 ;;  num_bytes       2   53[COMRAM] unsigned short 
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;		None
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      unsigned char 
  1687 ;; Registers used:
  1688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1694 ;;      Params:         3       0       0       0       0       0       0
  1695 ;;      Locals:         0       0       0       0       0       0       0
  1696 ;;      Temps:          0       0       0       0       0       0       0
  1697 ;;      Totals:         3       0       0       0       0       0       0
  1698 ;;Total ram usage:        3 bytes
  1699 ;; Hardware stack levels used: 1
  1700 ;; Hardware stack levels required when called: 6
  1701 ;; This function calls:
  1702 ;;		_i2c_read
  1703 ;;		_printf
  1704 ;; This function is called by:
  1705 ;;		_main
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           	psect	text4
  1710   0060EE                     __ptext4:
  1711                           	callstack 0
  1712   0060EE                     _serial_memory_read:
  1713                           	callstack 24
  1714   0060EE                     
  1715                           ;main.c: 120: 
  1716   0060EE  5036               	movf	serial_memory_read@num_bytes^0,w,c
  1717   0060F0  1037               	iorwf	(serial_memory_read@num_bytes+1)^0,w,c
  1718   0060F2  A4D8               	btfss	status,2,c
  1719   0060F4  EF7E  F030         	goto	u1241
  1720   0060F8  EF80  F030         	goto	u1240
  1721   0060FC                     u1241:
  1722   0060FC  EF89  F030         	goto	l1825
  1723   006100                     u1240:
  1724   006100                     
  1725                           ;main.c: 121:     return 0;
  1726   006100  0E86               	movlw	low STR_3
  1727   006102  6E23               	movwf	printf@fmt^0,c
  1728   006104  0E6E               	movlw	high STR_3
  1729   006106  6E24               	movwf	(printf@fmt+1)^0,c
  1730   006108  EC3B  F030         	call	_printf	;wreg free
  1731   00610C                     
  1732                           ;main.c: 122: }
  1733   00610C  0EFF               	movlw	255
  1734   00610E  EF96  F030         	goto	l81
  1735   006112                     l1825:
  1736                           
  1737                           ;main.c: 126: 
  1738   006112  C062  F02C         	movff	_current_pointer,i2c_read@address
  1739   006116  C063  F02D         	movff	_current_pointer+1,i2c_read@address+1
  1740   00611A  C035  F02E         	movff	serial_memory_read@buffer,i2c_read@data
  1741   00611E  C036  F02F         	movff	serial_memory_read@num_bytes,i2c_read@length
  1742   006122  C037  F030         	movff	serial_memory_read@num_bytes+1,i2c_read@length+1
  1743   006126  EC57  F032         	call	_i2c_read	;wreg free
  1744   00612A                     
  1745                           ;main.c: 128: 
  1746   00612A  0E00               	movlw	0
  1747   00612C                     l81:
  1748   00612C  0012               	return		;funcret
  1749   00612E                     __end_of_serial_memory_read:
  1750                           	callstack 0
  1751                           
  1752 ;; *************** function _i2c_read *****************
  1753 ;; Defined at:
  1754 ;;		line 94 in file "main.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;  address         2   43[COMRAM] unsigned short 
  1757 ;;  data            1   45[COMRAM] PTR unsigned char 
  1758 ;;		 -> main@read_buffer(100), 
  1759 ;;  length          2   46[COMRAM] unsigned short 
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;  i               2   50[COMRAM] unsigned short 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      void 
  1764 ;; Registers used:
  1765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1771 ;;      Params:         5       0       0       0       0       0       0
  1772 ;;      Locals:         2       0       0       0       0       0       0
  1773 ;;      Temps:          2       0       0       0       0       0       0
  1774 ;;      Totals:         9       0       0       0       0       0       0
  1775 ;;Total ram usage:        9 bytes
  1776 ;; Hardware stack levels used: 1
  1777 ;; Hardware stack levels required when called: 5
  1778 ;; This function calls:
  1779 ;;		_I2C_ACK
  1780 ;;		_I2C_NACK
  1781 ;;		_I2C_RECEBE
  1782 ;;		_I2C_RESTART
  1783 ;;		_I2C_START
  1784 ;;		_I2C_STOP
  1785 ;;		_I2C_TRANSMITE
  1786 ;;		_printf
  1787 ;; This function is called by:
  1788 ;;		_serial_memory_read
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           	psect	text5
  1793   0064AE                     __ptext5:
  1794                           	callstack 0
  1795   0064AE                     _i2c_read:
  1796                           	callstack 24
  1797   0064AE                     
  1798                           ;main.c: 95:     }
  1799   0064AE  0E00               	movlw	0
  1800   0064B0  6E34               	movwf	(i2c_read@i+1)^0,c
  1801   0064B2  0E00               	movlw	0
  1802   0064B4  6E33               	movwf	i2c_read@i^0,c
  1803   0064B6  EFBC  F032         	goto	l1799
  1804   0064BA                     l1771:
  1805                           
  1806                           ;main.c: 96:     return;
  1807   0064BA  ECF0  F02F         	call	_I2C_START	;wreg free
  1808   0064BE                     
  1809                           ;main.c: 97: }
  1810   0064BE  0EA0               	movlw	160
  1811   0064C0  EC4A  F030         	call	_I2C_TRANSMITE
  1812   0064C4                     
  1813                           ;main.c: 98: 
  1814   0064C4  502D               	movf	(i2c_read@address+1)^0,w,c
  1815   0064C6  EC4A  F030         	call	_I2C_TRANSMITE
  1816   0064CA                     
  1817                           ;main.c: 99: uint8_t serial_memory_read(uint8_t *buffer, uint16_t num_bytes) {
  1818   0064CA  502C               	movf	i2c_read@address^0,w,c
  1819   0064CC  EC4A  F030         	call	_I2C_TRANSMITE
  1820   0064D0                     
  1821                           ;main.c: 100: 
  1822   0064D0  ECE7  F02F         	call	_I2C_RESTART	;wreg free
  1823                           
  1824                           ;main.c: 101:     if (num_bytes <= 0) {
  1825   0064D4  0EA1               	movlw	161
  1826   0064D6  EC4A  F030         	call	_I2C_TRANSMITE
  1827   0064DA                     
  1828                           ;main.c: 102:         printf("Erro: Tentativa de ler alem da capacidade da memoria\r\n")
      +                          ;
  1829   0064DA  502E               	movf	i2c_read@data^0,w,c
  1830   0064DC  2433               	addwf	i2c_read@i^0,w,c
  1831   0064DE  6ED9               	movwf	fsr2l,c
  1832   0064E0  6ADA               	clrf	fsr2h,c
  1833   0064E2  ECE1  F030         	call	_I2C_RECEBE	;wreg free
  1834   0064E6  6EDF               	movwf	indf2,c
  1835   0064E8                     
  1836                           ;main.c: 103:         return (uint8_t)-1;
  1837   0064E8  502E               	movf	i2c_read@data^0,w,c
  1838   0064EA  2433               	addwf	i2c_read@i^0,w,c
  1839   0064EC  6ED9               	movwf	fsr2l,c
  1840   0064EE  6ADA               	clrf	fsr2h,c
  1841   0064F0  28DE               	incf	postinc2,w,c
  1842   0064F2  A4D8               	btfss	status,2,c
  1843   0064F4  EF7E  F032         	goto	u1211
  1844   0064F8  EF80  F032         	goto	u1210
  1845   0064FC                     u1211:
  1846   0064FC  EF82  F032         	goto	l1787
  1847   006500                     u1210:
  1848   006500  EFC7  F032         	goto	l77
  1849   006504                     l1787:
  1850                           
  1851                           ;main.c: 106: 
  1852   006504  0EEA               	movlw	low STR_2
  1853   006506  6E23               	movwf	printf@fmt^0,c
  1854   006508  0E6E               	movlw	high STR_2
  1855   00650A  6E24               	movwf	(printf@fmt+1)^0,c
  1856   00650C  0EA0               	movlw	160
  1857   00650E  242C               	addwf	i2c_read@address^0,w,c
  1858   006510  6E25               	movwf	(?_printf+2)^0,c
  1859   006512  0E00               	movlw	0
  1860   006514  202D               	addwfc	(i2c_read@address+1)^0,w,c
  1861   006516  6E26               	movwf	(?_printf+3)^0,c
  1862   006518  C033  F027         	movff	i2c_read@i,?_printf+4
  1863   00651C  C034  F028         	movff	i2c_read@i+1,?_printf+5
  1864   006520  502E               	movf	i2c_read@data^0,w,c
  1865   006522  2433               	addwf	i2c_read@i^0,w,c
  1866   006524  6ED9               	movwf	fsr2l,c
  1867   006526  6ADA               	clrf	fsr2h,c
  1868   006528  50DF               	movf	indf2,w,c
  1869   00652A  6E31               	movwf	??_i2c_read^0,c
  1870   00652C  5031               	movf	??_i2c_read^0,w,c
  1871   00652E  6E29               	movwf	(?_printf+6)^0,c
  1872   006530  6A2A               	clrf	(?_printf+7)^0,c
  1873   006532  EC3B  F030         	call	_printf	;wreg free
  1874   006536                     
  1875                           ;main.c: 107:     i2c_read(current_pointer, buffer, num_bytes);
  1876   006536  0EFF               	movlw	255
  1877   006538  242F               	addwf	i2c_read@length^0,w,c
  1878   00653A  6E31               	movwf	??_i2c_read^0,c
  1879   00653C  0EFF               	movlw	255
  1880   00653E  2030               	addwfc	(i2c_read@length+1)^0,w,c
  1881   006540  6E32               	movwf	(??_i2c_read+1)^0,c
  1882   006542  5031               	movf	??_i2c_read^0,w,c
  1883   006544  5C33               	subwf	i2c_read@i^0,w,c
  1884   006546  5032               	movf	(??_i2c_read+1)^0,w,c
  1885   006548  5834               	subwfb	(i2c_read@i+1)^0,w,c
  1886   00654A  B0D8               	btfsc	status,0,c
  1887   00654C  EFAA  F032         	goto	u1221
  1888   006550  EFAC  F032         	goto	u1220
  1889   006554                     u1221:
  1890   006554  EFB0  F032         	goto	l1793
  1891   006558                     u1220:
  1892   006558                     
  1893                           ;main.c: 108: 
  1894   006558  EC02  F030         	call	_I2C_ACK	;wreg free
  1895                           
  1896                           ;main.c: 109:     return 0;
  1897   00655C  EFB2  F032         	goto	l76
  1898   006560                     l1793:
  1899                           
  1900                           ;main.c: 110: }
  1901   006560  EC0C  F030         	call	_I2C_NACK	;wreg free
  1902   006564                     l76:
  1903                           
  1904                           ;main.c: 112: 
  1905   006564  ECF9  F02F         	call	_I2C_STOP	;wreg free
  1906   006568                     
  1907                           ;main.c: 113: uint8_t serial_memory_write(const uint8_t *data, uint16_t num_bytes) {
  1908   006568  0E02               	movlw	2
  1909   00656A  242C               	addwf	i2c_read@address^0,w,c
  1910   00656C  6E2C               	movwf	i2c_read@address^0,c
  1911   00656E  0E00               	movlw	0
  1912   006570  202D               	addwfc	(i2c_read@address+1)^0,w,c
  1913   006572  6E2D               	movwf	(i2c_read@address+1)^0,c
  1914   006574                     
  1915                           ;main.c: 114:     if (current_pointer + num_bytes > 32768) {
  1916   006574  4A33               	infsnz	i2c_read@i^0,f,c
  1917   006576  2A34               	incf	(i2c_read@i+1)^0,f,c
  1918   006578                     l1799:
  1919   006578  502F               	movf	i2c_read@length^0,w,c
  1920   00657A  5C33               	subwf	i2c_read@i^0,w,c
  1921   00657C  5030               	movf	(i2c_read@length+1)^0,w,c
  1922   00657E  5834               	subwfb	(i2c_read@i+1)^0,w,c
  1923   006580  A0D8               	btfss	status,0,c
  1924   006582  EFC5  F032         	goto	u1231
  1925   006586  EFC7  F032         	goto	u1230
  1926   00658A                     u1231:
  1927   00658A  EF5D  F032         	goto	l1771
  1928   00658E                     u1230:
  1929   00658E                     l77:
  1930   00658E  0012               	return		;funcret
  1931   006590                     __end_of_i2c_read:
  1932                           	callstack 0
  1933                           
  1934 ;; *************** function _printf *****************
  1935 ;; Defined at:
  1936 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  fmt             2   34[COMRAM] PTR const unsigned char 
  1939 ;;		 -> STR_12(25), STR_11(42), STR_10(25), STR_9(29), 
  1940 ;;		 -> STR_7(35), STR_6(45), STR_5(24), STR_4(60), 
  1941 ;;		 -> STR_3(55), STR_2(43), STR_1(43), 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  ret             2    0        int 
  1944 ;;  ap              1   42[COMRAM] PTR void [1]
  1945 ;;		 -> ?_printf(2), 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  2   34[COMRAM] int 
  1948 ;; Registers used:
  1949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1955 ;;      Params:         8       0       0       0       0       0       0
  1956 ;;      Locals:         1       0       0       0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0       0       0
  1958 ;;      Totals:         9       0       0       0       0       0       0
  1959 ;;Total ram usage:        9 bytes
  1960 ;; Hardware stack levels used: 1
  1961 ;; Hardware stack levels required when called: 4
  1962 ;; This function calls:
  1963 ;;		_vfprintf
  1964 ;; This function is called by:
  1965 ;;		_i2c_write
  1966 ;;		_i2c_read
  1967 ;;		_serial_memory_read
  1968 ;;		_serial_memory_write
  1969 ;;		_serial_memory_seek
  1970 ;;		_main
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text6
  1975   006076                     __ptext6:
  1976                           	callstack 0
  1977   006076                     _printf:
  1978                           	callstack 25
  1979   006076  0E25               	movlw	low (?_printf+2)
  1980   006078  6E2B               	movwf	printf@ap^0,c
  1981   00607A  0E00               	movlw	0
  1982   00607C  6E1C               	movwf	vfprintf@fp^0,c
  1983   00607E  0E00               	movlw	0
  1984   006080  6E1D               	movwf	(vfprintf@fp+1)^0,c
  1985   006082  C023  F01E         	movff	printf@fmt,vfprintf@fmt
  1986   006086  C024  F01F         	movff	printf@fmt+1,vfprintf@fmt+1
  1987   00608A  0E2B               	movlw	low printf@ap
  1988   00608C  6E20               	movwf	vfprintf@ap^0,c
  1989   00608E  EC97  F030         	call	_vfprintf	;wreg free
  1990   006092  0012               	return		;funcret
  1991   006094                     __end_of_printf:
  1992                           	callstack 0
  1993                           
  1994 ;; *************** function _vfprintf *****************
  1995 ;; Defined at:
  1996 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1999 ;;		 -> NULL(0), 
  2000 ;;  fmt             2   29[COMRAM] PTR const unsigned char 
  2001 ;;		 -> STR_12(25), STR_11(42), STR_10(25), STR_9(29), 
  2002 ;;		 -> STR_7(35), STR_6(45), STR_5(24), STR_4(60), 
  2003 ;;		 -> STR_3(55), STR_2(43), STR_1(43), 
  2004 ;;  ap              1   31[COMRAM] PTR PTR void 
  2005 ;;		 -> printf@ap(1), 
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;  cfmt            2   32[COMRAM] PTR unsigned char 
  2008 ;;		 -> STR_12(25), STR_11(42), STR_10(25), STR_9(29), 
  2009 ;;		 -> STR_7(35), STR_6(45), STR_5(24), STR_4(60), 
  2010 ;;		 -> STR_3(55), STR_2(43), STR_1(43), 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  2   27[COMRAM] int 
  2013 ;; Registers used:
  2014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2020 ;;      Params:         5       0       0       0       0       0       0
  2021 ;;      Locals:         2       0       0       0       0       0       0
  2022 ;;      Temps:          0       0       0       0       0       0       0
  2023 ;;      Totals:         7       0       0       0       0       0       0
  2024 ;;Total ram usage:        7 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; Hardware stack levels required when called: 3
  2027 ;; This function calls:
  2028 ;;		_vfpfcnvrt
  2029 ;; This function is called by:
  2030 ;;		_printf
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           	psect	text7
  2035   00612E                     __ptext7:
  2036                           	callstack 0
  2037   00612E                     _vfprintf:
  2038                           	callstack 25
  2039   00612E                     
  2040                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2041   00612E  C01E  F021         	movff	vfprintf@fmt,vfprintf@cfmt
  2042   006132  C01F  F022         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2043                           
  2044                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2045   006136  EFA7  F030         	goto	l1711
  2046   00613A                     l1709:
  2047                           
  2048                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2049   00613A  C01C  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  2050   00613E  C01D  F00C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2051   006142  0E21               	movlw	low vfprintf@cfmt
  2052   006144  6E0D               	movwf	vfpfcnvrt@fmt^0,c
  2053   006146  C020  F00E         	movff	vfprintf@ap,vfpfcnvrt@ap
  2054   00614A  EC3F  F035         	call	_vfpfcnvrt	;wreg free
  2055   00614E                     l1711:
  2056                           
  2057                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2058   00614E  C021  FFF6         	movff	vfprintf@cfmt,tblptrl
  2059   006152  C022  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2060   006156                     	if	0	;tblptru may be non-zero
  2061   006156                     	endif
  2062   006156                     	if	0	;tblptru may be non-zero
  2063   006156                     	endif
  2064   006156  0008               	tblrd		*
  2065   006158  50F5               	movf	tablat,w,c
  2066   00615A  0900               	iorlw	0
  2067   00615C  A4D8               	btfss	status,2,c
  2068   00615E  EFB3  F030         	goto	u1091
  2069   006162  EFB5  F030         	goto	u1090
  2070   006166                     u1091:
  2071   006166  EF9D  F030         	goto	l1709
  2072   00616A                     u1090:
  2073   00616A                     
  2074                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2075   00616A  0E00               	movlw	0
  2076   00616C  6E1D               	movwf	(?_vfprintf+1)^0,c
  2077   00616E  0E00               	movlw	0
  2078   006170  6E1C               	movwf	?_vfprintf^0,c
  2079   006172  0012               	return		;funcret
  2080   006174                     __end_of_vfprintf:
  2081                           	callstack 0
  2082                           
  2083 ;; *************** function _vfpfcnvrt *****************
  2084 ;; Defined at:
  2085 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  2088 ;;		 -> NULL(0), 
  2089 ;;  fmt             1   12[COMRAM] PTR PTR unsigned char 
  2090 ;;		 -> vfprintf@cfmt(2), 
  2091 ;;  ap              1   13[COMRAM] PTR PTR void 
  2092 ;;		 -> printf@ap(1), 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  cp              2   17[COMRAM] PTR unsigned char 
  2095 ;;		 -> ?_printf(2), main@read_buffer(100), STR_8(5), 
  2096 ;;  convarg         4   22[COMRAM] struct .
  2097 ;;  cp              2   20[COMRAM] PTR unsigned char 
  2098 ;;		 -> STR_12(25), STR_11(42), STR_10(25), STR_9(29), 
  2099 ;;		 -> STR_7(35), STR_6(45), STR_5(24), STR_4(60), 
  2100 ;;		 -> STR_3(55), STR_2(43), STR_1(43), 
  2101 ;;  c               1   26[COMRAM] unsigned char 
  2102 ;;  x               1   19[COMRAM] unsigned char 
  2103 ;;  done            1   16[COMRAM] _Bool 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2113 ;;      Params:         4       0       0       0       0       0       0
  2114 ;;      Locals:        11       0       0       0       0       0       0
  2115 ;;      Temps:          2       0       0       0       0       0       0
  2116 ;;      Totals:        17       0       0       0       0       0       0
  2117 ;;Total ram usage:       17 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; Hardware stack levels required when called: 2
  2120 ;; This function calls:
  2121 ;;		___lwdiv
  2122 ;;		___lwmod
  2123 ;;		_fputc
  2124 ;; This function is called by:
  2125 ;;		_vfprintf
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text8
  2130   006A7E                     __ptext8:
  2131                           	callstack 0
  2132   006A7E                     _vfpfcnvrt:
  2133                           	callstack 25
  2134   006A7E                     
  2135                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1194:  char x;
  2136   006A7E  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2137   006A80  6ED9               	movwf	fsr2l,c
  2138   006A82  6ADA               	clrf	fsr2h,c
  2139   006A84  CFDE FFF6          	movff	postinc2,tblptrl
  2140   006A88  CFDD FFF7          	movff	postdec2,tblptrh
  2141   006A8C                     	if	0	;tblptru may be non-zero
  2142   006A8C                     	endif
  2143   006A8C                     	if	0	;tblptru may be non-zero
  2144   006A8C                     	endif
  2145   006A8C  0008               	tblrd		*
  2146   006A8E  50F5               	movf	tablat,w,c
  2147   006A90  0A25               	xorlw	37
  2148   006A92  A4D8               	btfss	status,2,c
  2149   006A94  EF4E  F035         	goto	u911
  2150   006A98  EF50  F035         	goto	u910
  2151   006A9C                     u911:
  2152   006A9C  EF0A  F037         	goto	l1701
  2153   006AA0                     u910:
  2154   006AA0                     
  2155                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2156   006AA0  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2157   006AA2  6ED9               	movwf	fsr2l,c
  2158   006AA4  6ADA               	clrf	fsr2h,c
  2159   006AA6  2ADE               	incf	postinc2,f,c
  2160   006AA8  0E00               	movlw	0
  2161   006AAA  22DD               	addwfc	postdec2,f,c
  2162   006AAC                     
  2163                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2164   006AAC  0E00               	movlw	0
  2165   006AAE  6E5F               	movwf	(_width+1)^0,c
  2166   006AB0  0E00               	movlw	0
  2167   006AB2  6E5E               	movwf	_width^0,c
  2168   006AB4  C05E  F064         	movff	_width,_flags
  2169   006AB8                     
  2170                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2171   006AB8  6860               	setf	_prec^0,c
  2172   006ABA  6861               	setf	(_prec+1)^0,c
  2173   006ABC                     
  2174                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1439:   if (0
  2175   006ABC  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2176   006ABE  6ED9               	movwf	fsr2l,c
  2177   006AC0  6ADA               	clrf	fsr2h,c
  2178   006AC2  CFDE F015          	movff	postinc2,vfpfcnvrt@cp
  2179   006AC6  CFDD F016          	movff	postdec2,vfpfcnvrt@cp+1
  2180   006ACA  C015  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2181   006ACE  C016  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2182   006AD2                     	if	0	;tblptru may be non-zero
  2183   006AD2                     	endif
  2184   006AD2                     	if	0	;tblptru may be non-zero
  2185   006AD2                     	endif
  2186   006AD2  0008               	tblrd		*
  2187   006AD4  50F5               	movf	tablat,w,c
  2188   006AD6  0A78               	xorlw	120
  2189   006AD8  B4D8               	btfsc	status,2,c
  2190   006ADA  EF71  F035         	goto	u921
  2191   006ADE  EF73  F035         	goto	u920
  2192   006AE2                     u921:
  2193   006AE2  EF81  F035         	goto	l1621
  2194   006AE6                     u920:
  2195   006AE6  C015  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2196   006AEA  C016  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2197   006AEE                     	if	0	;tblptru may be non-zero
  2198   006AEE                     	endif
  2199   006AEE                     	if	0	;tblptru may be non-zero
  2200   006AEE                     	endif
  2201   006AEE  0008               	tblrd		*
  2202   006AF0  50F5               	movf	tablat,w,c
  2203   006AF2  0A75               	xorlw	117
  2204   006AF4  A4D8               	btfss	status,2,c
  2205   006AF6  EF7F  F035         	goto	u931
  2206   006AFA  EF81  F035         	goto	u930
  2207   006AFE                     u931:
  2208   006AFE  EF4D  F036         	goto	l1669
  2209   006B02                     u930:
  2210   006B02                     l1621:
  2211                           
  2212                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  2213   006B02  500E               	movf	vfpfcnvrt@ap^0,w,c
  2214   006B04  6ED9               	movwf	fsr2l,c
  2215   006B06  6ADA               	clrf	fsr2h,c
  2216   006B08  0E02               	movlw	2
  2217   006B0A  26DF               	addwf	indf2,f,c
  2218   006B0C  5CDF               	subwf	indf2,w,c
  2219   006B0E  6ED9               	movwf	fsr2l,c
  2220   006B10  6ADA               	clrf	fsr2h,c
  2221   006B12  CFDE F017          	movff	postinc2,vfpfcnvrt@convarg
  2222   006B16  CFDE F018          	movff	postinc2,vfpfcnvrt@convarg+1
  2223   006B1A                     
  2224                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  2225   006B1A  0E01               	movlw	1
  2226   006B1C  2415               	addwf	vfpfcnvrt@cp^0,w,c
  2227   006B1E  6E0F               	movwf	??_vfpfcnvrt^0,c
  2228   006B20  0E00               	movlw	0
  2229   006B22  2016               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2230   006B24  6E10               	movwf	(??_vfpfcnvrt+1)^0,c
  2231   006B26  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2232   006B28  6ED9               	movwf	fsr2l,c
  2233   006B2A  6ADA               	clrf	fsr2h,c
  2234   006B2C  C00F  FFDE         	movff	??_vfpfcnvrt,postinc2
  2235   006B30  C010  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2236                           
  2237                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  2238   006B34  EF3D  F036         	goto	l1667
  2239   006B38                     l1625:
  2240                           
  2241                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  2242   006B38  0E20               	movlw	32
  2243   006B3A  6E1B               	movwf	vfpfcnvrt@c^0,c
  2244   006B3C                     l1627:
  2245                           
  2246                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  2247   006B3C  061B               	decf	vfpfcnvrt@c^0,f,c
  2248   006B3E  501B               	movf	vfpfcnvrt@c^0,w,c
  2249   006B40  0F3E               	addlw	low _dbuf
  2250   006B42  6ED9               	movwf	fsr2l,c
  2251   006B44  6ADA               	clrf	fsr2h,c
  2252   006B46  C017  F001         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  2253   006B4A  C018  F002         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  2254   006B4E  0E00               	movlw	0
  2255   006B50  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2256   006B52  0E0A               	movlw	10
  2257   006B54  6E03               	movwf	___lwmod@divisor^0,c
  2258   006B56  EC33  F031         	call	___lwmod	;wreg free
  2259   006B5A  5001               	movf	?___lwmod^0,w,c
  2260   006B5C  0F30               	addlw	48
  2261   006B5E  6EDF               	movwf	indf2,c
  2262   006B60                     
  2263                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  2264   006B60  C017  F001         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  2265   006B64  C018  F002         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  2266   006B68  0E00               	movlw	0
  2267   006B6A  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2268   006B6C  0E0A               	movlw	10
  2269   006B6E  6E03               	movwf	___lwdiv@divisor^0,c
  2270   006B70  EC65  F031         	call	___lwdiv	;wreg free
  2271   006B74  C001  F017         	movff	?___lwdiv,vfpfcnvrt@convarg
  2272   006B78  C002  F018         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  2273   006B7C                     
  2274                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  2275   006B7C  5017               	movf	vfpfcnvrt@convarg^0,w,c
  2276   006B7E  1018               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2277   006B80  B4D8               	btfsc	status,2,c
  2278   006B82  EFC5  F035         	goto	u941
  2279   006B86  EFC7  F035         	goto	u940
  2280   006B8A                     u941:
  2281   006B8A  EFE1  F035         	goto	l1639
  2282   006B8E                     u940:
  2283   006B8E  501B               	movf	vfpfcnvrt@c^0,w,c
  2284   006B90  A4D8               	btfss	status,2,c
  2285   006B92  EFCD  F035         	goto	u951
  2286   006B96  EFCF  F035         	goto	u950
  2287   006B9A                     u951:
  2288   006B9A  EF9E  F035         	goto	l1627
  2289   006B9E                     u950:
  2290   006B9E  EFE1  F035         	goto	l1639
  2291   006BA2                     l1635:
  2292                           
  2293                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  2294   006BA2  501B               	movf	vfpfcnvrt@c^0,w,c
  2295   006BA4  0F3E               	addlw	low _dbuf
  2296   006BA6  6ED9               	movwf	fsr2l,c
  2297   006BA8  6ADA               	clrf	fsr2h,c
  2298   006BAA  50DF               	movf	indf2,w,c
  2299   006BAC  6E0F               	movwf	??_vfpfcnvrt^0,c
  2300   006BAE  500F               	movf	??_vfpfcnvrt^0,w,c
  2301   006BB0  6E02               	movwf	fputc@c^0,c
  2302   006BB2  6A03               	clrf	(fputc@c+1)^0,c
  2303   006BB4  C00B  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2304   006BB8  C00C  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2305   006BBC  ECF2  F031         	call	_fputc	;wreg free
  2306   006BC0  2A1B               	incf	vfpfcnvrt@c^0,f,c
  2307   006BC2                     l1639:
  2308                           
  2309                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  2310   006BC2  0E20               	movlw	32
  2311   006BC4  181B               	xorwf	vfpfcnvrt@c^0,w,c
  2312   006BC6  A4D8               	btfss	status,2,c
  2313   006BC8  EFE8  F035         	goto	u961
  2314   006BCC  EFEA  F035         	goto	u960
  2315   006BD0                     u961:
  2316   006BD0  EFD1  F035         	goto	l1635
  2317   006BD4                     u960:
  2318   006BD4  EF1D  F037         	goto	l967
  2319   006BD8                     l1641:
  2320                           
  2321                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1553:      c = si
      +                          zeof(dbuf);
  2322   006BD8  0E20               	movlw	32
  2323   006BDA  6E1B               	movwf	vfpfcnvrt@c^0,c
  2324   006BDC                     l1643:
  2325                           
  2326                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1558:       x = (
      +                          convarg.uint & 0xf);
  2327   006BDC  5017               	movf	vfpfcnvrt@convarg^0,w,c
  2328   006BDE  0B0F               	andlw	15
  2329   006BE0  6E14               	movwf	vfpfcnvrt@x^0,c
  2330   006BE2                     
  2331                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1559:       if (x
      +                           < 10) {
  2332   006BE2  0E0A               	movlw	10
  2333   006BE4  6014               	cpfslt	vfpfcnvrt@x^0,c
  2334   006BE6  EFF7  F035         	goto	u971
  2335   006BEA  EFF9  F035         	goto	u970
  2336   006BEE                     u971:
  2337   006BEE  EFFD  F035         	goto	l1649
  2338   006BF2                     u970:
  2339   006BF2                     
  2340                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1560:        x +=
      +                           '0';
  2341   006BF2  0E30               	movlw	48
  2342   006BF4  2614               	addwf	vfpfcnvrt@x^0,f,c
  2343                           
  2344                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1561:       }
  2345   006BF6  EFFF  F035         	goto	l1651
  2346   006BFA                     l1649:
  2347                           
  2348                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1566:        x +=
      +                           'a' - 10;
  2349   006BFA  0E57               	movlw	87
  2350   006BFC  2614               	addwf	vfpfcnvrt@x^0,f,c
  2351   006BFE                     l1651:
  2352                           
  2353                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1571:       dbuf[
      +                          --c] = x;
  2354   006BFE  061B               	decf	vfpfcnvrt@c^0,f,c
  2355   006C00  501B               	movf	vfpfcnvrt@c^0,w,c
  2356   006C02  0F3E               	addlw	low _dbuf
  2357   006C04  6ED9               	movwf	fsr2l,c
  2358   006C06  6ADA               	clrf	fsr2h,c
  2359   006C08  C014  FFDF         	movff	vfpfcnvrt@x,indf2
  2360   006C0C                     
  2361                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1572:       conva
      +                          rg.uint >>= 4;
  2362   006C0C  3A17               	swapf	vfpfcnvrt@convarg^0,f,c
  2363   006C0E  3A18               	swapf	(vfpfcnvrt@convarg+1)^0,f,c
  2364   006C10  0E0F               	movlw	15
  2365   006C12  1617               	andwf	vfpfcnvrt@convarg^0,f,c
  2366   006C14  5018               	movf	(vfpfcnvrt@convarg+1)^0,w,c
  2367   006C16  0BF0               	andlw	240
  2368   006C18  1217               	iorwf	vfpfcnvrt@convarg^0,f,c
  2369   006C1A  0E0F               	movlw	15
  2370   006C1C  1618               	andwf	(vfpfcnvrt@convarg+1)^0,f,c
  2371   006C1E                     
  2372                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1576:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  2373   006C1E  5017               	movf	vfpfcnvrt@convarg^0,w,c
  2374   006C20  1018               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2375   006C22  B4D8               	btfsc	status,2,c
  2376   006C24  EF16  F036         	goto	u981
  2377   006C28  EF18  F036         	goto	u980
  2378   006C2C                     u981:
  2379   006C2C  EF32  F036         	goto	l1663
  2380   006C30                     u980:
  2381   006C30  501B               	movf	vfpfcnvrt@c^0,w,c
  2382   006C32  A4D8               	btfss	status,2,c
  2383   006C34  EF1E  F036         	goto	u991
  2384   006C38  EF20  F036         	goto	u990
  2385   006C3C                     u991:
  2386   006C3C  EFEE  F035         	goto	l1643
  2387   006C40                     u990:
  2388   006C40  EF32  F036         	goto	l1663
  2389   006C44                     l1659:
  2390                           
  2391                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1578:       fputc
      +                          (dbuf[c++], fp);
  2392   006C44  501B               	movf	vfpfcnvrt@c^0,w,c
  2393   006C46  0F3E               	addlw	low _dbuf
  2394   006C48  6ED9               	movwf	fsr2l,c
  2395   006C4A  6ADA               	clrf	fsr2h,c
  2396   006C4C  50DF               	movf	indf2,w,c
  2397   006C4E  6E0F               	movwf	??_vfpfcnvrt^0,c
  2398   006C50  500F               	movf	??_vfpfcnvrt^0,w,c
  2399   006C52  6E02               	movwf	fputc@c^0,c
  2400   006C54  6A03               	clrf	(fputc@c+1)^0,c
  2401   006C56  C00B  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2402   006C5A  C00C  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2403   006C5E  ECF2  F031         	call	_fputc	;wreg free
  2404   006C62  2A1B               	incf	vfpfcnvrt@c^0,f,c
  2405   006C64                     l1663:
  2406                           
  2407                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1577:      while 
      +                          (c != sizeof(dbuf)) {
  2408   006C64  0E20               	movlw	32
  2409   006C66  181B               	xorwf	vfpfcnvrt@c^0,w,c
  2410   006C68  A4D8               	btfss	status,2,c
  2411   006C6A  EF39  F036         	goto	u1001
  2412   006C6E  EF3B  F036         	goto	u1000
  2413   006C72                     u1001:
  2414   006C72  EF22  F036         	goto	l1659
  2415   006C76                     u1000:
  2416   006C76  EF1D  F037         	goto	l967
  2417   006C7A                     l1667:
  2418   006C7A  C015  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2419   006C7E  C016  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2420   006C82                     	if	0	;tblptru may be non-zero
  2421   006C82                     	endif
  2422   006C82                     	if	0	;tblptru may be non-zero
  2423   006C82                     	endif
  2424   006C82  0008               	tblrd		*
  2425   006C84  50F5               	movf	tablat,w,c
  2426                           
  2427                           ; Switch size 1, requested type "simple"
  2428                           ; Number of cases is 2, Range of values is 117 to 120
  2429                           ; switch strategies available:
  2430                           ; Name         Instructions Cycles
  2431                           ; simple_byte            7     4 (average)
  2432                           ;	Chosen strategy is simple_byte
  2433   006C86  0A75               	xorlw	117	; case 117
  2434   006C88  B4D8               	btfsc	status,2,c
  2435   006C8A  EF9C  F035         	goto	l1625
  2436   006C8E  0A0D               	xorlw	13	; case 120
  2437   006C90  B4D8               	btfsc	status,2,c
  2438   006C92  EFEC  F035         	goto	l1641
  2439   006C96  EF4D  F036         	goto	l1669
  2440   006C9A                     l1669:
  2441                           
  2442                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  2443   006C9A  0E00               	movlw	0
  2444   006C9C  6E11               	movwf	vfpfcnvrt@done^0,c
  2445   006C9E                     
  2446                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
  2447   006C9E  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2448   006CA0  6ED9               	movwf	fsr2l,c
  2449   006CA2  6ADA               	clrf	fsr2h,c
  2450   006CA4  CFDE FFF6          	movff	postinc2,tblptrl
  2451   006CA8  CFDD FFF7          	movff	postdec2,tblptrh
  2452   006CAC                     	if	0	;tblptru may be non-zero
  2453   006CAC                     	endif
  2454   006CAC                     	if	0	;tblptru may be non-zero
  2455   006CAC                     	endif
  2456   006CAC  0008               	tblrd		*
  2457   006CAE  50F5               	movf	tablat,w,c
  2458   006CB0  0A73               	xorlw	115
  2459   006CB2  A4D8               	btfss	status,2,c
  2460   006CB4  EF5E  F036         	goto	u1011
  2461   006CB8  EF60  F036         	goto	u1010
  2462   006CBC                     u1011:
  2463   006CBC  EF6A  F036         	goto	l1677
  2464   006CC0                     u1010:
  2465   006CC0                     
  2466                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  2467   006CC0  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2468   006CC2  6ED9               	movwf	fsr2l,c
  2469   006CC4  6ADA               	clrf	fsr2h,c
  2470   006CC6  2ADE               	incf	postinc2,f,c
  2471   006CC8  0E00               	movlw	0
  2472   006CCA  22DD               	addwfc	postdec2,f,c
  2473   006CCC                     l1675:
  2474                           
  2475                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
  2476   006CCC  0E01               	movlw	1
  2477   006CCE  6E11               	movwf	vfpfcnvrt@done^0,c
  2478                           
  2479                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1660:   }
  2480   006CD0  EFB6  F036         	goto	l1687
  2481   006CD4                     l1677:
  2482   006CD4  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2483   006CD6  6ED9               	movwf	fsr2l,c
  2484   006CD8  6ADA               	clrf	fsr2h,c
  2485   006CDA  CFDE FFF6          	movff	postinc2,tblptrl
  2486   006CDE  CFDD FFF7          	movff	postdec2,tblptrh
  2487   006CE2                     	if	0	;tblptru may be non-zero
  2488   006CE2                     	endif
  2489   006CE2                     	if	0	;tblptru may be non-zero
  2490   006CE2                     	endif
  2491   006CE2  0008               	tblrd		*
  2492   006CE4  50F5               	movf	tablat,w,c
  2493   006CE6  0A6C               	xorlw	108
  2494   006CE8  A4D8               	btfss	status,2,c
  2495   006CEA  EF79  F036         	goto	u1021
  2496   006CEE  EF7B  F036         	goto	u1020
  2497   006CF2                     u1021:
  2498   006CF2  EFB6  F036         	goto	l1687
  2499   006CF6                     u1020:
  2500   006CF6  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2501   006CF8  6ED9               	movwf	fsr2l,c
  2502   006CFA  6ADA               	clrf	fsr2h,c
  2503   006CFC  CFDE F00F          	movff	postinc2,??_vfpfcnvrt
  2504   006D00  CFDD F010          	movff	postdec2,??_vfpfcnvrt+1
  2505   006D04  0E01               	movlw	1
  2506   006D06  260F               	addwf	??_vfpfcnvrt^0,f,c
  2507   006D08  0E00               	movlw	0
  2508   006D0A  2210               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2509   006D0C  C00F  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2510   006D10  C010  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2511   006D14                     	if	0	;tblptru may be non-zero
  2512   006D14                     	endif
  2513   006D14                     	if	0	;tblptru may be non-zero
  2514   006D14                     	endif
  2515   006D14  0008               	tblrd		*
  2516   006D16  50F5               	movf	tablat,w,c
  2517   006D18  0A6C               	xorlw	108
  2518   006D1A  A4D8               	btfss	status,2,c
  2519   006D1C  EF92  F036         	goto	u1031
  2520   006D20  EF94  F036         	goto	u1030
  2521   006D24                     u1031:
  2522   006D24  EFB6  F036         	goto	l1687
  2523   006D28                     u1030:
  2524   006D28  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2525   006D2A  6ED9               	movwf	fsr2l,c
  2526   006D2C  6ADA               	clrf	fsr2h,c
  2527   006D2E  CFDE F00F          	movff	postinc2,??_vfpfcnvrt
  2528   006D32  CFDD F010          	movff	postdec2,??_vfpfcnvrt+1
  2529   006D36  0E02               	movlw	2
  2530   006D38  260F               	addwf	??_vfpfcnvrt^0,f,c
  2531   006D3A  0E00               	movlw	0
  2532   006D3C  2210               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2533   006D3E  C00F  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2534   006D42  C010  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2535   006D46                     	if	0	;tblptru may be non-zero
  2536   006D46                     	endif
  2537   006D46                     	if	0	;tblptru may be non-zero
  2538   006D46                     	endif
  2539   006D46  0008               	tblrd		*
  2540   006D48  50F5               	movf	tablat,w,c
  2541   006D4A  0A73               	xorlw	115
  2542   006D4C  A4D8               	btfss	status,2,c
  2543   006D4E  EFAB  F036         	goto	u1041
  2544   006D52  EFAD  F036         	goto	u1040
  2545   006D56                     u1041:
  2546   006D56  EFB6  F036         	goto	l1687
  2547   006D5A                     u1040:
  2548   006D5A                     
  2549                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
  2550   006D5A  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2551   006D5C  6ED9               	movwf	fsr2l,c
  2552   006D5E  6ADA               	clrf	fsr2h,c
  2553   006D60  0E03               	movlw	3
  2554   006D62  26DE               	addwf	postinc2,f,c
  2555   006D64  0E00               	movlw	0
  2556   006D66  22DD               	addwfc	postdec2,f,c
  2557   006D68  EF66  F036         	goto	l1675
  2558   006D6C                     l1687:
  2559                           
  2560                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
  2561   006D6C  5011               	movf	vfpfcnvrt@done^0,w,c
  2562   006D6E  B4D8               	btfsc	status,2,c
  2563   006D70  EFBC  F036         	goto	u1051
  2564   006D74  EFBE  F036         	goto	u1050
  2565   006D78                     u1051:
  2566   006D78  EF02  F037         	goto	l1697
  2567   006D7C                     u1050:
  2568   006D7C                     
  2569                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1669:    for (cha
      +                          r * cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0)); *cp != '\0'; cp++) {
  2570   006D7C  500E               	movf	vfpfcnvrt@ap^0,w,c
  2571   006D7E  6ED9               	movwf	fsr2l,c
  2572   006D80  6ADA               	clrf	fsr2h,c
  2573   006D82  0E02               	movlw	2
  2574   006D84  26DF               	addwf	indf2,f,c
  2575   006D86  5CDF               	subwf	indf2,w,c
  2576   006D88  6ED9               	movwf	fsr2l,c
  2577   006D8A  6ADA               	clrf	fsr2h,c
  2578   006D8C  CFDE F012          	movff	postinc2,vfpfcnvrt@cp_1220
  2579   006D90  CFDE F013          	movff	postinc2,vfpfcnvrt@cp_1220+1
  2580   006D94  EFE8  F036         	goto	l1695
  2581   006D98                     l1691:
  2582                           
  2583                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1670:     fputc(*
      +                          cp, fp);
  2584   006D98  C012  FFF6         	movff	vfpfcnvrt@cp_1220,tblptrl
  2585   006D9C  C013  FFF7         	movff	vfpfcnvrt@cp_1220+1,tblptrh
  2586   006DA0  6AF8               	clrf	tblptru,c
  2587   006DA2  0E05               	movlw	(high __ramtop+-1)
  2588   006DA4  64F7               	cpfsgt	tblptrh,c
  2589   006DA6  D003               	bra	u1067
  2590   006DA8  0008               	tblrd		*
  2591   006DAA  50F5               	movf	tablat,w,c
  2592   006DAC  D005               	bra	u1060
  2593   006DAE                     u1067:
  2594   006DAE  CFF6 FFE1          	movff	tblptrl,fsr1l
  2595   006DB2  CFF7 FFE2          	movff	tblptrh,fsr1h
  2596   006DB6  50E7               	movf	indf1,w,c
  2597   006DB8                     u1060:
  2598   006DB8  6E0F               	movwf	??_vfpfcnvrt^0,c
  2599   006DBA  500F               	movf	??_vfpfcnvrt^0,w,c
  2600   006DBC  6E02               	movwf	fputc@c^0,c
  2601   006DBE  6A03               	clrf	(fputc@c+1)^0,c
  2602   006DC0  C00B  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2603   006DC4  C00C  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2604   006DC8  ECF2  F031         	call	_fputc	;wreg free
  2605   006DCC                     
  2606                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1674:    }
  2607   006DCC  4A12               	infsnz	vfpfcnvrt@cp_1220^0,f,c
  2608   006DCE  2A13               	incf	(vfpfcnvrt@cp_1220+1)^0,f,c
  2609   006DD0                     l1695:
  2610   006DD0  C012  FFF6         	movff	vfpfcnvrt@cp_1220,tblptrl
  2611   006DD4  C013  FFF7         	movff	vfpfcnvrt@cp_1220+1,tblptrh
  2612   006DD8  6AF8               	clrf	tblptru,c
  2613   006DDA  0E05               	movlw	(high __ramtop+-1)
  2614   006DDC  64F7               	cpfsgt	tblptrh,c
  2615   006DDE  D003               	bra	u1077
  2616   006DE0  0008               	tblrd		*
  2617   006DE2  50F5               	movf	tablat,w,c
  2618   006DE4  D005               	bra	u1070
  2619   006DE6                     u1077:
  2620   006DE6  CFF6 FFE1          	movff	tblptrl,fsr1l
  2621   006DEA  CFF7 FFE2          	movff	tblptrh,fsr1h
  2622   006DEE  50E7               	movf	indf1,w,c
  2623   006DF0                     u1070:
  2624   006DF0  0900               	iorlw	0
  2625   006DF2  A4D8               	btfss	status,2,c
  2626   006DF4  EFFE  F036         	goto	u1081
  2627   006DF8  EF00  F037         	goto	u1080
  2628   006DFC                     u1081:
  2629   006DFC  EFCC  F036         	goto	l1691
  2630   006E00                     u1080:
  2631   006E00  EF1D  F037         	goto	l967
  2632   006E04                     l1697:
  2633                           
  2634                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2635   006E04  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2636   006E06  6ED9               	movwf	fsr2l,c
  2637   006E08  6ADA               	clrf	fsr2h,c
  2638   006E0A  2ADE               	incf	postinc2,f,c
  2639   006E0C  0E00               	movlw	0
  2640   006E0E  22DD               	addwfc	postdec2,f,c
  2641   006E10  EF1D  F037         	goto	l967
  2642   006E14                     l1701:
  2643                           
  2644                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2645   006E14  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2646   006E16  6ED9               	movwf	fsr2l,c
  2647   006E18  6ADA               	clrf	fsr2h,c
  2648   006E1A  CFDE FFF6          	movff	postinc2,tblptrl
  2649   006E1E  CFDD FFF7          	movff	postdec2,tblptrh
  2650   006E22                     	if	0	;tblptru may be non-zero
  2651   006E22                     	endif
  2652   006E22                     	if	0	;tblptru may be non-zero
  2653   006E22                     	endif
  2654   006E22  0008               	tblrd		*
  2655   006E24  50F5               	movf	tablat,w,c
  2656   006E26  6E02               	movwf	fputc@c^0,c
  2657   006E28  6A03               	clrf	(fputc@c+1)^0,c
  2658   006E2A  C00B  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2659   006E2E  C00C  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2660   006E32  ECF2  F031         	call	_fputc	;wreg free
  2661   006E36  EF02  F037         	goto	l1697
  2662   006E3A                     l967:
  2663   006E3A  0012               	return		;funcret
  2664   006E3C                     __end_of_vfpfcnvrt:
  2665                           	callstack 0
  2666                           
  2667 ;; *************** function _fputc *****************
  2668 ;; Defined at:
  2669 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;  c               2    1[COMRAM] int 
  2672 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  2673 ;;		 -> NULL(0), 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;		None
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  2    1[COMRAM] int 
  2678 ;; Registers used:
  2679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2685 ;;      Params:         4       0       0       0       0       0       0
  2686 ;;      Locals:         0       0       0       0       0       0       0
  2687 ;;      Temps:          5       0       0       0       0       0       0
  2688 ;;      Totals:         9       0       0       0       0       0       0
  2689 ;;Total ram usage:        9 bytes
  2690 ;; Hardware stack levels used: 1
  2691 ;; Hardware stack levels required when called: 1
  2692 ;; This function calls:
  2693 ;;		_putch
  2694 ;; This function is called by:
  2695 ;;		_vfpfcnvrt
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text9
  2700   0063E4                     __ptext9:
  2701                           	callstack 0
  2702   0063E4                     _fputc:
  2703                           	callstack 25
  2704   0063E4  5004               	movf	fputc@fp^0,w,c
  2705   0063E6  1005               	iorwf	(fputc@fp+1)^0,w,c
  2706   0063E8  B4D8               	btfsc	status,2,c
  2707   0063EA  EFF9  F031         	goto	u871
  2708   0063EE  EFFB  F031         	goto	u870
  2709   0063F2                     u871:
  2710   0063F2  EF04  F032         	goto	l1597
  2711   0063F6                     u870:
  2712   0063F6  5004               	movf	fputc@fp^0,w,c
  2713   0063F8  1005               	iorwf	(fputc@fp+1)^0,w,c
  2714   0063FA  A4D8               	btfss	status,2,c
  2715   0063FC  EF02  F032         	goto	u881
  2716   006400  EF04  F032         	goto	u880
  2717   006404                     u881:
  2718   006404  EF09  F032         	goto	l1599
  2719   006408                     u880:
  2720   006408                     l1597:
  2721   006408  5002               	movf	fputc@c^0,w,c
  2722   00640A  EC16  F030         	call	_putch
  2723   00640E  EF56  F032         	goto	l1003
  2724   006412                     l1599:
  2725   006412  EE20 F00A          	lfsr	2,10
  2726   006416  5004               	movf	fputc@fp^0,w,c
  2727   006418  26D9               	addwf	fsr2l,f,c
  2728   00641A  5005               	movf	(fputc@fp+1)^0,w,c
  2729   00641C  22DA               	addwfc	fsr2h,f,c
  2730   00641E  50DE               	movf	postinc2,w,c
  2731   006420  10DE               	iorwf	postinc2,w,c
  2732   006422  B4D8               	btfsc	status,2,c
  2733   006424  EF16  F032         	goto	u891
  2734   006428  EF18  F032         	goto	u890
  2735   00642C                     u891:
  2736   00642C  EF33  F032         	goto	l1603
  2737   006430                     u890:
  2738   006430  EE20 F00A          	lfsr	2,10
  2739   006434  5004               	movf	fputc@fp^0,w,c
  2740   006436  26D9               	addwf	fsr2l,f,c
  2741   006438  5005               	movf	(fputc@fp+1)^0,w,c
  2742   00643A  22DA               	addwfc	fsr2h,f,c
  2743   00643C  EE10 F003          	lfsr	1,3
  2744   006440  5004               	movf	fputc@fp^0,w,c
  2745   006442  26E1               	addwf	fsr1l,f,c
  2746   006444  5005               	movf	(fputc@fp+1)^0,w,c
  2747   006446  22E2               	addwfc	fsr1h,f,c
  2748   006448  50DE               	movf	postinc2,w,c
  2749   00644A  5CE6               	subwf	postinc1,w,c
  2750   00644C  50E6               	movf	postinc1,w,c
  2751   00644E  0A80               	xorlw	128
  2752   006450  6E0A               	movwf	(??_fputc+4)^0,c
  2753   006452  50DE               	movf	postinc2,w,c
  2754   006454  0A80               	xorlw	128
  2755   006456  580A               	subwfb	(??_fputc+4)^0,w,c
  2756   006458  B0D8               	btfsc	status,0,c
  2757   00645A  EF31  F032         	goto	u901
  2758   00645E  EF33  F032         	goto	u900
  2759   006462                     u901:
  2760   006462  EF56  F032         	goto	l1003
  2761   006466                     u900:
  2762   006466                     l1603:
  2763   006466  EE20 F003          	lfsr	2,3
  2764   00646A  5004               	movf	fputc@fp^0,w,c
  2765   00646C  26D9               	addwf	fsr2l,f,c
  2766   00646E  5005               	movf	(fputc@fp+1)^0,w,c
  2767   006470  22DA               	addwfc	fsr2h,f,c
  2768   006472  CFDE F006          	movff	postinc2,??_fputc
  2769   006476  CFDD F007          	movff	postdec2,??_fputc+1
  2770   00647A  C004  FFD9         	movff	fputc@fp,fsr2l
  2771   00647E  C005  FFDA         	movff	fputc@fp+1,fsr2h
  2772   006482  CFDE F008          	movff	postinc2,??_fputc+2
  2773   006486  CFDD F009          	movff	postdec2,??_fputc+3
  2774   00648A  5006               	movf	??_fputc^0,w,c
  2775   00648C  2408               	addwf	(??_fputc+2)^0,w,c
  2776   00648E  6ED9               	movwf	fsr2l,c
  2777   006490  5007               	movf	(??_fputc+1)^0,w,c
  2778   006492  2009               	addwfc	(??_fputc+3)^0,w,c
  2779   006494  6EDA               	movwf	fsr2h,c
  2780   006496  C002  FFDF         	movff	fputc@c,indf2
  2781   00649A  EE20 F003          	lfsr	2,3
  2782   00649E  5004               	movf	fputc@fp^0,w,c
  2783   0064A0  26D9               	addwf	fsr2l,f,c
  2784   0064A2  5005               	movf	(fputc@fp+1)^0,w,c
  2785   0064A4  22DA               	addwfc	fsr2h,f,c
  2786   0064A6  2ADE               	incf	postinc2,f,c
  2787   0064A8  0E00               	movlw	0
  2788   0064AA  22DD               	addwfc	postdec2,f,c
  2789   0064AC                     l1003:
  2790   0064AC  0012               	return		;funcret
  2791   0064AE                     __end_of_fputc:
  2792                           	callstack 0
  2793                           
  2794 ;; *************** function _putch *****************
  2795 ;; Defined at:
  2796 ;;		line 63 in file "main.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;  byte            1    wreg     unsigned char 
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  byte            1    0[COMRAM] unsigned char 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		wreg
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2810 ;;      Params:         0       0       0       0       0       0       0
  2811 ;;      Locals:         1       0       0       0       0       0       0
  2812 ;;      Temps:          0       0       0       0       0       0       0
  2813 ;;      Totals:         1       0       0       0       0       0       0
  2814 ;;Total ram usage:        1 bytes
  2815 ;; Hardware stack levels used: 1
  2816 ;; This function calls:
  2817 ;;		Nothing
  2818 ;; This function is called by:
  2819 ;;		_fputc
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           	psect	text10
  2824   00602C                     __ptext10:
  2825                           	callstack 0
  2826   00602C                     _putch:
  2827                           	callstack 25
  2828                           
  2829                           ;incstack = 0
  2830                           ;putch@byte stored from wreg
  2831   00602C  6E01               	movwf	putch@byte^0,c
  2832   00602E                     l58:
  2833                           
  2834                           ;main.c: 64:         }
  2835   00602E  A2AC               	btfss	172,1,c	;volatile
  2836   006030  EF1C  F030         	goto	u801
  2837   006034  EF1E  F030         	goto	u800
  2838   006038                     u801:
  2839   006038  EF17  F030         	goto	l58
  2840   00603C                     u800:
  2841   00603C                     
  2842                           ;main.c: 67:         I2C_STOP();
  2843   00603C  C001  FFAD         	movff	putch@byte,4013	;volatile
  2844   006040  0012               	return		;funcret
  2845   006042                     __end_of_putch:
  2846                           	callstack 0
  2847                           
  2848 ;; *************** function ___lwmod *****************
  2849 ;; Defined at:
  2850 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;  dividend        2    0[COMRAM] unsigned int 
  2853 ;;  divisor         2    2[COMRAM] unsigned int 
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;  counter         1    4[COMRAM] unsigned char 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  2    0[COMRAM] unsigned int 
  2858 ;; Registers used:
  2859 ;;		wreg, status,2, status,0
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2865 ;;      Params:         4       0       0       0       0       0       0
  2866 ;;      Locals:         1       0       0       0       0       0       0
  2867 ;;      Temps:          0       0       0       0       0       0       0
  2868 ;;      Totals:         5       0       0       0       0       0       0
  2869 ;;Total ram usage:        5 bytes
  2870 ;; Hardware stack levels used: 1
  2871 ;; This function calls:
  2872 ;;		Nothing
  2873 ;; This function is called by:
  2874 ;;		_vfpfcnvrt
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           	psect	text11
  2879   006266                     __ptext11:
  2880                           	callstack 0
  2881   006266                     ___lwmod:
  2882                           	callstack 26
  2883   006266  5003               	movf	___lwmod@divisor^0,w,c
  2884   006268  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2885   00626A  B4D8               	btfsc	status,2,c
  2886   00626C  EF3A  F031         	goto	u841
  2887   006270  EF3C  F031         	goto	u840
  2888   006274                     u841:
  2889   006274  EF60  F031         	goto	l753
  2890   006278                     u840:
  2891   006278  0E01               	movlw	1
  2892   00627A  6E05               	movwf	___lwmod@counter^0,c
  2893   00627C  EF44  F031         	goto	l1583
  2894   006280                     l1581:
  2895   006280  90D8               	bcf	status,0,c
  2896   006282  3603               	rlcf	___lwmod@divisor^0,f,c
  2897   006284  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2898   006286  2A05               	incf	___lwmod@counter^0,f,c
  2899   006288                     l1583:
  2900   006288  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2901   00628A  EF49  F031         	goto	u851
  2902   00628E  EF4B  F031         	goto	u850
  2903   006292                     u851:
  2904   006292  EF40  F031         	goto	l1581
  2905   006296                     u850:
  2906   006296                     l1585:
  2907   006296  5003               	movf	___lwmod@divisor^0,w,c
  2908   006298  5C01               	subwf	___lwmod@dividend^0,w,c
  2909   00629A  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2910   00629C  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2911   00629E  A0D8               	btfss	status,0,c
  2912   0062A0  EF54  F031         	goto	u861
  2913   0062A4  EF56  F031         	goto	u860
  2914   0062A8                     u861:
  2915   0062A8  EF5A  F031         	goto	l1589
  2916   0062AC                     u860:
  2917   0062AC  5003               	movf	___lwmod@divisor^0,w,c
  2918   0062AE  5E01               	subwf	___lwmod@dividend^0,f,c
  2919   0062B0  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2920   0062B2  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2921   0062B4                     l1589:
  2922   0062B4  90D8               	bcf	status,0,c
  2923   0062B6  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2924   0062B8  3203               	rrcf	___lwmod@divisor^0,f,c
  2925   0062BA  2E05               	decfsz	___lwmod@counter^0,f,c
  2926   0062BC  EF4B  F031         	goto	l1585
  2927   0062C0                     l753:
  2928   0062C0  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2929   0062C4  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2930   0062C8  0012               	return		;funcret
  2931   0062CA                     __end_of___lwmod:
  2932                           	callstack 0
  2933                           
  2934 ;; *************** function ___lwdiv *****************
  2935 ;; Defined at:
  2936 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;  dividend        2    0[COMRAM] unsigned int 
  2939 ;;  divisor         2    2[COMRAM] unsigned int 
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;  quotient        2    4[COMRAM] unsigned int 
  2942 ;;  counter         1    6[COMRAM] unsigned char 
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  2    0[COMRAM] unsigned int 
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2952 ;;      Params:         4       0       0       0       0       0       0
  2953 ;;      Locals:         3       0       0       0       0       0       0
  2954 ;;      Temps:          0       0       0       0       0       0       0
  2955 ;;      Totals:         7       0       0       0       0       0       0
  2956 ;;Total ram usage:        7 bytes
  2957 ;; Hardware stack levels used: 1
  2958 ;; This function calls:
  2959 ;;		Nothing
  2960 ;; This function is called by:
  2961 ;;		_vfpfcnvrt
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           	psect	text12
  2966   0062CA                     __ptext12:
  2967                           	callstack 0
  2968   0062CA                     ___lwdiv:
  2969                           	callstack 26
  2970   0062CA  0E00               	movlw	0
  2971   0062CC  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2972   0062CE  0E00               	movlw	0
  2973   0062D0  6E05               	movwf	___lwdiv@quotient^0,c
  2974   0062D2  5003               	movf	___lwdiv@divisor^0,w,c
  2975   0062D4  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2976   0062D6  B4D8               	btfsc	status,2,c
  2977   0062D8  EF70  F031         	goto	u811
  2978   0062DC  EF72  F031         	goto	u810
  2979   0062E0                     u811:
  2980   0062E0  EF9A  F031         	goto	l743
  2981   0062E4                     u810:
  2982   0062E4  0E01               	movlw	1
  2983   0062E6  6E07               	movwf	___lwdiv@counter^0,c
  2984   0062E8  EF7A  F031         	goto	l1563
  2985   0062EC                     l1561:
  2986   0062EC  90D8               	bcf	status,0,c
  2987   0062EE  3603               	rlcf	___lwdiv@divisor^0,f,c
  2988   0062F0  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2989   0062F2  2A07               	incf	___lwdiv@counter^0,f,c
  2990   0062F4                     l1563:
  2991   0062F4  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2992   0062F6  EF7F  F031         	goto	u821
  2993   0062FA  EF81  F031         	goto	u820
  2994   0062FE                     u821:
  2995   0062FE  EF76  F031         	goto	l1561
  2996   006302                     u820:
  2997   006302                     l1565:
  2998   006302  90D8               	bcf	status,0,c
  2999   006304  3605               	rlcf	___lwdiv@quotient^0,f,c
  3000   006306  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3001   006308  5003               	movf	___lwdiv@divisor^0,w,c
  3002   00630A  5C01               	subwf	___lwdiv@dividend^0,w,c
  3003   00630C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3004   00630E  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3005   006310  A0D8               	btfss	status,0,c
  3006   006312  EF8D  F031         	goto	u831
  3007   006316  EF8F  F031         	goto	u830
  3008   00631A                     u831:
  3009   00631A  EF94  F031         	goto	l1573
  3010   00631E                     u830:
  3011   00631E  5003               	movf	___lwdiv@divisor^0,w,c
  3012   006320  5E01               	subwf	___lwdiv@dividend^0,f,c
  3013   006322  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3014   006324  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3015   006326  8005               	bsf	___lwdiv@quotient^0,0,c
  3016   006328                     l1573:
  3017   006328  90D8               	bcf	status,0,c
  3018   00632A  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3019   00632C  3203               	rrcf	___lwdiv@divisor^0,f,c
  3020   00632E  2E07               	decfsz	___lwdiv@counter^0,f,c
  3021   006330  EF81  F031         	goto	l1565
  3022   006334                     l743:
  3023   006334  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3024   006338  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3025   00633C  0012               	return		;funcret
  3026   00633E                     __end_of___lwdiv:
  3027                           	callstack 0
  3028                           
  3029 ;; *************** function _I2C_TRANSMITE *****************
  3030 ;; Defined at:
  3031 ;;		line 43 in file "I2C_Master.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  DADO_I2C        1    wreg     unsigned char 
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  DADO_I2C        1    0[COMRAM] unsigned char 
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      void 
  3038 ;; Registers used:
  3039 ;;		wreg
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3045 ;;      Params:         0       0       0       0       0       0       0
  3046 ;;      Locals:         1       0       0       0       0       0       0
  3047 ;;      Temps:          0       0       0       0       0       0       0
  3048 ;;      Totals:         1       0       0       0       0       0       0
  3049 ;;Total ram usage:        1 bytes
  3050 ;; Hardware stack levels used: 1
  3051 ;; This function calls:
  3052 ;;		Nothing
  3053 ;; This function is called by:
  3054 ;;		_i2c_write
  3055 ;;		_i2c_read
  3056 ;;		_I2C_ESCRITA
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           	psect	text13
  3061   006094                     __ptext13:
  3062                           	callstack 0
  3063   006094                     _I2C_TRANSMITE:
  3064                           	callstack 28
  3065                           
  3066                           ;incstack = 0
  3067                           ;I2C_TRANSMITE@DADO_I2C stored from wreg
  3068   006094  6E01               	movwf	I2C_TRANSMITE@DADO_I2C^0,c
  3069   006096                     
  3070                           ;I2C_Master.c: 43: void I2C_TRANSMITE (unsigned char DADO_I2C);I2C_Master.c: 44: {;I2C_M
      +                          aster.c: 45:  SSPBUF = DADO_I2C;
  3071   006096  C001  FFC9         	movff	I2C_TRANSMITE@DADO_I2C,4041	;volatile
  3072   00609A                     l204:
  3073   00609A  B0C7               	btfsc	199,0,c	;volatile
  3074   00609C  EF52  F030         	goto	u1111
  3075   0060A0  EF54  F030         	goto	u1110
  3076   0060A4                     u1111:
  3077   0060A4  EF4D  F030         	goto	l204
  3078   0060A8                     u1110:
  3079   0060A8                     l207:
  3080   0060A8  B4C7               	btfsc	199,2,c	;volatile
  3081   0060AA  EF59  F030         	goto	u1121
  3082   0060AE  EF5B  F030         	goto	u1120
  3083   0060B2                     u1121:
  3084   0060B2  EF54  F030         	goto	l207
  3085   0060B6                     u1120:
  3086   0060B6  0012               	return		;funcret
  3087   0060B8                     __end_of_I2C_TRANSMITE:
  3088                           	callstack 0
  3089                           
  3090 ;; *************** function _I2C_STOP *****************
  3091 ;; Defined at:
  3092 ;;		line 54 in file "I2C_Master.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;		None
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;		None
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1    wreg      void 
  3099 ;; Registers used:
  3100 ;;		None
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3106 ;;      Params:         0       0       0       0       0       0       0
  3107 ;;      Locals:         0       0       0       0       0       0       0
  3108 ;;      Temps:          0       0       0       0       0       0       0
  3109 ;;      Totals:         0       0       0       0       0       0       0
  3110 ;;Total ram usage:        0 bytes
  3111 ;; Hardware stack levels used: 1
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		_i2c_write
  3116 ;;		_i2c_read
  3117 ;;		_I2C_ESCRITA
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           	psect	text14
  3122   005FF2                     __ptext14:
  3123                           	callstack 0
  3124   005FF2                     _I2C_STOP:
  3125                           	callstack 28
  3126   005FF2                     
  3127                           ;I2C_Master.c: 56:  SSPCON2bits.PEN = 1;
  3128   005FF2  84C5               	bsf	197,2,c	;volatile
  3129   005FF4                     l218:
  3130   005FF4  B4C5               	btfsc	197,2,c	;volatile
  3131   005FF6  EFFF  F02F         	goto	u1131
  3132   005FFA  EF01  F030         	goto	u1130
  3133   005FFE                     u1131:
  3134   005FFE  EFFA  F02F         	goto	l218
  3135   006002                     u1130:
  3136   006002  0012               	return		;funcret
  3137   006004                     __end_of_I2C_STOP:
  3138                           	callstack 0
  3139                           
  3140 ;; *************** function _I2C_START *****************
  3141 ;; Defined at:
  3142 ;;		line 33 in file "I2C_Master.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;		None
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      void 
  3149 ;; Registers used:
  3150 ;;		None
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3156 ;;      Params:         0       0       0       0       0       0       0
  3157 ;;      Locals:         0       0       0       0       0       0       0
  3158 ;;      Temps:          0       0       0       0       0       0       0
  3159 ;;      Totals:         0       0       0       0       0       0       0
  3160 ;;Total ram usage:        0 bytes
  3161 ;; Hardware stack levels used: 1
  3162 ;; This function calls:
  3163 ;;		Nothing
  3164 ;; This function is called by:
  3165 ;;		_i2c_write
  3166 ;;		_i2c_read
  3167 ;;		_I2C_ESCRITA
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text15
  3172   005FE0                     __ptext15:
  3173                           	callstack 0
  3174   005FE0                     _I2C_START:
  3175                           	callstack 28
  3176   005FE0                     
  3177                           ;I2C_Master.c: 35:  SSPCON2bits.SEN = 1;
  3178   005FE0  80C5               	bsf	197,0,c	;volatile
  3179   005FE2                     l192:
  3180   005FE2  B0C5               	btfsc	197,0,c	;volatile
  3181   005FE4  EFF6  F02F         	goto	u1101
  3182   005FE8  EFF8  F02F         	goto	u1100
  3183   005FEC                     u1101:
  3184   005FEC  EFF1  F02F         	goto	l192
  3185   005FF0                     u1100:
  3186   005FF0  0012               	return		;funcret
  3187   005FF2                     __end_of_I2C_START:
  3188                           	callstack 0
  3189                           
  3190 ;; *************** function _I2C_RESTART *****************
  3191 ;; Defined at:
  3192 ;;		line 38 in file "I2C_Master.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;		None
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;		None
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  1    wreg      void 
  3199 ;; Registers used:
  3200 ;;		None
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3206 ;;      Params:         0       0       0       0       0       0       0
  3207 ;;      Locals:         0       0       0       0       0       0       0
  3208 ;;      Temps:          0       0       0       0       0       0       0
  3209 ;;      Totals:         0       0       0       0       0       0       0
  3210 ;;Total ram usage:        0 bytes
  3211 ;; Hardware stack levels used: 1
  3212 ;; This function calls:
  3213 ;;		Nothing
  3214 ;; This function is called by:
  3215 ;;		_i2c_read
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text16
  3220   005FCE                     __ptext16:
  3221                           	callstack 0
  3222   005FCE                     _I2C_RESTART:
  3223                           	callstack 28
  3224   005FCE                     
  3225                           ;I2C_Master.c: 40:  SSPCON2bits.RSEN = 1;
  3226   005FCE  82C5               	bsf	197,1,c	;volatile
  3227   005FD0                     l198:
  3228   005FD0  B2C5               	btfsc	197,1,c	;volatile
  3229   005FD2  EFED  F02F         	goto	u1141
  3230   005FD6  EFEF  F02F         	goto	u1140
  3231   005FDA                     u1141:
  3232   005FDA  EFE8  F02F         	goto	l198
  3233   005FDE                     u1140:
  3234   005FDE  0012               	return		;funcret
  3235   005FE0                     __end_of_I2C_RESTART:
  3236                           	callstack 0
  3237                           
  3238 ;; *************** function _I2C_RECEBE *****************
  3239 ;; Defined at:
  3240 ;;		line 89 in file "I2C_Master.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;		None
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;  x               1    0[COMRAM] unsigned char 
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  1    wreg      unsigned char 
  3247 ;; Registers used:
  3248 ;;		wreg, status,2
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3254 ;;      Params:         0       0       0       0       0       0       0
  3255 ;;      Locals:         1       0       0       0       0       0       0
  3256 ;;      Temps:          0       0       0       0       0       0       0
  3257 ;;      Totals:         1       0       0       0       0       0       0
  3258 ;;Total ram usage:        1 bytes
  3259 ;; Hardware stack levels used: 1
  3260 ;; This function calls:
  3261 ;;		Nothing
  3262 ;; This function is called by:
  3263 ;;		_i2c_read
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text17
  3268   0061C2                     __ptext17:
  3269                           	callstack 0
  3270   0061C2                     _I2C_RECEBE:
  3271                           	callstack 28
  3272   0061C2                     
  3273                           ;I2C_Master.c: 91: unsigned char x;;I2C_Master.c: 92:  SSPCON2bits.RCEN = 1;
  3274   0061C2  86C5               	bsf	197,3,c	;volatile
  3275   0061C4                     l231:
  3276   0061C4  B6C5               	btfsc	197,3,c	;volatile
  3277   0061C6  EFE7  F030         	goto	u1151
  3278   0061CA  EFE9  F030         	goto	u1150
  3279   0061CE                     u1151:
  3280   0061CE  EFE2  F030         	goto	l231
  3281   0061D2                     u1150:
  3282   0061D2                     l234:
  3283   0061D2  A0C7               	btfss	199,0,c	;volatile
  3284   0061D4  EFEE  F030         	goto	u1161
  3285   0061D8  EFF0  F030         	goto	u1160
  3286   0061DC                     u1161:
  3287   0061DC  EFE9  F030         	goto	l234
  3288   0061E0                     u1160:
  3289   0061E0                     
  3290                           ;I2C_Master.c: 95:  __nop();
  3291   0061E0  0000               	nop	
  3292                           
  3293                           ;I2C_Master.c: 96:     __nop();
  3294   0061E2  0000               	nop	
  3295                           
  3296                           ;I2C_Master.c: 97:     __nop();
  3297   0061E4  0000               	nop	
  3298                           
  3299                           ;I2C_Master.c: 98:     __nop();
  3300   0061E6  0000               	nop	
  3301                           
  3302                           ;I2C_Master.c: 99:     __nop();
  3303   0061E8  0000               	nop	
  3304                           
  3305                           ;I2C_Master.c: 100:     __nop();
  3306   0061EA  0000               	nop	
  3307                           
  3308                           ;I2C_Master.c: 101:     __nop();
  3309   0061EC  0000               	nop	
  3310                           
  3311                           ;I2C_Master.c: 102:     __nop();
  3312   0061EE  0000               	nop	
  3313                           
  3314                           ;I2C_Master.c: 103:     __nop();
  3315   0061F0  0000               	nop	
  3316                           
  3317                           ;I2C_Master.c: 104:     __nop();
  3318   0061F2  0000               	nop	
  3319                           
  3320                           ;I2C_Master.c: 105:     __nop();
  3321   0061F4  0000               	nop	
  3322                           
  3323                           ;I2C_Master.c: 106:     __nop();
  3324   0061F6  0000               	nop	
  3325                           
  3326                           ;I2C_Master.c: 107:     __nop();
  3327   0061F8  0000               	nop	
  3328                           
  3329                           ;I2C_Master.c: 108:     __nop();
  3330   0061FA  0000               	nop	
  3331                           
  3332                           ;I2C_Master.c: 109:     __nop();
  3333   0061FC  0000               	nop	
  3334                           
  3335                           ;I2C_Master.c: 110:     __nop();
  3336   0061FE  0000               	nop	
  3337                           
  3338                           ;I2C_Master.c: 111:     __nop();
  3339   006200  0000               	nop	
  3340                           
  3341                           ;I2C_Master.c: 112:     __nop();
  3342   006202  0000               	nop	
  3343                           
  3344                           ;I2C_Master.c: 113:     __nop();
  3345   006204  0000               	nop	
  3346                           
  3347                           ;I2C_Master.c: 114:     __nop();
  3348   006206  0000               	nop	
  3349                           
  3350                           ;I2C_Master.c: 115:     __nop();
  3351   006208  0000               	nop	
  3352                           
  3353                           ;I2C_Master.c: 116:     __nop();
  3354   00620A  0000               	nop	
  3355                           
  3356                           ;I2C_Master.c: 118:  x = SSPBUF;
  3357   00620C  CFC9 F001          	movff	4041,I2C_RECEBE@x	;volatile
  3358   006210                     
  3359                           ;I2C_Master.c: 119:  return x;
  3360   006210  5001               	movf	I2C_RECEBE@x^0,w,c
  3361   006212  0012               	return		;funcret
  3362   006214                     __end_of_I2C_RECEBE:
  3363                           	callstack 0
  3364                           
  3365 ;; *************** function _I2C_NACK *****************
  3366 ;; Defined at:
  3367 ;;		line 127 in file "I2C_Master.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;		None
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;		None
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      void 
  3374 ;; Registers used:
  3375 ;;		None
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3381 ;;      Params:         0       0       0       0       0       0       0
  3382 ;;      Locals:         0       0       0       0       0       0       0
  3383 ;;      Temps:          0       0       0       0       0       0       0
  3384 ;;      Totals:         0       0       0       0       0       0       0
  3385 ;;Total ram usage:        0 bytes
  3386 ;; Hardware stack levels used: 1
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		_i2c_read
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text18
  3395   006018                     __ptext18:
  3396                           	callstack 0
  3397   006018                     _I2C_NACK:
  3398                           	callstack 28
  3399   006018                     
  3400                           ;I2C_Master.c: 129:  SSPCON2bits.ACKDT = 1;
  3401   006018  8AC5               	bsf	197,5,c	;volatile
  3402                           
  3403                           ;I2C_Master.c: 130:  SSPCON2bits.ACKEN = 1;
  3404   00601A  88C5               	bsf	197,4,c	;volatile
  3405   00601C                     l246:
  3406   00601C  B8C5               	btfsc	197,4,c	;volatile
  3407   00601E  EF13  F030         	goto	u1181
  3408   006022  EF15  F030         	goto	u1180
  3409   006026                     u1181:
  3410   006026  EF0E  F030         	goto	l246
  3411   00602A                     u1180:
  3412   00602A  0012               	return		;funcret
  3413   00602C                     __end_of_I2C_NACK:
  3414                           	callstack 0
  3415                           
  3416 ;; *************** function _I2C_ACK *****************
  3417 ;; Defined at:
  3418 ;;		line 121 in file "I2C_Master.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;		None
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		None
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3432 ;;      Params:         0       0       0       0       0       0       0
  3433 ;;      Locals:         0       0       0       0       0       0       0
  3434 ;;      Temps:          0       0       0       0       0       0       0
  3435 ;;      Totals:         0       0       0       0       0       0       0
  3436 ;;Total ram usage:        0 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; This function calls:
  3439 ;;		Nothing
  3440 ;; This function is called by:
  3441 ;;		_i2c_read
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           	psect	text19
  3446   006004                     __ptext19:
  3447                           	callstack 0
  3448   006004                     _I2C_ACK:
  3449                           	callstack 28
  3450   006004                     
  3451                           ;I2C_Master.c: 123:  SSPCON2bits.ACKDT = 0;
  3452   006004  9AC5               	bcf	197,5,c	;volatile
  3453                           
  3454                           ;I2C_Master.c: 124:  SSPCON2bits.ACKEN = 1;
  3455   006006  88C5               	bsf	197,4,c	;volatile
  3456   006008                     l240:
  3457   006008  B8C5               	btfsc	197,4,c	;volatile
  3458   00600A  EF09  F030         	goto	u1171
  3459   00600E  EF0B  F030         	goto	u1170
  3460   006012                     u1171:
  3461   006012  EF04  F030         	goto	l240
  3462   006016                     u1170:
  3463   006016  0012               	return		;funcret
  3464   006018                     __end_of_I2C_ACK:
  3465                           	callstack 0
  3466                           
  3467 ;; *************** function _initUART *****************
  3468 ;; Defined at:
  3469 ;;		line 50 in file "main.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;		None
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  1    wreg      void 
  3476 ;; Registers used:
  3477 ;;		wreg, status,2
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3483 ;;      Params:         0       0       0       0       0       0       0
  3484 ;;      Locals:         0       0       0       0       0       0       0
  3485 ;;      Temps:          0       0       0       0       0       0       0
  3486 ;;      Totals:         0       0       0       0       0       0       0
  3487 ;;Total ram usage:        0 bytes
  3488 ;; Hardware stack levels used: 1
  3489 ;; This function calls:
  3490 ;;		Nothing
  3491 ;; This function is called by:
  3492 ;;		_main
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           	psect	text20
  3497   00605C                     __ptext20:
  3498                           	callstack 0
  3499   00605C                     _initUART:
  3500                           	callstack 30
  3501   00605C                     
  3502                           ;main.c: 51: 
  3503   00605C  9C94               	bcf	148,6,c	;volatile
  3504                           
  3505                           ;main.c: 52: 
  3506   00605E  8E94               	bsf	148,7,c	;volatile
  3507   006060                     
  3508                           ;main.c: 53: 
  3509   006060  0E22               	movlw	34
  3510   006062  6EAF               	movwf	175,c	;volatile
  3511                           
  3512                           ;main.c: 54: 
  3513   006064  0E00               	movlw	0
  3514   006066  6EB0               	movwf	176,c	;volatile
  3515   006068                     
  3516                           ;main.c: 55: 
  3517   006068  86B8               	bsf	184,3,c	;volatile
  3518   00606A                     
  3519                           ;main.c: 56: void i2c_write(uint16_t address, const uint8_t *data, uint16_t length) {
  3520   00606A  84AC               	bsf	172,2,c	;volatile
  3521   00606C                     
  3522                           ;main.c: 57:     for (uint16_t i = 0; i < length; i++) {
  3523   00606C  98AC               	bcf	172,4,c	;volatile
  3524   00606E                     
  3525                           ;main.c: 58:         I2C_START();
  3526   00606E  8AAC               	bsf	172,5,c	;volatile
  3527   006070                     
  3528                           ;main.c: 59:         I2C_TRANSMITE(0xA0);
  3529   006070  8EAB               	bsf	171,7,c	;volatile
  3530   006072                     
  3531                           ;main.c: 60:         I2C_TRANSMITE((address >> 8) & 0xFF);
  3532   006072  88AB               	bsf	171,4,c	;volatile
  3533   006074  0012               	return		;funcret
  3534   006076                     __end_of_initUART:
  3535                           	callstack 0
  3536                           
  3537 ;; *************** function _init *****************
  3538 ;; Defined at:
  3539 ;;		line 187 in file "main.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;		None
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;		None
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  1    wreg      void 
  3546 ;; Registers used:
  3547 ;;		wreg, status,2
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3553 ;;      Params:         0       0       0       0       0       0       0
  3554 ;;      Locals:         0       0       0       0       0       0       0
  3555 ;;      Temps:          0       0       0       0       0       0       0
  3556 ;;      Totals:         0       0       0       0       0       0       0
  3557 ;;Total ram usage:        0 bytes
  3558 ;; Hardware stack levels used: 1
  3559 ;; This function calls:
  3560 ;;		Nothing
  3561 ;; This function is called by:
  3562 ;;		_main
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           	psect	text21
  3567   006042                     __ptext21:
  3568                           	callstack 0
  3569   006042                     _init:
  3570                           	callstack 30
  3571   006042                     
  3572                           ;main.c: 188:     LATB &= 0x0F;
  3573   006042  0E06               	movlw	6
  3574   006044  6EC1               	movwf	193,c	;volatile
  3575                           
  3576                           ;main.c: 189: }
  3577   006046  0E00               	movlw	0
  3578   006048  6E95               	movwf	149,c	;volatile
  3579                           
  3580                           ;main.c: 191: 
  3581   00604A  0E00               	movlw	0
  3582   00604C  6E93               	movwf	147,c	;volatile
  3583                           
  3584                           ;main.c: 192: 
  3585   00604E  0E00               	movlw	0
  3586   006050  6E8C               	movwf	140,c	;volatile
  3587                           
  3588                           ;main.c: 194: void display_sequence(const char* sequence, uint8_t length) {
  3589   006052  0E00               	movlw	0
  3590   006054  6E8A               	movwf	138,c	;volatile
  3591   006056                     
  3592                           ;main.c: 195:     for (uint8_t i = 0; i <= length; i++) {
  3593   006056  8093               	bsf	147,0,c	;volatile
  3594   006058                     
  3595                           ;main.c: 196:         uint8_t digits[4] = {0xFF, 0xFF, 0xFF, 0xFF};
  3596   006058  8293               	bsf	147,1,c	;volatile
  3597   00605A  0012               	return		;funcret
  3598   00605C                     __end_of_init:
  3599                           	callstack 0
  3600                           
  3601 ;; *************** function _display_sequence *****************
  3602 ;; Defined at:
  3603 ;;		line 213 in file "main.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  sequence        2    0[COMRAM] PTR const unsigned char 
  3606 ;;		 -> STR_13(6), main@read_buffer(100), STR_8(5), 
  3607 ;;  length          1    2[COMRAM] unsigned char 
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;  j               1   14[COMRAM] unsigned char 
  3610 ;;  ch              1   15[COMRAM] unsigned char 
  3611 ;;  refresh         1   12[COMRAM] unsigned char 
  3612 ;;  j               1   16[COMRAM] unsigned char 
  3613 ;;  digits          4    8[COMRAM] unsigned char [4]
  3614 ;;  i               1   13[COMRAM] unsigned char 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      void 
  3617 ;; Registers used:
  3618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3624 ;;      Params:         3       0       0       0       0       0       0
  3625 ;;      Locals:         9       0       0       0       0       0       0
  3626 ;;      Temps:          5       0       0       0       0       0       0
  3627 ;;      Totals:        17       0       0       0       0       0       0
  3628 ;;Total ram usage:       17 bytes
  3629 ;; Hardware stack levels used: 1
  3630 ;; This function calls:
  3631 ;;		Nothing
  3632 ;; This function is called by:
  3633 ;;		_main
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           	psect	text22
  3638   006672                     __ptext22:
  3639                           	callstack 0
  3640   006672                     _display_sequence:
  3641                           	callstack 30
  3642   006672                     
  3643                           ;main.c: 214:                 if (digits[j] == 0xFF) {
  3644   006672  0E00               	movlw	0
  3645   006674  6E0E               	movwf	display_sequence@i^0,c
  3646   006676  EF2B  F034         	goto	l1955
  3647   00667A                     l113:
  3648                           
  3649                           ;main.c: 215:                     LATD = 0x00;
  3650   00667A  C065  F009         	movff	display_sequence@F2951,display_sequence@digits
  3651   00667E  C066  F00A         	movff	display_sequence@F2951+1,display_sequence@digits+1
  3652   006682  C067  F00B         	movff	display_sequence@F2951+2,display_sequence@digits+2
  3653   006686  C068  F00C         	movff	display_sequence@F2951+3,display_sequence@digits+3
  3654   00668A                     
  3655                           ;main.c: 216:                 } else {
  3656   00668A  0E00               	movlw	0
  3657   00668C  6E11               	movwf	display_sequence@j^0,c
  3658   00668E  EFB7  F033         	goto	l1917
  3659   006692                     l1893:
  3660                           
  3661                           ;main.c: 217:                     LATD = segment_map[digits[j]];
  3662   006692  500E               	movf	display_sequence@i^0,w,c
  3663   006694  2401               	addwf	display_sequence@sequence^0,w,c
  3664   006696  6E04               	movwf	??_display_sequence^0,c
  3665   006698  0E00               	movlw	0
  3666   00669A  2002               	addwfc	(display_sequence@sequence+1)^0,w,c
  3667   00669C  6E05               	movwf	(??_display_sequence+1)^0,c
  3668   00669E  5011               	movf	display_sequence@j^0,w,c
  3669   0066A0  2604               	addwf	??_display_sequence^0,f,c
  3670   0066A2  0E00               	movlw	0
  3671   0066A4  2205               	addwfc	(??_display_sequence+1)^0,f,c
  3672   0066A6  C004  FFF6         	movff	??_display_sequence,tblptrl
  3673   0066AA  C005  FFF7         	movff	??_display_sequence+1,tblptrh
  3674   0066AE  6AF8               	clrf	tblptru,c
  3675   0066B0  0E05               	movlw	(high __ramtop+-1)
  3676   0066B2  64F7               	cpfsgt	tblptrh,c
  3677   0066B4  D003               	bra	u1287
  3678   0066B6  0008               	tblrd		*
  3679   0066B8  50F5               	movf	tablat,w,c
  3680   0066BA  D005               	bra	u1280
  3681   0066BC                     u1287:
  3682   0066BC  CFF6 FFE1          	movff	tblptrl,fsr1l
  3683   0066C0  CFF7 FFE2          	movff	tblptrh,fsr1h
  3684   0066C4  50E7               	movf	indf1,w,c
  3685   0066C6                     u1280:
  3686   0066C6  6E10               	movwf	display_sequence@ch^0,c
  3687   0066C8                     
  3688                           ;main.c: 218:                 }
  3689   0066C8  0E2F               	movlw	47
  3690   0066CA  6410               	cpfsgt	display_sequence@ch^0,c
  3691   0066CC  EF6A  F033         	goto	u1291
  3692   0066D0  EF6C  F033         	goto	u1290
  3693   0066D4                     u1291:
  3694   0066D4  EF7D  F033         	goto	l1901
  3695   0066D8                     u1290:
  3696   0066D8  0E3A               	movlw	58
  3697   0066DA  6010               	cpfslt	display_sequence@ch^0,c
  3698   0066DC  EF72  F033         	goto	u1301
  3699   0066E0  EF74  F033         	goto	u1300
  3700   0066E4                     u1301:
  3701   0066E4  EF7D  F033         	goto	l1901
  3702   0066E8                     u1300:
  3703   0066E8                     
  3704                           ;main.c: 219:                 LATB = (LATB & 0x0F) | (1 << (j + 4));
  3705   0066E8  5011               	movf	display_sequence@j^0,w,c
  3706   0066EA  0F09               	addlw	low display_sequence@digits
  3707   0066EC  6ED9               	movwf	fsr2l,c
  3708   0066EE  6ADA               	clrf	fsr2h,c
  3709   0066F0  5010               	movf	display_sequence@ch^0,w,c
  3710   0066F2  0FD0               	addlw	208
  3711   0066F4  6EDF               	movwf	indf2,c
  3712                           
  3713                           ;main.c: 220:                 _delay((unsigned long)((1)*(16000000/4000.0)));
  3714   0066F6  EFB6  F033         	goto	l1915
  3715   0066FA                     l1901:
  3716   0066FA  0E45               	movlw	69
  3717   0066FC  1810               	xorwf	display_sequence@ch^0,w,c
  3718   0066FE  A4D8               	btfss	status,2,c
  3719   006700  EF84  F033         	goto	u1311
  3720   006704  EF86  F033         	goto	u1310
  3721   006708                     u1311:
  3722   006708  EF8E  F033         	goto	l1905
  3723   00670C                     u1310:
  3724   00670C                     
  3725                           ;main.c: 221:                 LATB &= 0x0F;
  3726   00670C  5011               	movf	display_sequence@j^0,w,c
  3727   00670E  0F09               	addlw	low display_sequence@digits
  3728   006710  6ED9               	movwf	fsr2l,c
  3729   006712  6ADA               	clrf	fsr2h,c
  3730   006714  0E0A               	movlw	10
  3731   006716  6EDF               	movwf	indf2,c
  3732                           
  3733                           ;main.c: 222:             }
  3734   006718  EFB6  F033         	goto	l1915
  3735   00671C                     l1905:
  3736   00671C  0E52               	movlw	82
  3737   00671E  1810               	xorwf	display_sequence@ch^0,w,c
  3738   006720  A4D8               	btfss	status,2,c
  3739   006722  EF95  F033         	goto	u1321
  3740   006726  EF97  F033         	goto	u1320
  3741   00672A                     u1321:
  3742   00672A  EF9F  F033         	goto	l1909
  3743   00672E                     u1320:
  3744   00672E                     
  3745                           ;main.c: 223:         }
  3746   00672E  5011               	movf	display_sequence@j^0,w,c
  3747   006730  0F09               	addlw	low display_sequence@digits
  3748   006732  6ED9               	movwf	fsr2l,c
  3749   006734  6ADA               	clrf	fsr2h,c
  3750   006736  0E0B               	movlw	11
  3751   006738  6EDF               	movwf	indf2,c
  3752                           
  3753                           ;main.c: 224:     }
  3754   00673A  EFB6  F033         	goto	l1915
  3755   00673E                     l1909:
  3756   00673E  0E4F               	movlw	79
  3757   006740  1810               	xorwf	display_sequence@ch^0,w,c
  3758   006742  A4D8               	btfss	status,2,c
  3759   006744  EFA6  F033         	goto	u1331
  3760   006748  EFA8  F033         	goto	u1330
  3761   00674C                     u1331:
  3762   00674C  EFB0  F033         	goto	l1913
  3763   006750                     u1330:
  3764   006750                     
  3765                           ;main.c: 225: }
  3766   006750  5011               	movf	display_sequence@j^0,w,c
  3767   006752  0F09               	addlw	low display_sequence@digits
  3768   006754  6ED9               	movwf	fsr2l,c
  3769   006756  6ADA               	clrf	fsr2h,c
  3770   006758  0E0C               	movlw	12
  3771   00675A  6EDF               	movwf	indf2,c
  3772                           
  3773                           ;main.c: 226: 
  3774   00675C  EFB6  F033         	goto	l1915
  3775   006760                     l1913:
  3776                           
  3777                           ;main.c: 227: 
  3778   006760  5011               	movf	display_sequence@j^0,w,c
  3779   006762  0F09               	addlw	low display_sequence@digits
  3780   006764  6ED9               	movwf	fsr2l,c
  3781   006766  6ADA               	clrf	fsr2h,c
  3782   006768  0EFF               	movlw	255
  3783   00676A  6EDF               	movwf	indf2,c
  3784   00676C                     l1915:
  3785                           
  3786                           ;main.c: 229: int main(void) {
  3787   00676C  2A11               	incf	display_sequence@j^0,f,c
  3788   00676E                     l1917:
  3789   00676E  0E05               	movlw	5
  3790   006770  6011               	cpfslt	display_sequence@j^0,c
  3791   006772  EFBD  F033         	goto	u1341
  3792   006776  EFBF  F033         	goto	u1340
  3793   00677A                     u1341:
  3794   00677A  EFD8  F033         	goto	l1921
  3795   00677E                     u1340:
  3796   00677E  5003               	movf	display_sequence@length^0,w,c
  3797   006780  6E04               	movwf	??_display_sequence^0,c
  3798   006782  6A05               	clrf	(??_display_sequence+1)^0,c
  3799   006784  5011               	movf	display_sequence@j^0,w,c
  3800   006786  C00E  F006         	movff	display_sequence@i,??_display_sequence+2
  3801   00678A  6A07               	clrf	(??_display_sequence+3)^0,c
  3802   00678C  2606               	addwf	(??_display_sequence+2)^0,f,c
  3803   00678E  0E00               	movlw	0
  3804   006790  2207               	addwfc	(??_display_sequence+3)^0,f,c
  3805   006792  5004               	movf	??_display_sequence^0,w,c
  3806   006794  5C06               	subwf	(??_display_sequence+2)^0,w,c
  3807   006796  5007               	movf	(??_display_sequence+3)^0,w,c
  3808   006798  0A80               	xorlw	128
  3809   00679A  6E08               	movwf	(??_display_sequence+4)^0,c
  3810   00679C  5005               	movf	(??_display_sequence+1)^0,w,c
  3811   00679E  0A80               	xorlw	128
  3812   0067A0  5808               	subwfb	(??_display_sequence+4)^0,w,c
  3813   0067A2  A0D8               	btfss	status,0,c
  3814   0067A4  EFD6  F033         	goto	u1351
  3815   0067A8  EFD8  F033         	goto	u1350
  3816   0067AC                     u1351:
  3817   0067AC  EF49  F033         	goto	l1893
  3818   0067B0                     u1350:
  3819   0067B0                     l1921:
  3820                           
  3821                           ;main.c: 231:     I2C_INICIA();
  3822   0067B0  0E00               	movlw	0
  3823   0067B2  6E0D               	movwf	display_sequence@refresh^0,c
  3824   0067B4                     l1927:
  3825                           
  3826                           ;main.c: 232:     init();
  3827   0067B4  0E00               	movlw	0
  3828   0067B6  6E0F               	movwf	display_sequence@j_470^0,c
  3829   0067B8                     l1933:
  3830                           
  3831                           ;main.c: 233:     int erro_mem = 0;
  3832   0067B8  500F               	movf	display_sequence@j_470^0,w,c
  3833   0067BA  0F09               	addlw	low display_sequence@digits
  3834   0067BC  6ED9               	movwf	fsr2l,c
  3835   0067BE  6ADA               	clrf	fsr2h,c
  3836   0067C0  28DE               	incf	postinc2,w,c
  3837   0067C2  A4D8               	btfss	status,2,c
  3838   0067C4  EFE6  F033         	goto	u1361
  3839   0067C8  EFE8  F033         	goto	u1360
  3840   0067CC                     u1361:
  3841   0067CC  EFEC  F033         	goto	l1937
  3842   0067D0                     u1360:
  3843   0067D0                     
  3844                           ;main.c: 234: 
  3845   0067D0  0E00               	movlw	0
  3846   0067D2  6E8C               	movwf	140,c	;volatile
  3847                           
  3848                           ;main.c: 235:     const char *message = "1234";
  3849   0067D4  EFFC  F033         	goto	l1939
  3850   0067D8                     l1937:
  3851                           
  3852                           ;main.c: 236: 
  3853   0067D8  500F               	movf	display_sequence@j_470^0,w,c
  3854   0067DA  0F09               	addlw	low display_sequence@digits
  3855   0067DC  6ED9               	movwf	fsr2l,c
  3856   0067DE  6ADA               	clrf	fsr2h,c
  3857   0067E0  50DF               	movf	indf2,w,c
  3858   0067E2  6E04               	movwf	??_display_sequence^0,c
  3859   0067E4  6A05               	clrf	(??_display_sequence+1)^0,c
  3860   0067E6  0E3D               	movlw	low _segment_map
  3861   0067E8  2404               	addwf	??_display_sequence^0,w,c
  3862   0067EA  6EF6               	movwf	tblptrl,c
  3863   0067EC  0E6E               	movlw	high _segment_map
  3864   0067EE  2005               	addwfc	(??_display_sequence+1)^0,w,c
  3865   0067F0  6EF7               	movwf	tblptrh,c
  3866   0067F2                     	if	0	;There are less than 3 active tblptr bytes
  3867   0067F2                     	endif
  3868   0067F2  0008               	tblrd		*
  3869   0067F4  CFF5 FF8C          	movff	tablat,3980	;volatile
  3870   0067F8                     l1939:
  3871                           
  3872                           ;main.c: 238: 
  3873   0067F8  C00F  F004         	movff	display_sequence@j_470,??_display_sequence
  3874   0067FC  0E04               	movlw	4
  3875   0067FE  2604               	addwf	??_display_sequence^0,f,c
  3876   006800  0E01               	movlw	1
  3877   006802  6E05               	movwf	(??_display_sequence+1)^0,c
  3878   006804  2A04               	incf	??_display_sequence^0,f,c
  3879   006806  EF07  F034         	goto	u1374
  3880   00680A                     u1375:
  3881   00680A  90D8               	bcf	status,0,c
  3882   00680C  3605               	rlcf	(??_display_sequence+1)^0,f,c
  3883   00680E                     u1374:
  3884   00680E  2E04               	decfsz	??_display_sequence^0,f,c
  3885   006810  EF05  F034         	goto	u1375
  3886   006814  508A               	movf	138,w,c	;volatile
  3887   006816  0B0F               	andlw	15
  3888   006818  1005               	iorwf	(??_display_sequence+1)^0,w,c
  3889   00681A  6E8A               	movwf	138,c	;volatile
  3890   00681C                     
  3891                           ;main.c: 239:     if (message_length + 1 > 100) {
  3892   00681C  0E06               	movlw	6
  3893   00681E  6E04               	movwf	??_display_sequence^0,c
  3894   006820  0E30               	movlw	48
  3895   006822                     u1577:
  3896   006822  2EE8               	decfsz	wreg,f,c
  3897   006824  D7FE               	bra	u1577
  3898   006826  2E04               	decfsz	??_display_sequence^0,f,c
  3899   006828  D7FC               	bra	u1577
  3900   00682A  D000               	nop2	
  3901   00682C                     
  3902                           ;main.c: 240: 
  3903   00682C  0E0F               	movlw	15
  3904   00682E  168A               	andwf	138,f,c	;volatile
  3905   006830                     
  3906                           ;main.c: 241:         printf("Erro: mensagem muito longa.\n");
  3907   006830  2A0F               	incf	display_sequence@j_470^0,f,c
  3908   006832  0E03               	movlw	3
  3909   006834  640F               	cpfsgt	display_sequence@j_470^0,c
  3910   006836  EF1F  F034         	goto	u1381
  3911   00683A  EF21  F034         	goto	u1380
  3912   00683E                     u1381:
  3913   00683E  EFDC  F033         	goto	l1933
  3914   006842                     u1380:
  3915   006842                     
  3916                           ;main.c: 242:         erro_mem = 1;
  3917   006842  2A0D               	incf	display_sequence@refresh^0,f,c
  3918   006844  0EC7               	movlw	199
  3919   006846  640D               	cpfsgt	display_sequence@refresh^0,c
  3920   006848  EF28  F034         	goto	u1391
  3921   00684C  EF2A  F034         	goto	u1390
  3922   006850                     u1391:
  3923   006850  EFDA  F033         	goto	l1927
  3924   006854                     u1390:
  3925   006854                     
  3926                           ;main.c: 243:     }
  3927   006854  2A0E               	incf	display_sequence@i^0,f,c
  3928   006856                     l1955:
  3929   006856  500E               	movf	display_sequence@i^0,w,c
  3930   006858  5C03               	subwf	display_sequence@length^0,w,c
  3931   00685A  B0D8               	btfsc	status,0,c
  3932   00685C  EF32  F034         	goto	u1401
  3933   006860  EF34  F034         	goto	u1400
  3934   006864                     u1401:
  3935   006864  EF3D  F033         	goto	l113
  3936   006868                     u1400:
  3937   006868  0012               	return		;funcret
  3938   00686A                     __end_of_display_sequence:
  3939                           	callstack 0
  3940                           
  3941 ;; *************** function _count_characters *****************
  3942 ;; Defined at:
  3943 ;;		line 177 in file "main.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;  message         2    0[COMRAM] PTR const unsigned char 
  3946 ;;		 -> STR_8(5), 
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;  i               2    6[COMRAM] int 
  3949 ;;  count           2    4[COMRAM] int 
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  2    0[COMRAM] int 
  3952 ;; Registers used:
  3953 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3959 ;;      Params:         2       0       0       0       0       0       0
  3960 ;;      Locals:         4       0       0       0       0       0       0
  3961 ;;      Temps:          2       0       0       0       0       0       0
  3962 ;;      Totals:         8       0       0       0       0       0       0
  3963 ;;Total ram usage:        8 bytes
  3964 ;; Hardware stack levels used: 1
  3965 ;; This function calls:
  3966 ;;		Nothing
  3967 ;; This function is called by:
  3968 ;;		_main
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text23
  3973   006174                     __ptext23:
  3974                           	callstack 0
  3975   006174                     _count_characters:
  3976                           	callstack 30
  3977   006174                     
  3978                           ;main.c: 178: }
  3979   006174  0E00               	movlw	0
  3980   006176  6E06               	movwf	(count_characters@count+1)^0,c
  3981   006178  0E00               	movlw	0
  3982   00617A  6E05               	movwf	count_characters@count^0,c
  3983                           
  3984                           ;main.c: 181:     if (value < 13) {
  3985   00617C  0E00               	movlw	0
  3986   00617E  6E08               	movwf	(count_characters@i+1)^0,c
  3987   006180  0E00               	movlw	0
  3988   006182  6E07               	movwf	count_characters@i^0,c
  3989   006184  EFC8  F030         	goto	l1881
  3990   006188                     l1879:
  3991                           
  3992                           ;main.c: 182:         LATD = segment_map[value];
  3993   006188  4A05               	infsnz	count_characters@count^0,f,c
  3994   00618A  2A06               	incf	(count_characters@count+1)^0,f,c
  3995                           
  3996                           ;main.c: 183:     } else {
  3997   00618C  4A07               	infsnz	count_characters@i^0,f,c
  3998   00618E  2A08               	incf	(count_characters@i+1)^0,f,c
  3999   006190                     l1881:
  4000   006190  5007               	movf	count_characters@i^0,w,c
  4001   006192  2401               	addwf	count_characters@message^0,w,c
  4002   006194  6E03               	movwf	??_count_characters^0,c
  4003   006196  5008               	movf	(count_characters@i+1)^0,w,c
  4004   006198  2002               	addwfc	(count_characters@message+1)^0,w,c
  4005   00619A  6E04               	movwf	(??_count_characters+1)^0,c
  4006   00619C  C003  FFF6         	movff	??_count_characters,tblptrl
  4007   0061A0  C004  FFF7         	movff	??_count_characters+1,tblptrh
  4008   0061A4                     	if	0	;tblptru may be non-zero
  4009   0061A4                     	endif
  4010   0061A4                     	if	0	;tblptru may be non-zero
  4011   0061A4                     	endif
  4012   0061A4  0008               	tblrd		*
  4013   0061A6  50F5               	movf	tablat,w,c
  4014   0061A8  0900               	iorlw	0
  4015   0061AA  A4D8               	btfss	status,2,c
  4016   0061AC  EFDA  F030         	goto	u1271
  4017   0061B0  EFDC  F030         	goto	u1270
  4018   0061B4                     u1271:
  4019   0061B4  EFC4  F030         	goto	l1879
  4020   0061B8                     u1270:
  4021   0061B8                     
  4022                           ;main.c: 185:     }
  4023   0061B8  C005  F001         	movff	count_characters@count,?_count_characters
  4024   0061BC  C006  F002         	movff	count_characters@count+1,?_count_characters+1
  4025   0061C0  0012               	return		;funcret
  4026   0061C2                     __end_of_count_characters:
  4027                           	callstack 0
  4028                           
  4029 ;; *************** function _I2C_INICIA *****************
  4030 ;; Defined at:
  4031 ;;		line 17 in file "I2C_Master.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;		None
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;		None
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  1    wreg      void 
  4038 ;; Registers used:
  4039 ;;		wreg, status,2
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4045 ;;      Params:         0       0       0       0       0       0       0
  4046 ;;      Locals:         0       0       0       0       0       0       0
  4047 ;;      Temps:          0       0       0       0       0       0       0
  4048 ;;      Totals:         0       0       0       0       0       0       0
  4049 ;;Total ram usage:        0 bytes
  4050 ;; Hardware stack levels used: 1
  4051 ;; This function calls:
  4052 ;;		Nothing
  4053 ;; This function is called by:
  4054 ;;		_main
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           	psect	text24
  4059   005FBE                     __ptext24:
  4060                           	callstack 0
  4061   005FBE                     _I2C_INICIA:
  4062                           	callstack 30
  4063   005FBE                     
  4064                           ;I2C_Master.c: 18:     TRISC = 0xff;
  4065   005FBE  6894               	setf	148,c	;volatile
  4066   005FC0                     
  4067                           ;I2C_Master.c: 20:  SSPCON1 = 0b00101000;
  4068   005FC0  0E28               	movlw	40
  4069   005FC2  6EC6               	movwf	198,c	;volatile
  4070                           
  4071                           ;I2C_Master.c: 23:  SSPADD = 20;
  4072   005FC4  0E14               	movlw	20
  4073   005FC6  6EC8               	movwf	200,c	;volatile
  4074                           
  4075                           ;I2C_Master.c: 24:  SSPSTAT = 0b10000000;
  4076   005FC8  0E80               	movlw	128
  4077   005FCA  6EC7               	movwf	199,c	;volatile
  4078   005FCC  0012               	return		;funcret
  4079   005FCE                     __end_of_I2C_INICIA:
  4080                           	callstack 0
  4081                           
  4082                           	psect	rparam
  4083   000000                     
  4084                           	psect	idloc
  4085                           
  4086                           ;Config register IDLOC0 @ 0x200000
  4087                           ;	unspecified, using default values
  4088   200000                     	org	2097152
  4089   200000  FF                 	db	255
  4090                           
  4091                           ;Config register IDLOC1 @ 0x200001
  4092                           ;	unspecified, using default values
  4093   200001                     	org	2097153
  4094   200001  FF                 	db	255
  4095                           
  4096                           ;Config register IDLOC2 @ 0x200002
  4097                           ;	unspecified, using default values
  4098   200002                     	org	2097154
  4099   200002  FF                 	db	255
  4100                           
  4101                           ;Config register IDLOC3 @ 0x200003
  4102                           ;	unspecified, using default values
  4103   200003                     	org	2097155
  4104   200003  FF                 	db	255
  4105                           
  4106                           ;Config register IDLOC4 @ 0x200004
  4107                           ;	unspecified, using default values
  4108   200004                     	org	2097156
  4109   200004  FF                 	db	255
  4110                           
  4111                           ;Config register IDLOC5 @ 0x200005
  4112                           ;	unspecified, using default values
  4113   200005                     	org	2097157
  4114   200005  FF                 	db	255
  4115                           
  4116                           ;Config register IDLOC6 @ 0x200006
  4117                           ;	unspecified, using default values
  4118   200006                     	org	2097158
  4119   200006  FF                 	db	255
  4120                           
  4121                           ;Config register IDLOC7 @ 0x200007
  4122                           ;	unspecified, using default values
  4123   200007                     	org	2097159
  4124   200007  FF                 	db	255
  4125                           
  4126                           	psect	config
  4127                           
  4128                           ; Padding undefined space
  4129   300000                     	org	3145728
  4130   300000  FF                 	db	255
  4131                           
  4132                           ;Config register CONFIG1H @ 0x300001
  4133                           ;	Oscillator Selection bits
  4134                           ;	OSC = HS, HS oscillator
  4135                           ;	Fail-Safe Clock Monitor Enable bit
  4136                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4137                           ;	Internal/External Oscillator Switchover bit
  4138                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4139   300001                     	org	3145729
  4140   300001  02                 	db	2
  4141                           
  4142                           ;Config register CONFIG2L @ 0x300002
  4143                           ;	Power-up Timer Enable bit
  4144                           ;	PWRT = OFF, PWRT disabled
  4145                           ;	Brown-out Reset Enable bits
  4146                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4147                           ;	Brown Out Reset Voltage bits
  4148                           ;	BORV = 0x3, unprogrammed default
  4149   300002                     	org	3145730
  4150   300002  19                 	db	25
  4151                           
  4152                           ;Config register CONFIG2H @ 0x300003
  4153                           ;	Watchdog Timer Enable bit
  4154                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4155                           ;	Watchdog Timer Postscale Select bits
  4156                           ;	WDTPS = 0xF, unprogrammed default
  4157   300003                     	org	3145731
  4158   300003  1E                 	db	30
  4159                           
  4160                           ; Padding undefined space
  4161   300004                     	org	3145732
  4162   300004  FF                 	db	255
  4163                           
  4164                           ;Config register CONFIG3H @ 0x300005
  4165                           ;	CCP2 MUX bit
  4166                           ;	CCP2MX = 0x1, unprogrammed default
  4167                           ;	PORTB A/D Enable bit
  4168                           ;	PBADEN = 0x1, unprogrammed default
  4169                           ;	Low-Power Timer1 Oscillator Enable bit
  4170                           ;	LPT1OSC = 0x0, unprogrammed default
  4171                           ;	MCLR Pin Enable bit
  4172                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4173   300005                     	org	3145733
  4174   300005  83                 	db	131
  4175                           
  4176                           ;Config register CONFIG4L @ 0x300006
  4177                           ;	Stack Full/Underflow Reset Enable bit
  4178                           ;	STVREN = 0x1, unprogrammed default
  4179                           ;	Single-Supply ICSP Enable bit
  4180                           ;	LVP = OFF, Single-Supply ICSP disabled
  4181                           ;	Extended Instruction Set Enable bit
  4182                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4183                           ;	Background Debugger Enable bit
  4184                           ;	DEBUG = 0x1, unprogrammed default
  4185   300006                     	org	3145734
  4186   300006  81                 	db	129
  4187                           
  4188                           ; Padding undefined space
  4189   300007                     	org	3145735
  4190   300007  FF                 	db	255
  4191                           
  4192                           ;Config register CONFIG5L @ 0x300008
  4193                           ;	unspecified, using default values
  4194                           ;	Code Protection bit
  4195                           ;	CP0 = 0x1, unprogrammed default
  4196                           ;	Code Protection bit
  4197                           ;	CP1 = 0x1, unprogrammed default
  4198                           ;	Code Protection bit
  4199                           ;	CP2 = 0x1, unprogrammed default
  4200                           ;	Code Protection bit
  4201                           ;	CP3 = 0x1, unprogrammed default
  4202   300008                     	org	3145736
  4203   300008  0F                 	db	15
  4204                           
  4205                           ;Config register CONFIG5H @ 0x300009
  4206                           ;	unspecified, using default values
  4207                           ;	Boot Block Code Protection bit
  4208                           ;	CPB = 0x1, unprogrammed default
  4209                           ;	Data EEPROM Code Protection bit
  4210                           ;	CPD = 0x1, unprogrammed default
  4211   300009                     	org	3145737
  4212   300009  C0                 	db	192
  4213                           
  4214                           ;Config register CONFIG6L @ 0x30000A
  4215                           ;	unspecified, using default values
  4216                           ;	Write Protection bit
  4217                           ;	WRT0 = 0x1, unprogrammed default
  4218                           ;	Write Protection bit
  4219                           ;	WRT1 = 0x1, unprogrammed default
  4220                           ;	Write Protection bit
  4221                           ;	WRT2 = 0x1, unprogrammed default
  4222                           ;	Write Protection bit
  4223                           ;	WRT3 = 0x1, unprogrammed default
  4224   30000A                     	org	3145738
  4225   30000A  0F                 	db	15
  4226                           
  4227                           ;Config register CONFIG6H @ 0x30000B
  4228                           ;	unspecified, using default values
  4229                           ;	Configuration Register Write Protection bit
  4230                           ;	WRTC = 0x1, unprogrammed default
  4231                           ;	Boot Block Write Protection bit
  4232                           ;	WRTB = 0x1, unprogrammed default
  4233                           ;	Data EEPROM Write Protection bit
  4234                           ;	WRTD = 0x1, unprogrammed default
  4235   30000B                     	org	3145739
  4236   30000B  E0                 	db	224
  4237                           
  4238                           ;Config register CONFIG7L @ 0x30000C
  4239                           ;	unspecified, using default values
  4240                           ;	Table Read Protection bit
  4241                           ;	EBTR0 = 0x1, unprogrammed default
  4242                           ;	Table Read Protection bit
  4243                           ;	EBTR1 = 0x1, unprogrammed default
  4244                           ;	Table Read Protection bit
  4245                           ;	EBTR2 = 0x1, unprogrammed default
  4246                           ;	Table Read Protection bit
  4247                           ;	EBTR3 = 0x1, unprogrammed default
  4248   30000C                     	org	3145740
  4249   30000C  0F                 	db	15
  4250                           
  4251                           ;Config register CONFIG7H @ 0x30000D
  4252                           ;	unspecified, using default values
  4253                           ;	Boot Block Table Read Protection bit
  4254                           ;	EBTRB = 0x1, unprogrammed default
  4255   30000D                     	org	3145741
  4256   30000D  40                 	db	64
  4257                           tosu	equ	0xFFF
  4258                           tosh	equ	0xFFE
  4259                           tosl	equ	0xFFD
  4260                           stkptr	equ	0xFFC
  4261                           pclatu	equ	0xFFB
  4262                           pclath	equ	0xFFA
  4263                           pcl	equ	0xFF9
  4264                           tblptru	equ	0xFF8
  4265                           tblptrh	equ	0xFF7
  4266                           tblptrl	equ	0xFF6
  4267                           tablat	equ	0xFF5
  4268                           prodh	equ	0xFF4
  4269                           prodl	equ	0xFF3
  4270                           indf0	equ	0xFEF
  4271                           postinc0	equ	0xFEE
  4272                           postdec0	equ	0xFED
  4273                           preinc0	equ	0xFEC
  4274                           plusw0	equ	0xFEB
  4275                           fsr0h	equ	0xFEA
  4276                           fsr0l	equ	0xFE9
  4277                           wreg	equ	0xFE8
  4278                           indf1	equ	0xFE7
  4279                           postinc1	equ	0xFE6
  4280                           postdec1	equ	0xFE5
  4281                           preinc1	equ	0xFE4
  4282                           plusw1	equ	0xFE3
  4283                           fsr1h	equ	0xFE2
  4284                           fsr1l	equ	0xFE1
  4285                           bsr	equ	0xFE0
  4286                           indf2	equ	0xFDF
  4287                           postinc2	equ	0xFDE
  4288                           postdec2	equ	0xFDD
  4289                           preinc2	equ	0xFDC
  4290                           plusw2	equ	0xFDB
  4291                           fsr2h	equ	0xFDA
  4292                           fsr2l	equ	0xFD9
  4293                           status	equ	0xFD8

Data Sizes:
    Strings     437
    Constant    13
    Data        4
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     61     104
    BANK0           128    108     108
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    count_characters@message	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), 

    display_sequence@sequence	PTR const unsigned char  size(2) Largest target is 100
		 -> main@read_buffer(BANK0[100]), STR_13(CODE[6]), STR_8(CODE[5]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    i2c_read@data	PTR unsigned char  size(1) Largest target is 100
		 -> main@read_buffer(BANK0[100]), 

    i2c_write@data	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), 

    main@error_message	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_13(CODE[6]), 

    main@message	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_1(CODE[43]), STR_10(CODE[25]), STR_11(CODE[42]), STR_12(CODE[25]), 
		 -> STR_2(CODE[43]), STR_3(CODE[55]), STR_4(CODE[60]), STR_5(CODE[24]), 
		 -> STR_6(CODE[45]), STR_7(CODE[35]), STR_9(CODE[29]), 

    S1155$buffer	PTR unsigned char  size(2) Largest target is 0

    S1155$source	PTR const unsigned char  size(2) Largest target is 0

    serial_memory_read@buffer	PTR unsigned char  size(1) Largest target is 100
		 -> main@read_buffer(BANK0[100]), 

    serial_memory_write@data	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 60
		 -> STR_1(CODE[43]), STR_10(CODE[25]), STR_11(CODE[42]), STR_12(CODE[25]), 
		 -> STR_2(CODE[43]), STR_3(CODE[55]), STR_4(CODE[60]), STR_5(CODE[24]), 
		 -> STR_6(CODE[45]), STR_7(CODE[35]), STR_9(CODE[29]), 

    vfpfcnvrt@cp_1220	PTR unsigned char  size(2) Largest target is 100
		 -> main@read_buffer(BANK0[100]), ?_printf(COMRAM[2]), STR_8(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 60
		 -> STR_1(CODE[43]), STR_10(CODE[25]), STR_11(CODE[42]), STR_12(CODE[25]), 
		 -> STR_2(CODE[43]), STR_3(CODE[55]), STR_4(CODE[60]), STR_5(CODE[24]), 
		 -> STR_6(CODE[45]), STR_7(CODE[35]), STR_9(CODE[29]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_1(CODE[43]), STR_10(CODE[25]), STR_11(CODE[42]), STR_12(CODE[25]), 
		 -> STR_2(CODE[43]), STR_3(CODE[55]), STR_4(CODE[60]), STR_5(CODE[24]), 
		 -> STR_6(CODE[45]), STR_7(CODE[35]), STR_9(CODE[29]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_serial_memory_write
    _serial_memory_write->_i2c_write
    _i2c_write->_printf
    _serial_memory_seek->_printf
    _serial_memory_read->_i2c_read
    _i2c_read->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               110   110      0   28383
                                             59 COMRAM     2     2      0
                                              0 BANK0    108   108      0
                         _I2C_INICIA
                   _count_characters
                   _display_sequence
                               _init
                           _initUART
                             _printf
                 _serial_memory_read
                 _serial_memory_seek
                _serial_memory_write
 ---------------------------------------------------------------------------------
 (1) _serial_memory_write                                  6     2      4    9015
                                             53 COMRAM     6     2      4
                          _i2c_write
                             _printf
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                           10     4      6    4668
                                             43 COMRAM    10     4      6
                          _I2C_START
                           _I2C_STOP
                      _I2C_TRANSMITE
                             _printf
 ---------------------------------------------------------------------------------
 (1) _serial_memory_seek                                   5     2      3    4438
                                             43 COMRAM     5     2      3
                             _printf
 ---------------------------------------------------------------------------------
 (1) _serial_memory_read                                   3     0      3    9082
                                             52 COMRAM     3     0      3
                           _i2c_read
                             _printf
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             9     4      5    4735
                                             43 COMRAM     9     4      5
                            _I2C_ACK
                           _I2C_NACK
                         _I2C_RECEBE
                        _I2C_RESTART
                          _I2C_START
                           _I2C_STOP
                      _I2C_TRANSMITE
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              11     3      8    4129
                                             34 COMRAM     9     1      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     2      5    3237
                                             27 COMRAM     7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           17    13      4    2879
                                             10 COMRAM    17    13      4
                            ___lwdiv
                            ___lwmod
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1108
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _I2C_TRANSMITE                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_STOP                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_START                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_RESTART                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_RECEBE                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_sequence                                    17    14      3    1226
                                              0 COMRAM    17    14      3
 ---------------------------------------------------------------------------------
 (1) _count_characters                                     8     6      2     146
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _I2C_INICIA                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_INICIA
   _count_characters
   _display_sequence
   _init
   _initUART
   _printf
     _vfprintf
       _vfpfcnvrt
         ___lwdiv
         ___lwmod
         _fputc
           _putch
   _serial_memory_read
     _i2c_read
       _I2C_ACK
       _I2C_NACK
       _I2C_RECEBE
       _I2C_RESTART
       _I2C_START
       _I2C_STOP
       _I2C_TRANSMITE
       _printf
     _printf
   _serial_memory_seek
     _printf
   _serial_memory_write
     _i2c_write
       _I2C_START
       _I2C_STOP
       _I2C_TRANSMITE
       _printf
     _printf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     6C      6C       5       84.4%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3D      68       1       81.9%
BITBIGSFRhhhhhh     36      0       0      16        0.0%
BITBIGSFRhll        15      0       0      21        0.0%
BITBIGSFRlllh        8      0       0      24        0.0%
BITBIGSFRhhhl        8      0       0      18        0.0%
BITBIGSFRhhl         7      0       0      19        0.0%
BITBIGSFRlh          6      0       0      22        0.0%
BITBIGSFRhhhhl       3      0       0      17        0.0%
BITBIGSFRllh         1      0       0      23        0.0%
BITBIGSFRhlh         1      0       0      20        0.0%
BITBIGSFRllll        1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D4      26        0.0%
DATA                 0      0      D4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed May 22 09:11:07 2024

                  _SSPSTATbits 0FC7                             l61 6040                             l55 6074  
                           l81 612C                             l58 602E                             l76 6564  
                           l68 6670                             l77 658E                             l85 6264  
                           l94 63E2                             l89 6342                            l100 61B8  
                          l101 61C0                            l104 605A                            l113 667A  
                          l201 5FDE                            l210 60B6                            l204 609A  
                          l221 6002                            l150 6A26                            l231 61C4  
                          l207 60A8                            l136 6868                            l240 6008  
                          l152 6A18                            l234 61D2                            l218 5FF4  
                          l243 6016                            l236 61E0                            l237 6212  
                          l157 6A68                            l246 601C                            l183 5FCC  
                          l192 5FE2                            l249 602A                            l195 5FF0  
                          l198 5FD0                            l750 633C                            l743 6334  
                          l760 62C8                            l753 62C0                            l930 6092  
                          l967 6E3A                            l991 6172                            u800 603C  
                          u801 6038                            u810 62E4                            u811 62E0  
                          u820 6302                            u900 6466                            u821 62FE  
                          u901 6462                            u830 631E                            u910 6AA0  
                          u831 631A                            u911 6A9C                            u840 6278  
                          u920 6AE6                            u841 6274                            u921 6AE2  
                          u850 6296                            u930 6B02                            u851 6292  
                          u931 6AFE                            u860 62AC                            u940 6B8E  
                          u861 62A8                            u941 6B8A                            u870 63F6  
                          u950 6B9E                            u871 63F2                            u951 6B9A  
                          u880 6408                            u960 6BD4                            u881 6404  
                          u961 6BD0                            u890 6430                            u970 6BF2  
                          u891 642C                            u971 6BEE                            u980 6C30  
                          u981 6C2C                            u990 6C40                            u991 6C3C  
              __end_of_I2C_ACK 6018                            wreg 0FE8                           l1003 64AC  
                         l2001 69D4                           l2011 6A4C                           l2003 69E2  
                         l2013 6A5A                           l2005 69FA                           l2007 6A08  
                         l2009 6A34                           l1601 6430                           l1603 6466  
                         l1611 6AAC                           l1621 6B02                           l1613 6AB8  
                         l1701 6E14                           l1551 602E                           l1631 6B7C  
                         l1623 6B1A                           l1615 6ABC                           l1607 6A7E  
                         l1711 614E                           l1801 605C                           l1561 62EC  
                         l1553 603C                           l1641 6BD8                           l1633 6B8E  
                         l1625 6B38                           l1617 6ACA                           l1609 6AA0  
                         l1713 616A                           l1721 6076                           l1811 606E  
                         l1803 6060                           l1731 61C2                           l1571 6326  
                         l1563 62F4                           l1555 62CA                           l1651 6BFE  
                         l1643 6BDC                           l1635 6BA2                           l1627 6B3C  
                         l1619 6AE6                           l1707 612E                           l1723 607A  
                         l1901 66FA                           l1813 6070                           l1805 6068  
                         l1733 6210                           l1717 5FE0                           l1573 6328  
                         l1565 6302                           l1557 62D2                           l1581 6280  
                         l1661 6C62                           l1653 6C0C                           l1645 6BE2  
                         l1637 6BC0                           l1629 6B60                           l1709 613A  
                         l1821 610C                           l1741 6590                           l1911 6750  
                         l1903 670C                           l1815 6072                           l1807 606A  
                         l1727 5FF2                           l1719 6096                           l1575 632E  
                         l1567 6308                           l1559 62E4                           l1591 62BA  
                         l1583 6288                           l1671 6C9E                           l1663 6C64  
                         l1655 6C1E                           l1647 6BF2                           l1639 6BC2  
                         l1751 65B2                           l1743 659C                           l1831 6214  
                         l1921 67B0                           l1913 6760                           l1905 671C  
                         l1809 606C                           l1737 6004                           l1729 5FCE  
                         l1569 631E                           l1585 6296                           l1577 6266  
                         l1593 63E4                           l1681 6D28                           l1673 6CC0  
                         l1657 6C30                           l1649 6BFA                           l1825 6112  
                         l1817 60EE                           l1761 663A                           l1745 65A0  
                         l1841 6262                           l1833 6234                           l1907 672E  
                         l1915 676C                           l1739 6018                           l1587 62AC  
                         l1579 6278                           l1595 63F6                           l1691 6D98  
                         l1683 6D5A                           l1675 6CCC                           l1659 6C44  
                         l1667 6C7A                           l1771 64BA                           l1827 612A  
                         l1819 6100                           l1851 636E                           l1763 664A  
                         l1755 65DE                           l1747 65A6                           l1835 6240  
                         l1941 681C                           l1933 67B8                           l1909 673E  
                         l1917 676E                           l1589 62B4                           l1597 6408  
                         l1693 6DCC                           l1677 6CD4                           l1669 6C9A  
                         l1781 64DA                           l1773 64BE                           l1853 637A  
                         l1861 639E                           l1845 633E                           l1765 6656  
                         l1757 65FA                           l1749 65AC                           l1951 6844  
                         l1943 682C                           l1935 67D0                           l1927 67B4  
                         l1919 677E                           l1599 6412                           l1695 6DD0  
                         l1679 6CF6                           l1687 6D6C                           l1791 6558  
                         l1783 64E8                           l1775 64C4                           l1871 63D8  
                         l1863 63B0                           l1847 634E                           l1759 6636  
                         l1767 665A                           l1839 6246                           l1881 6190  
                         l1953 6854                           l1945 6830                           l1937 67D8  
                         l1689 6D7C                           l1697 6E04                           l1793 6560  
                         l1777 64CA                           l1769 64AE                           l1873 63E0  
                         l1849 635E                           l1961 686A                           l1947 6832  
                         l1939 67F8                           l1891 668A                           l1955 6856  
                         l1883 6042                           l1795 6568                           l1787 6504  
                         l1779 64D0                           l1859 6380                           l1971 68C6  
                         l1963 6876                           l1957 5FBE                           l1877 6174  
                         l1949 6842                           l1893 6692                           l1885 6056  
                         l1797 6574                           l1789 6536                           l1869 63C0  
                         l1981 6922                           l1973 68D2                           l1965 6880  
                         l1959 5FC0                           l1879 6188                           l1895 66C8  
                         l1887 6058                           l1799 6578                           l1991 6988  
                         l1983 6942                           l1975 68DC                           l1967 6888  
                         l1897 66D8                           l1889 6672                           l1993 699E  
                         l1985 6952                           l1977 6900                           l1969 689C  
                         l1899 66E8                           l1995 69A8                           l1987 695C  
                         l1979 6918                           l1997 69BC                           l1989 697C  
                         l1999 69C4                           STR_1 6F15                           STR_2 6EEA  
                         STR_3 6E86                           STR_4 6E4A                           STR_5 6FDC  
                         STR_6 6EBD                           STR_7 6F6A                           STR_8 6FFA  
                         STR_9 6F8D                           u1000 6C76                           u1001 6C72  
                         u1010 6CC0                           u1011 6CBC                           u1100 5FF0  
                         u1020 6CF6                           u1101 5FEC                           u1021 6CF2  
                         u1110 60A8                           u1030 6D28                           u1111 60A4  
                         u1031 6D24                           u1120 60B6                           u1040 6D5A  
                         u1200 6670                           u1121 60B2                           u1041 6D56  
                         u1201 666C                           u1130 6002                           u1050 6D7C  
                         u1210 6500                           u1131 5FFE                           u1051 6D78  
                         u1211 64FC                           u1300 66E8                           u1140 5FDE  
                         u1060 6DB8                           u1220 6558                           u1301 66E4  
                         u1141 5FDA                           u1221 6554                           u1310 670C  
                         u1150 61D2                           u1070 6DF0                           u1230 658E  
                         u1311 6708                           u1151 61CE                           u1231 658A  
                         u1400 6868                           u1320 672E                           u1160 61E0  
                         u1080 6E00                           u1240 6100                           u1401 6864  
                         u1321 672A                           u1161 61DC                           u1081 6DFC  
                         u1241 60FC                           u1330 6750                           u1170 6016  
                         u1090 616A                           u1250 6234                           u1410 68C6  
                         u1331 674C                           u1171 6012                           u1067 6DAE  
                         u1091 6166                           u1251 6230                           u1411 68C2  
                         u1340 677E                           u1180 602A                           u1260 63B0  
                         u1500 6A5A                           u1420 6900                           u1341 677A  
                         u1181 6026                           u1077 6DE6                           u1261 63AC  
                         u1501 6A56                           u1421 68FC                           u1270 61B8  
                         u1350 67B0                           u1190 65DA                           u1510 6A76  
                         u1430 6942                           _LATB 0F8A                           u1271 61B4  
                         u1351 67AC                           u1191 65D6                           u1511 6A72  
                         u1431 693E                           u1360 67D0                           u1280 66C6  
                         u1440 697C                           _LATD 0F8C                           u1361 67CC  
                         u1441 6978                           u1290 66D8                           u1450 69BC  
                         u1291 66D4                           u1451 69B8                           u1380 6842  
                         u1460 69E2                           u1381 683E                           u1461 69DE  
                         u1390 6854                           u1374 680E                           u1470 6A08  
                         u1391 6850                           u1375 680A                           u1287 66BC  
                         u1471 6A04                           u1480 6A26                           u1481 6A22  
                         u1490 6A34                           u1491 6A30                           u1547 69EC  
                         u1557 6A3E                           u1567 6640                           u1577 6822  
                  main@message 00E8               __end_of_I2C_NACK 602C                           _dbuf 003E  
             __end_of_I2C_STOP 6004                           _main 686A                           _init 6042  
                         _prec 0060                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf1 0FE7                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           start 0000                     i2c_write@i 0034  
                 ___param_bank 0000              main@error_message 00E4                          ?_main 0001  
                        ?_init 0001                          STR_10 6FC3                          STR_11 6F40  
                        STR_12 6FAA                          STR_13 6FF4                __end_of___lwdiv 633E  
              __end_of___lwmod 62CA                   vfpfcnvrt@fmt 000D                          _SPBRG 0FAF  
                        _TRISB 0F93                          _TRISC 0F94                          _TRISD 0F95  
                 main@erro_mem 00E6                          _TXREG 0FAD              __end_of_I2C_START 5FF2  
                        _flags 0064                          _fputc 63E4                          _width 005E  
                        _putch 602C       __end_of_display_sequence 686A                          tablat 0FF5  
                        status 0FD8                  _I2C_TRANSMITE 6094    serial_memory_read@num_bytes 0036  
              __initialization 60B8                   __end_of_main 6A7E                   __end_of_init 605C  
             __end_of_i2c_read 6590                      ??_I2C_ACK 0001               _count_characters 6174  
                       ??_main 003C                         ??_init 0001          display_sequence@F2951 0065  
                __activetblptr 0002                   ??_I2C_INICIA 0001                   ??_I2C_RECEBE 0001  
        display_sequence@j_470 000F                         _ADCON1 0FC1                         ?_fputc 0002  
                       ?_putch 0001                   i2c_read@data 002E                 ?_I2C_TRANSMITE 0001  
                vfpfcnvrt@done 0011                         _SPBRGH 0FB0                         _SSPADD 0FC8  
                       _SSPBUF 0FC9             __end_of_I2C_INICIA 5FCE             __end_of_I2C_RECEBE 6214  
                 vfprintf@cfmt 0021               __end_of_initUART 6076                      ??___lwdiv 0005  
                    ??___lwmod 0005                         clear_0 60DE                         isa$std 0001  
                       _printf 6076                      ?_I2C_NACK 0001                      ?_I2C_STOP 0001  
                       fputc@c 0002                   __pdataCOMRAM 0065                   __mediumconst 6E3C  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
             __end_of_vfprintf 6174                     __accesstop 0080        __end_of__initialization 60E4  
                ___rparam_used 0001                _current_pointer 0062                 __pcstackCOMRAM 0001  
                __end_of_fputc 64AE                  __end_of_putch 6042   serial_memory_write@num_bytes 0038  
                   ??_I2C_NACK 0001              __end_of_i2c_write 6672                     ??_I2C_STOP 0001  
                      ??_fputc 0006                ??_I2C_TRANSMITE 0001                        ??_putch 0001  
           main@message_length 00EA                      ?_i2c_read 002C                  ??_I2C_RESTART 0001  
                      _I2C_ACK 6004         display_sequence@digits 0009                        ?_printf 0023  
       display_sequence@length 0003                        _SSPCON1 0FC6                        _SSPCON2 0FC5  
                      _SSPSTAT 0FC7              ?_display_sequence 0001                      ?_initUART 0001  
     __end_of_count_characters 61C2                     ??_i2c_read 0031                      _I2C_START 5FE0  
           ??_display_sequence 0004        count_characters@message 0001                        __Hparam 0000  
                      __Lparam 0000            __end_of_I2C_RESTART 5FE0                        ___lwdiv 62CA  
                      ___lwmod 6266                      ?_vfprintf 001C                        __pcinit 60B8  
                      __ramtop 0600                i2c_read@address 002C                        __ptext0 686A  
                      __ptext1 6214                        __ptext2 6590                        __ptext3 633E  
                      __ptext4 60EE                        __ptext5 64AE                        __ptext6 6076  
                      __ptext7 612E                        __ptext8 6A7E                        __ptext9 63E4  
      serial_memory_write@data 0036       display_sequence@sequence 0001           end_of_initialization 60E4  
                   ??_initUART 0001                     ?_I2C_START 0001                        fputc@fp 0004  
                __Lmediumconst 6E3C               vfpfcnvrt@cp_1220 0012          I2C_TRANSMITE@DADO_I2C 0001  
            __end_of_vfpfcnvrt 6E3C     __end_of_serial_memory_read 612E     __end_of_serial_memory_seek 63E4  
                    _RCSTAbits 0FAB                        postdec1 0FE5                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0017                     ??_vfprintf 0021                      _PORTBbits 0F81  
                i2c_write@data 002E                      _TRISBbits 0F93                      _TRISCbits 0F94  
                    i2c_read@i 0033                      _TXSTAbits 0FAC                    _I2C_RESTART 5FCE  
          _serial_memory_write 6214                    vfpfcnvrt@ap 000E                    vfpfcnvrt@cp 0015  
                  vfpfcnvrt@fp 000B                    _BAUDCONbits 0FB8                  __pidataCOMRAM 5FBA  
               __end_of_printf 6094           ?_serial_memory_write 0036            start_initialization 60B8  
     serial_memory_read@buffer 0035                      _i2c_write 6590                    ??_I2C_START 0001  
        count_characters@count 0005                    vfprintf@fmt 001E                    I2C_RECEBE@x 0001  
                     ?_I2C_ACK 0001                       ??_printf 002B       serial_memory_seek@offset 002C  
     serial_memory_seek@origin 002E          ??_serial_memory_write 003A                    __pbssCOMRAM 003E  
                __pcstackBANK0 0080                     ?_i2c_write 002C             display_sequence@ch 0010  
        __end_of_I2C_TRANSMITE 60B8              ?_count_characters 0001             ??_count_characters 0003  
             ___lwdiv@dividend 0001                  __pmediumconst 6E3C                       ?___lwdiv 0001  
                     ?___lwmod 0001                       _I2C_NACK 6018                       _I2C_STOP 5FF2  
             ___lwdiv@quotient 0005        display_sequence@refresh 000D                 i2c_read@length 002F  
                    _vfpfcnvrt 6A7E                     _I2C_INICIA 5FBE                     _I2C_RECEBE 61C2  
           _serial_memory_read 60EE             _serial_memory_seek 633E                main@read_buffer 0080  
                  ??_i2c_write 0032                     vfpfcnvrt@c 001B  serial_memory_seek@new_pointer 002F  
                   vfpfcnvrt@x 0014                      copy_data0 60CC            ?_serial_memory_read 0035  
          ?_serial_memory_seek 002C                       _i2c_read 64AE            __end_of_segment_map 6E4A  
                 ?_I2C_RESTART 0001                       __Hrparam 0000                     vfprintf@ap 0020  
                     __Lrparam 0000                     vfprintf@fp 001C           ??_serial_memory_read 0038  
         ??_serial_memory_seek 002F                     ?_vfpfcnvrt 000B              display_sequence@i 000E  
            display_sequence@j 0011                ___lwdiv@divisor 0003                ___lwdiv@counter 0007  
                     __ptext10 602C                       __ptext11 6266                       __ptext20 605C  
                     __ptext12 62CA                       __ptext21 6042                       __ptext13 6094  
                     __ptext22 6672                       __ptext14 5FF2                       __ptext23 6174  
                     __ptext15 5FE0                       __ptext24 5FBE                       __ptext16 5FCE  
                     __ptext17 61C2                       __ptext18 6018                       __ptext19 6004  
                     _initUART 605C                       isa$xinst 0000               _display_sequence 6672  
                     _vfprintf 612E                      printf@fmt 0023                    ?_I2C_INICIA 0001  
                  ?_I2C_RECEBE 0001                      putch@byte 0001                    _segment_map 6E3D  
            count_characters@i 0007               ___lwmod@dividend 0001                       printf@ap 002B  
  __end_of_serial_memory_write 6266                    ??_vfpfcnvrt 000F                ___lwmod@divisor 0003  
              ___lwmod@counter 0005               i2c_write@address 002C                    _SSPCON2bits 0FC5  
              i2c_write@length 0030  
